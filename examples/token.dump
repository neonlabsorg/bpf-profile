-rwx------ 2 walk walk 236336 мая 18 1154 /home/walk/projects/current/solana-program-library/target/bpfel-unknown-unknown/release/spl_token.so
ELF Header
  Magic   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00
  Class                             ELF64
  Data                              2's complement, little endian
  Version                           1 (current)
  OS/ABI                            UNIX - System V
  ABI Version                       0
  Type                              DYN (Shared object file)
  Machine                           EM_BPF
  Version                           0x1
  Entry point address               0x15258
  Start of program headers          64 (bytes into file)
  Start of section headers          235376 (bytes into file)
  Flags                             0x0
  Size of this header               64 (bytes)
  Size of program headers           56 (bytes)
  Number of program headers         3
  Size of section headers           64 (bytes)
  Number of section headers         15
  Section header string table index 13
There are 15 section headers, starting at offset 0x39770

Section Headers
  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            0000000000000000 000000 000000 00      0   0  0
  [ 1] .text             PROGBITS        00000000000000e8 0000e8 0202a0 00  AX  0   0  8
  [ 2] .dynsym           DYNSYM          0000000000020388 020388 000078 18   A  5   1  8
  [ 3] .gnu.hash         GNU_HASH        0000000000020400 020400 000024 00   A  2   0  8
  [ 4] .hash             HASH            0000000000020424 020424 000030 04   A  2   0  4
  [ 5] .dynstr           STRTAB          0000000000020454 020454 000028 00   A  0   0  1
  [ 6] .rel.dyn          REL             0000000000020480 020480 0029a0 10   A  2   0  8
  [ 7] .rodata           PROGBITS        0000000000022e20 022e20 0019bd 00  AM  0   0 16
  [ 8] .eh_frame         PROGBITS        00000000000247e0 0247e0 0000bc 00   A  0   0  8
  [ 9] .data.rel.ro      PROGBITS        00000000000248a0 0248a0 000bf8 00  WA  0   0  8
  [10] .dynamic          DYNAMIC         0000000000025498 025498 0000d0 10  WA  5   0  8
  [11] .comment          PROGBITS        0000000000000000 025568 00006e 01  MS  0   0  1
  [12] .symtab           SYMTAB          0000000000000000 0255d8 00ae30 18     14 1854  8
  [13] .shstrtab         STRTAB          0000000000000000 030408 00007b 00      0   0  1
  [14] .strtab           STRTAB          0000000000000000 030483 0092e6 00      0   0  1
Key to Flags
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Elf file type is DYN (Shared object file)
Entry point 0x15258
There are 3 program headers, starting at offset 64

Program Headers
  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align
  LOAD           0x0000e8 0x00000000000000e8 0x00000000000000e8 0x022d38 0x022d38 R E 0x1000
  LOAD           0x022e20 0x0000000000022e20 0x0000000000022e20 0x002678 0x002678 RW  0x1000
  DYNAMIC        0x025498 0x0000000000025498 0x0000000000025498 0x0000d0 0x0000d0 RW  0x8

 Section to Segment mapping
  Segment Sections...
   00     .text .dynsym .gnu.hash .hash .dynstr .rel.dyn
   01     .rodata .eh_frame .data.rel.ro
   02     .dynamic
   None   .comment .symtab .shstrtab .strtab
Dynamic section at offset 0x25498 contains 13 entries
  Tag                Type       Name/Value
  0x000000000000001e (FLAGS)    TEXTREL
  0x0000000000000011 (REL)      0x20480
  0x0000000000000012 (RELSZ)    10656 (bytes)
  0x0000000000000013 (RELENT)   16 (bytes)
  0x000000006ffffffa (RELCOUNT) 528
  0x0000000000000006 (SYMTAB)   0x20388
  0x000000000000000b (SYMENT)   24 (bytes)
  0x0000000000000005 (STRTAB)   0x20454
  0x000000000000000a (STRSZ)    40 (bytes)
  0x0000000000000016 (TEXTREL)  0x0
  0x000000006ffffef5 (GNU_HASH) 0x20400
  0x0000000000000004 (HASH)     0x20424
  0x0000000000000000 (NULL)     0x0

Relocation section '.rel.dyn' at offset 0x20480 contains 666 entries
    Offset             Info             Type               Symbol's Value  Symbol's Name
0000000000000400  0000000000000008 R_BPF_64_RELATIVE
0000000000000418  0000000000000008 R_BPF_64_RELATIVE
0000000000000428  0000000000000008 R_BPF_64_RELATIVE
0000000000000848  0000000000000008 R_BPF_64_RELATIVE
0000000000000860  0000000000000008 R_BPF_64_RELATIVE
0000000000000870  0000000000000008 R_BPF_64_RELATIVE
0000000000000e38  0000000000000008 R_BPF_64_RELATIVE
0000000000000e50  0000000000000008 R_BPF_64_RELATIVE
0000000000000e60  0000000000000008 R_BPF_64_RELATIVE
0000000000001380  0000000000000008 R_BPF_64_RELATIVE
0000000000001398  0000000000000008 R_BPF_64_RELATIVE
00000000000013a8  0000000000000008 R_BPF_64_RELATIVE
00000000000019a8  0000000000000008 R_BPF_64_RELATIVE
00000000000019c0  0000000000000008 R_BPF_64_RELATIVE
00000000000019d0  0000000000000008 R_BPF_64_RELATIVE
0000000000001f00  0000000000000008 R_BPF_64_RELATIVE
0000000000001f18  0000000000000008 R_BPF_64_RELATIVE
0000000000001f28  0000000000000008 R_BPF_64_RELATIVE
0000000000002bc8  0000000000000008 R_BPF_64_RELATIVE
0000000000002be0  0000000000000008 R_BPF_64_RELATIVE
0000000000002bf0  0000000000000008 R_BPF_64_RELATIVE
0000000000002df0  0000000000000008 R_BPF_64_RELATIVE
0000000000003178  0000000000000008 R_BPF_64_RELATIVE
0000000000003190  0000000000000008 R_BPF_64_RELATIVE
00000000000031a0  0000000000000008 R_BPF_64_RELATIVE
0000000000003600  0000000000000008 R_BPF_64_RELATIVE
0000000000003618  0000000000000008 R_BPF_64_RELATIVE
0000000000003628  0000000000000008 R_BPF_64_RELATIVE
0000000000003be8  0000000000000008 R_BPF_64_RELATIVE
0000000000003c00  0000000000000008 R_BPF_64_RELATIVE
0000000000003c10  0000000000000008 R_BPF_64_RELATIVE
0000000000004080  0000000000000008 R_BPF_64_RELATIVE
0000000000004098  0000000000000008 R_BPF_64_RELATIVE
00000000000040a8  0000000000000008 R_BPF_64_RELATIVE
00000000000043b8  0000000000000008 R_BPF_64_RELATIVE
00000000000043d0  0000000000000008 R_BPF_64_RELATIVE
00000000000043e0  0000000000000008 R_BPF_64_RELATIVE
0000000000004610  0000000000000008 R_BPF_64_RELATIVE
0000000000004628  0000000000000008 R_BPF_64_RELATIVE
0000000000004638  0000000000000008 R_BPF_64_RELATIVE
00000000000048b8  0000000000000008 R_BPF_64_RELATIVE
00000000000048d0  0000000000000008 R_BPF_64_RELATIVE
00000000000048e0  0000000000000008 R_BPF_64_RELATIVE
0000000000004cc8  0000000000000008 R_BPF_64_RELATIVE
0000000000004ce0  0000000000000008 R_BPF_64_RELATIVE
0000000000004cf0  0000000000000008 R_BPF_64_RELATIVE
0000000000005210  0000000000000008 R_BPF_64_RELATIVE
0000000000005228  0000000000000008 R_BPF_64_RELATIVE
0000000000005238  0000000000000008 R_BPF_64_RELATIVE
00000000000056c0  0000000000000008 R_BPF_64_RELATIVE
00000000000056d8  0000000000000008 R_BPF_64_RELATIVE
00000000000056e8  0000000000000008 R_BPF_64_RELATIVE
0000000000005a78  0000000000000008 R_BPF_64_RELATIVE
0000000000005a90  0000000000000008 R_BPF_64_RELATIVE
0000000000005aa0  0000000000000008 R_BPF_64_RELATIVE
0000000000006230  0000000000000008 R_BPF_64_RELATIVE
0000000000006248  0000000000000008 R_BPF_64_RELATIVE
0000000000006258  0000000000000008 R_BPF_64_RELATIVE
0000000000006658  0000000000000008 R_BPF_64_RELATIVE
0000000000006670  0000000000000008 R_BPF_64_RELATIVE
0000000000006680  0000000000000008 R_BPF_64_RELATIVE
0000000000006708  0000000000000008 R_BPF_64_RELATIVE
0000000000006720  0000000000000008 R_BPF_64_RELATIVE
0000000000006730  0000000000000008 R_BPF_64_RELATIVE
00000000000076b0  0000000000000008 R_BPF_64_RELATIVE
00000000000076c8  0000000000000008 R_BPF_64_RELATIVE
00000000000076d8  0000000000000008 R_BPF_64_RELATIVE
0000000000007c88  0000000000000008 R_BPF_64_RELATIVE
0000000000007ca0  0000000000000008 R_BPF_64_RELATIVE
0000000000007cb0  0000000000000008 R_BPF_64_RELATIVE
0000000000008300  0000000000000008 R_BPF_64_RELATIVE
0000000000008318  0000000000000008 R_BPF_64_RELATIVE
0000000000008328  0000000000000008 R_BPF_64_RELATIVE
0000000000008880  0000000000000008 R_BPF_64_RELATIVE
0000000000008898  0000000000000008 R_BPF_64_RELATIVE
00000000000088a8  0000000000000008 R_BPF_64_RELATIVE
00000000000090b8  0000000000000008 R_BPF_64_RELATIVE
00000000000090d0  0000000000000008 R_BPF_64_RELATIVE
00000000000090e0  0000000000000008 R_BPF_64_RELATIVE
00000000000092c8  0000000000000008 R_BPF_64_RELATIVE
00000000000092e0  0000000000000008 R_BPF_64_RELATIVE
00000000000092f0  0000000000000008 R_BPF_64_RELATIVE
0000000000009770  0000000000000008 R_BPF_64_RELATIVE
0000000000009788  0000000000000008 R_BPF_64_RELATIVE
0000000000009798  0000000000000008 R_BPF_64_RELATIVE
0000000000009bf8  0000000000000008 R_BPF_64_RELATIVE
0000000000009c10  0000000000000008 R_BPF_64_RELATIVE
0000000000009c20  0000000000000008 R_BPF_64_RELATIVE
000000000000a3c0  0000000000000008 R_BPF_64_RELATIVE
000000000000a3d8  0000000000000008 R_BPF_64_RELATIVE
000000000000a3e8  0000000000000008 R_BPF_64_RELATIVE
000000000000a810  0000000000000008 R_BPF_64_RELATIVE
000000000000a828  0000000000000008 R_BPF_64_RELATIVE
000000000000a838  0000000000000008 R_BPF_64_RELATIVE
000000000000ac70  0000000000000008 R_BPF_64_RELATIVE
000000000000ac88  0000000000000008 R_BPF_64_RELATIVE
000000000000ac98  0000000000000008 R_BPF_64_RELATIVE
000000000000b3d8  0000000000000008 R_BPF_64_RELATIVE
000000000000b3f0  0000000000000008 R_BPF_64_RELATIVE
000000000000b400  0000000000000008 R_BPF_64_RELATIVE
000000000000b4a8  0000000000000008 R_BPF_64_RELATIVE
000000000000b4c0  0000000000000008 R_BPF_64_RELATIVE
000000000000b4d0  0000000000000008 R_BPF_64_RELATIVE
000000000000b6e0  0000000000000008 R_BPF_64_RELATIVE
000000000000b6f8  0000000000000008 R_BPF_64_RELATIVE
000000000000b708  0000000000000008 R_BPF_64_RELATIVE
000000000000baf0  0000000000000008 R_BPF_64_RELATIVE
000000000000bb08  0000000000000008 R_BPF_64_RELATIVE
000000000000bb18  0000000000000008 R_BPF_64_RELATIVE
000000000000c038  0000000000000008 R_BPF_64_RELATIVE
000000000000c050  0000000000000008 R_BPF_64_RELATIVE
000000000000c060  0000000000000008 R_BPF_64_RELATIVE
000000000000c550  0000000000000008 R_BPF_64_RELATIVE
000000000000c568  0000000000000008 R_BPF_64_RELATIVE
000000000000c578  0000000000000008 R_BPF_64_RELATIVE
000000000000c8f0  0000000000000008 R_BPF_64_RELATIVE
000000000000c9c8  0000000000000008 R_BPF_64_RELATIVE
000000000000ca28  0000000000000008 R_BPF_64_RELATIVE
000000000000ca80  0000000000000008 R_BPF_64_RELATIVE
000000000000cae0  0000000000000008 R_BPF_64_RELATIVE
000000000000cb80  0000000000000008 R_BPF_64_RELATIVE
000000000000cbe0  0000000000000008 R_BPF_64_RELATIVE
000000000000cc28  0000000000000008 R_BPF_64_RELATIVE
000000000000cc68  0000000000000008 R_BPF_64_RELATIVE
000000000000cca8  0000000000000008 R_BPF_64_RELATIVE
000000000000cd20  0000000000000008 R_BPF_64_RELATIVE
000000000000cd98  0000000000000008 R_BPF_64_RELATIVE
000000000000ce10  0000000000000008 R_BPF_64_RELATIVE
000000000000ce68  0000000000000008 R_BPF_64_RELATIVE
000000000000cfc0  0000000000000008 R_BPF_64_RELATIVE
000000000000d030  0000000000000008 R_BPF_64_RELATIVE
000000000000d080  0000000000000008 R_BPF_64_RELATIVE
000000000000d2b8  0000000000000008 R_BPF_64_RELATIVE
000000000000d2d0  0000000000000008 R_BPF_64_RELATIVE
000000000000d2e0  0000000000000008 R_BPF_64_RELATIVE
000000000000dc48  0000000000000008 R_BPF_64_RELATIVE
000000000000dc70  0000000000000008 R_BPF_64_RELATIVE
000000000000df38  0000000000000008 R_BPF_64_RELATIVE
000000000000df50  0000000000000008 R_BPF_64_RELATIVE
000000000000e7e0  0000000000000008 R_BPF_64_RELATIVE
000000000000e7f8  0000000000000008 R_BPF_64_RELATIVE
000000000000ee30  0000000000000008 R_BPF_64_RELATIVE
000000000000f608  0000000000000008 R_BPF_64_RELATIVE
000000000000f678  0000000000000008 R_BPF_64_RELATIVE
000000000000f6c0  0000000000000008 R_BPF_64_RELATIVE
000000000000f718  0000000000000008 R_BPF_64_RELATIVE
000000000000f7b8  0000000000000008 R_BPF_64_RELATIVE
000000000000f800  0000000000000008 R_BPF_64_RELATIVE
000000000000f878  0000000000000008 R_BPF_64_RELATIVE
000000000000f890  0000000000000008 R_BPF_64_RELATIVE
000000000000f8a0  0000000000000008 R_BPF_64_RELATIVE
000000000000fa70  0000000000000008 R_BPF_64_RELATIVE
000000000000faa8  0000000000000008 R_BPF_64_RELATIVE
000000000000fad8  0000000000000008 R_BPF_64_RELATIVE
000000000000fb08  0000000000000008 R_BPF_64_RELATIVE
000000000000fb28  0000000000000008 R_BPF_64_RELATIVE
000000000000fb50  0000000000000008 R_BPF_64_RELATIVE
000000000000fb78  0000000000000008 R_BPF_64_RELATIVE
000000000000fba0  0000000000000008 R_BPF_64_RELATIVE
000000000000fbe0  0000000000000008 R_BPF_64_RELATIVE
000000000000fc00  0000000000000008 R_BPF_64_RELATIVE
000000000000fc20  0000000000000008 R_BPF_64_RELATIVE
000000000000fc40  0000000000000008 R_BPF_64_RELATIVE
000000000000fc60  0000000000000008 R_BPF_64_RELATIVE
000000000000fc80  0000000000000008 R_BPF_64_RELATIVE
000000000000fca0  0000000000000008 R_BPF_64_RELATIVE
000000000000fcc0  0000000000000008 R_BPF_64_RELATIVE
00000000000116b8  0000000000000008 R_BPF_64_RELATIVE
0000000000011c60  0000000000000008 R_BPF_64_RELATIVE
0000000000011e88  0000000000000008 R_BPF_64_RELATIVE
00000000000128c0  0000000000000008 R_BPF_64_RELATIVE
0000000000012b50  0000000000000008 R_BPF_64_RELATIVE
0000000000013720  0000000000000008 R_BPF_64_RELATIVE
00000000000138b0  0000000000000008 R_BPF_64_RELATIVE
00000000000138e0  0000000000000008 R_BPF_64_RELATIVE
0000000000013b90  0000000000000008 R_BPF_64_RELATIVE
0000000000013bc8  0000000000000008 R_BPF_64_RELATIVE
0000000000013bf8  0000000000000008 R_BPF_64_RELATIVE
0000000000013c28  0000000000000008 R_BPF_64_RELATIVE
0000000000013c58  0000000000000008 R_BPF_64_RELATIVE
0000000000013c88  0000000000000008 R_BPF_64_RELATIVE
0000000000013cb8  0000000000000008 R_BPF_64_RELATIVE
0000000000013ce0  0000000000000008 R_BPF_64_RELATIVE
0000000000013d00  0000000000000008 R_BPF_64_RELATIVE
0000000000013d20  0000000000000008 R_BPF_64_RELATIVE
0000000000013d40  0000000000000008 R_BPF_64_RELATIVE
0000000000013d58  0000000000000008 R_BPF_64_RELATIVE
0000000000013d78  0000000000000008 R_BPF_64_RELATIVE
0000000000013d98  0000000000000008 R_BPF_64_RELATIVE
0000000000013db8  0000000000000008 R_BPF_64_RELATIVE
0000000000013dd8  0000000000000008 R_BPF_64_RELATIVE
0000000000013df8  0000000000000008 R_BPF_64_RELATIVE
0000000000013e18  0000000000000008 R_BPF_64_RELATIVE
0000000000013e38  0000000000000008 R_BPF_64_RELATIVE
0000000000014240  0000000000000008 R_BPF_64_RELATIVE
0000000000014258  0000000000000008 R_BPF_64_RELATIVE
0000000000014268  0000000000000008 R_BPF_64_RELATIVE
0000000000014628  0000000000000008 R_BPF_64_RELATIVE
0000000000014640  0000000000000008 R_BPF_64_RELATIVE
0000000000014650  0000000000000008 R_BPF_64_RELATIVE
0000000000014aa0  0000000000000008 R_BPF_64_RELATIVE
0000000000014ab0  0000000000000008 R_BPF_64_RELATIVE
0000000000014ae8  0000000000000008 R_BPF_64_RELATIVE
0000000000014af8  0000000000000008 R_BPF_64_RELATIVE
0000000000014cb8  0000000000000008 R_BPF_64_RELATIVE
00000000000150d8  0000000000000008 R_BPF_64_RELATIVE
00000000000155a0  0000000000000008 R_BPF_64_RELATIVE
00000000000155d0  0000000000000008 R_BPF_64_RELATIVE
0000000000015618  0000000000000008 R_BPF_64_RELATIVE
0000000000015670  0000000000000008 R_BPF_64_RELATIVE
0000000000015738  0000000000000008 R_BPF_64_RELATIVE
0000000000015768  0000000000000008 R_BPF_64_RELATIVE
00000000000157f8  0000000000000008 R_BPF_64_RELATIVE
0000000000015810  0000000000000008 R_BPF_64_RELATIVE
0000000000015820  0000000000000008 R_BPF_64_RELATIVE
0000000000015c08  0000000000000008 R_BPF_64_RELATIVE
0000000000015c20  0000000000000008 R_BPF_64_RELATIVE
0000000000016070  0000000000000008 R_BPF_64_RELATIVE
0000000000016088  0000000000000008 R_BPF_64_RELATIVE
0000000000016098  0000000000000008 R_BPF_64_RELATIVE
0000000000016148  0000000000000008 R_BPF_64_RELATIVE
0000000000016160  0000000000000008 R_BPF_64_RELATIVE
0000000000016170  0000000000000008 R_BPF_64_RELATIVE
0000000000016340  0000000000000008 R_BPF_64_RELATIVE
0000000000016440  0000000000000008 R_BPF_64_RELATIVE
0000000000016458  0000000000000008 R_BPF_64_RELATIVE
00000000000167c0  0000000000000008 R_BPF_64_RELATIVE
00000000000167d8  0000000000000008 R_BPF_64_RELATIVE
00000000000167e8  0000000000000008 R_BPF_64_RELATIVE
0000000000016b50  0000000000000008 R_BPF_64_RELATIVE
0000000000016b68  0000000000000008 R_BPF_64_RELATIVE
0000000000016b78  0000000000000008 R_BPF_64_RELATIVE
0000000000017050  0000000000000008 R_BPF_64_RELATIVE
0000000000017860  0000000000000008 R_BPF_64_RELATIVE
0000000000017878  0000000000000008 R_BPF_64_RELATIVE
0000000000017888  0000000000000008 R_BPF_64_RELATIVE
0000000000017dc0  0000000000000008 R_BPF_64_RELATIVE
0000000000017df8  0000000000000008 R_BPF_64_RELATIVE
0000000000018118  0000000000000008 R_BPF_64_RELATIVE
0000000000018130  0000000000000008 R_BPF_64_RELATIVE
0000000000018338  0000000000000008 R_BPF_64_RELATIVE
0000000000018368  0000000000000008 R_BPF_64_RELATIVE
0000000000018380  0000000000000008 R_BPF_64_RELATIVE
0000000000018390  0000000000000008 R_BPF_64_RELATIVE
0000000000018428  0000000000000008 R_BPF_64_RELATIVE
0000000000018828  0000000000000008 R_BPF_64_RELATIVE
0000000000018980  0000000000000008 R_BPF_64_RELATIVE
00000000000189b0  0000000000000008 R_BPF_64_RELATIVE
0000000000018a60  0000000000000008 R_BPF_64_RELATIVE
0000000000018a90  0000000000000008 R_BPF_64_RELATIVE
0000000000018b40  0000000000000008 R_BPF_64_RELATIVE
0000000000018b70  0000000000000008 R_BPF_64_RELATIVE
0000000000018c28  0000000000000008 R_BPF_64_RELATIVE
0000000000018c58  0000000000000008 R_BPF_64_RELATIVE
0000000000018db0  0000000000000008 R_BPF_64_RELATIVE
0000000000018de8  0000000000000008 R_BPF_64_RELATIVE
0000000000018e78  0000000000000008 R_BPF_64_RELATIVE
0000000000018ee0  0000000000000008 R_BPF_64_RELATIVE
0000000000019068  0000000000000008 R_BPF_64_RELATIVE
0000000000019120  0000000000000008 R_BPF_64_RELATIVE
0000000000019158  0000000000000008 R_BPF_64_RELATIVE
0000000000019188  0000000000000008 R_BPF_64_RELATIVE
00000000000192b8  0000000000000008 R_BPF_64_RELATIVE
00000000000192f0  0000000000000008 R_BPF_64_RELATIVE
0000000000019380  0000000000000008 R_BPF_64_RELATIVE
00000000000193e8  0000000000000008 R_BPF_64_RELATIVE
0000000000019550  0000000000000008 R_BPF_64_RELATIVE
00000000000196a0  0000000000000008 R_BPF_64_RELATIVE
0000000000019760  0000000000000008 R_BPF_64_RELATIVE
00000000000197e8  0000000000000008 R_BPF_64_RELATIVE
00000000000198a8  0000000000000008 R_BPF_64_RELATIVE
0000000000019990  0000000000000008 R_BPF_64_RELATIVE
00000000000199c8  0000000000000008 R_BPF_64_RELATIVE
0000000000019a58  0000000000000008 R_BPF_64_RELATIVE
0000000000019ac0  0000000000000008 R_BPF_64_RELATIVE
0000000000019b90  0000000000000008 R_BPF_64_RELATIVE
0000000000019c60  0000000000000008 R_BPF_64_RELATIVE
0000000000019c98  0000000000000008 R_BPF_64_RELATIVE
0000000000019d28  0000000000000008 R_BPF_64_RELATIVE
0000000000019d90  0000000000000008 R_BPF_64_RELATIVE
0000000000019e60  0000000000000008 R_BPF_64_RELATIVE
0000000000019eb0  0000000000000008 R_BPF_64_RELATIVE
0000000000019f20  0000000000000008 R_BPF_64_RELATIVE
0000000000019f38  0000000000000008 R_BPF_64_RELATIVE
0000000000019fb8  0000000000000008 R_BPF_64_RELATIVE
0000000000019fd8  0000000000000008 R_BPF_64_RELATIVE
000000000001a070  0000000000000008 R_BPF_64_RELATIVE
000000000001a100  0000000000000008 R_BPF_64_RELATIVE
000000000001a178  0000000000000008 R_BPF_64_RELATIVE
000000000001a1e0  0000000000000008 R_BPF_64_RELATIVE
000000000001a218  0000000000000008 R_BPF_64_RELATIVE
000000000001a288  0000000000000008 R_BPF_64_RELATIVE
000000000001a2d0  0000000000000008 R_BPF_64_RELATIVE
000000000001a348  0000000000000008 R_BPF_64_RELATIVE
000000000001a498  0000000000000008 R_BPF_64_RELATIVE
000000000001a4b0  0000000000000008 R_BPF_64_RELATIVE
000000000001a568  0000000000000008 R_BPF_64_RELATIVE
000000000001a598  0000000000000008 R_BPF_64_RELATIVE
000000000001a5e8  0000000000000008 R_BPF_64_RELATIVE
000000000001a668  0000000000000008 R_BPF_64_RELATIVE
000000000001a698  0000000000000008 R_BPF_64_RELATIVE
000000000001a6d0  0000000000000008 R_BPF_64_RELATIVE
000000000001a9c8  0000000000000008 R_BPF_64_RELATIVE
000000000001aa60  0000000000000008 R_BPF_64_RELATIVE
000000000001aa90  0000000000000008 R_BPF_64_RELATIVE
000000000001aac8  0000000000000008 R_BPF_64_RELATIVE
000000000001aaf8  0000000000000008 R_BPF_64_RELATIVE
000000000001ab28  0000000000000008 R_BPF_64_RELATIVE
000000000001adf8  0000000000000008 R_BPF_64_RELATIVE
000000000001ae10  0000000000000008 R_BPF_64_RELATIVE
000000000001ae70  0000000000000008 R_BPF_64_RELATIVE
000000000001aea0  0000000000000008 R_BPF_64_RELATIVE
000000000001af28  0000000000000008 R_BPF_64_RELATIVE
000000000001af40  0000000000000008 R_BPF_64_RELATIVE
000000000001af70  0000000000000008 R_BPF_64_RELATIVE
000000000001aff0  0000000000000008 R_BPF_64_RELATIVE
000000000001b060  0000000000000008 R_BPF_64_RELATIVE
000000000001b100  0000000000000008 R_BPF_64_RELATIVE
000000000001b148  0000000000000008 R_BPF_64_RELATIVE
000000000001b1f8  0000000000000008 R_BPF_64_RELATIVE
000000000001b208  0000000000000008 R_BPF_64_RELATIVE
000000000001b290  0000000000000008 R_BPF_64_RELATIVE
000000000001b2f8  0000000000000008 R_BPF_64_RELATIVE
000000000001b360  0000000000000008 R_BPF_64_RELATIVE
000000000001b438  0000000000000008 R_BPF_64_RELATIVE
000000000001b4d8  0000000000000008 R_BPF_64_RELATIVE
000000000001b500  0000000000000008 R_BPF_64_RELATIVE
000000000001b5b8  0000000000000008 R_BPF_64_RELATIVE
000000000001b648  0000000000000008 R_BPF_64_RELATIVE
000000000001b678  0000000000000008 R_BPF_64_RELATIVE
000000000001b6b8  0000000000000008 R_BPF_64_RELATIVE
000000000001b6f8  0000000000000008 R_BPF_64_RELATIVE
000000000001b720  0000000000000008 R_BPF_64_RELATIVE
000000000001b800  0000000000000008 R_BPF_64_RELATIVE
000000000001b830  0000000000000008 R_BPF_64_RELATIVE
000000000001b8a0  0000000000000008 R_BPF_64_RELATIVE
000000000001b8b8  0000000000000008 R_BPF_64_RELATIVE
000000000001bc48  0000000000000008 R_BPF_64_RELATIVE
000000000001bce0  0000000000000008 R_BPF_64_RELATIVE
000000000001cee0  0000000000000008 R_BPF_64_RELATIVE
000000000001cf28  0000000000000008 R_BPF_64_RELATIVE
000000000001cf40  0000000000000008 R_BPF_64_RELATIVE
000000000001d3d8  0000000000000008 R_BPF_64_RELATIVE
000000000001d420  0000000000000008 R_BPF_64_RELATIVE
000000000001d438  0000000000000008 R_BPF_64_RELATIVE
000000000001d5d8  0000000000000008 R_BPF_64_RELATIVE
000000000001d638  0000000000000008 R_BPF_64_RELATIVE
000000000001d838  0000000000000008 R_BPF_64_RELATIVE
000000000001d8e8  0000000000000008 R_BPF_64_RELATIVE
000000000001dc08  0000000000000008 R_BPF_64_RELATIVE
000000000001dd78  0000000000000008 R_BPF_64_RELATIVE
000000000001de18  0000000000000008 R_BPF_64_RELATIVE
000000000001de30  0000000000000008 R_BPF_64_RELATIVE
000000000001df08  0000000000000008 R_BPF_64_RELATIVE
000000000001df98  0000000000000008 R_BPF_64_RELATIVE
000000000001e078  0000000000000008 R_BPF_64_RELATIVE
000000000001e100  0000000000000008 R_BPF_64_RELATIVE
000000000001e178  0000000000000008 R_BPF_64_RELATIVE
000000000001e228  0000000000000008 R_BPF_64_RELATIVE
000000000001e240  0000000000000008 R_BPF_64_RELATIVE
000000000001e2e0  0000000000000008 R_BPF_64_RELATIVE
000000000001e3b0  0000000000000008 R_BPF_64_RELATIVE
000000000001e450  0000000000000008 R_BPF_64_RELATIVE
000000000001e718  0000000000000008 R_BPF_64_RELATIVE
000000000001e9d0  0000000000000008 R_BPF_64_RELATIVE
0000000000024800  0000000000000008 R_BPF_64_RELATIVE
0000000000024820  0000000000000008 R_BPF_64_RELATIVE
0000000000024840  0000000000000008 R_BPF_64_RELATIVE
0000000000024860  0000000000000008 R_BPF_64_RELATIVE
0000000000024880  0000000000000008 R_BPF_64_RELATIVE
00000000000248a0  0000000000000008 R_BPF_64_RELATIVE
00000000000248b8  0000000000000008 R_BPF_64_RELATIVE
00000000000248c0  0000000000000008 R_BPF_64_RELATIVE
00000000000248d8  0000000000000008 R_BPF_64_RELATIVE
00000000000248e0  0000000000000008 R_BPF_64_RELATIVE
00000000000248f8  0000000000000008 R_BPF_64_RELATIVE
0000000000024910  0000000000000008 R_BPF_64_RELATIVE
0000000000024928  0000000000000008 R_BPF_64_RELATIVE
0000000000024940  0000000000000008 R_BPF_64_RELATIVE
0000000000024958  0000000000000008 R_BPF_64_RELATIVE
0000000000024970  0000000000000008 R_BPF_64_RELATIVE
0000000000024988  0000000000000008 R_BPF_64_RELATIVE
00000000000249a0  0000000000000008 R_BPF_64_RELATIVE
00000000000249b8  0000000000000008 R_BPF_64_RELATIVE
00000000000249d0  0000000000000008 R_BPF_64_RELATIVE
00000000000249e8  0000000000000008 R_BPF_64_RELATIVE
0000000000024a00  0000000000000008 R_BPF_64_RELATIVE
0000000000024a18  0000000000000008 R_BPF_64_RELATIVE
0000000000024a30  0000000000000008 R_BPF_64_RELATIVE
0000000000024a48  0000000000000008 R_BPF_64_RELATIVE
0000000000024a60  0000000000000008 R_BPF_64_RELATIVE
0000000000024a78  0000000000000008 R_BPF_64_RELATIVE
0000000000024a90  0000000000000008 R_BPF_64_RELATIVE
0000000000024aa8  0000000000000008 R_BPF_64_RELATIVE
0000000000024ac0  0000000000000008 R_BPF_64_RELATIVE
0000000000024ad8  0000000000000008 R_BPF_64_RELATIVE
0000000000024af0  0000000000000008 R_BPF_64_RELATIVE
0000000000024b08  0000000000000008 R_BPF_64_RELATIVE
0000000000024b20  0000000000000008 R_BPF_64_RELATIVE
0000000000024b38  0000000000000008 R_BPF_64_RELATIVE
0000000000024b50  0000000000000008 R_BPF_64_RELATIVE
0000000000024b68  0000000000000008 R_BPF_64_RELATIVE
0000000000024b80  0000000000000008 R_BPF_64_RELATIVE
0000000000024b98  0000000000000008 R_BPF_64_RELATIVE
0000000000024bb0  0000000000000008 R_BPF_64_RELATIVE
0000000000024bc8  0000000000000008 R_BPF_64_RELATIVE
0000000000024be0  0000000000000008 R_BPF_64_RELATIVE
0000000000024bf8  0000000000000008 R_BPF_64_RELATIVE
0000000000024c10  0000000000000008 R_BPF_64_RELATIVE
0000000000024c28  0000000000000008 R_BPF_64_RELATIVE
0000000000024c40  0000000000000008 R_BPF_64_RELATIVE
0000000000024c58  0000000000000008 R_BPF_64_RELATIVE
0000000000024c70  0000000000000008 R_BPF_64_RELATIVE
0000000000024c88  0000000000000008 R_BPF_64_RELATIVE
0000000000024ca0  0000000000000008 R_BPF_64_RELATIVE
0000000000024cb8  0000000000000008 R_BPF_64_RELATIVE
0000000000024cd0  0000000000000008 R_BPF_64_RELATIVE
0000000000024ce8  0000000000000008 R_BPF_64_RELATIVE
0000000000024d00  0000000000000008 R_BPF_64_RELATIVE
0000000000024d10  0000000000000008 R_BPF_64_RELATIVE
0000000000024d28  0000000000000008 R_BPF_64_RELATIVE
0000000000024d40  0000000000000008 R_BPF_64_RELATIVE
0000000000024d58  0000000000000008 R_BPF_64_RELATIVE
0000000000024d60  0000000000000008 R_BPF_64_RELATIVE
0000000000024d70  0000000000000008 R_BPF_64_RELATIVE
0000000000024d80  0000000000000008 R_BPF_64_RELATIVE
0000000000024d98  0000000000000008 R_BPF_64_RELATIVE
0000000000024db0  0000000000000008 R_BPF_64_RELATIVE
0000000000024dc8  0000000000000008 R_BPF_64_RELATIVE
0000000000024de0  0000000000000008 R_BPF_64_RELATIVE
0000000000024df8  0000000000000008 R_BPF_64_RELATIVE
0000000000024e10  0000000000000008 R_BPF_64_RELATIVE
0000000000024e28  0000000000000008 R_BPF_64_RELATIVE
0000000000024e40  0000000000000008 R_BPF_64_RELATIVE
0000000000024e58  0000000000000008 R_BPF_64_RELATIVE
0000000000024e60  0000000000000008 R_BPF_64_RELATIVE
0000000000024e70  0000000000000008 R_BPF_64_RELATIVE
0000000000024e88  0000000000000008 R_BPF_64_RELATIVE
0000000000024e90  0000000000000008 R_BPF_64_RELATIVE
0000000000024ea8  0000000000000008 R_BPF_64_RELATIVE
0000000000024eb0  0000000000000008 R_BPF_64_RELATIVE
0000000000024ec8  0000000000000008 R_BPF_64_RELATIVE
0000000000024ee0  0000000000000008 R_BPF_64_RELATIVE
0000000000024ee8  0000000000000008 R_BPF_64_RELATIVE
0000000000024ef0  0000000000000008 R_BPF_64_RELATIVE
0000000000024ef8  0000000000000008 R_BPF_64_RELATIVE
0000000000024f08  0000000000000008 R_BPF_64_RELATIVE
0000000000024f18  0000000000000008 R_BPF_64_RELATIVE
0000000000024f28  0000000000000008 R_BPF_64_RELATIVE
0000000000024f38  0000000000000008 R_BPF_64_RELATIVE
0000000000024f50  0000000000000008 R_BPF_64_RELATIVE
0000000000024f68  0000000000000008 R_BPF_64_RELATIVE
0000000000024f70  0000000000000008 R_BPF_64_RELATIVE
0000000000024f88  0000000000000008 R_BPF_64_RELATIVE
0000000000024fa0  0000000000000008 R_BPF_64_RELATIVE
0000000000024fa8  0000000000000008 R_BPF_64_RELATIVE
0000000000024fc0  0000000000000008 R_BPF_64_RELATIVE
0000000000024fd8  0000000000000008 R_BPF_64_RELATIVE
0000000000024ff0  0000000000000008 R_BPF_64_RELATIVE
0000000000025008  0000000000000008 R_BPF_64_RELATIVE
0000000000025020  0000000000000008 R_BPF_64_RELATIVE
0000000000025028  0000000000000008 R_BPF_64_RELATIVE
0000000000025040  0000000000000008 R_BPF_64_RELATIVE
0000000000025058  0000000000000008 R_BPF_64_RELATIVE
0000000000025060  0000000000000008 R_BPF_64_RELATIVE
0000000000025078  0000000000000008 R_BPF_64_RELATIVE
0000000000025090  0000000000000008 R_BPF_64_RELATIVE
00000000000250a8  0000000000000008 R_BPF_64_RELATIVE
00000000000250c0  0000000000000008 R_BPF_64_RELATIVE
00000000000250c8  0000000000000008 R_BPF_64_RELATIVE
00000000000250e0  0000000000000008 R_BPF_64_RELATIVE
00000000000250f8  0000000000000008 R_BPF_64_RELATIVE
0000000000025100  0000000000000008 R_BPF_64_RELATIVE
0000000000025108  0000000000000008 R_BPF_64_RELATIVE
0000000000025110  0000000000000008 R_BPF_64_RELATIVE
0000000000025128  0000000000000008 R_BPF_64_RELATIVE
0000000000025138  0000000000000008 R_BPF_64_RELATIVE
0000000000025148  0000000000000008 R_BPF_64_RELATIVE
0000000000025158  0000000000000008 R_BPF_64_RELATIVE
0000000000025168  0000000000000008 R_BPF_64_RELATIVE
0000000000025178  0000000000000008 R_BPF_64_RELATIVE
0000000000025188  0000000000000008 R_BPF_64_RELATIVE
0000000000025198  0000000000000008 R_BPF_64_RELATIVE
00000000000251a8  0000000000000008 R_BPF_64_RELATIVE
00000000000251b8  0000000000000008 R_BPF_64_RELATIVE
00000000000251c8  0000000000000008 R_BPF_64_RELATIVE
00000000000251e0  0000000000000008 R_BPF_64_RELATIVE
00000000000251e8  0000000000000008 R_BPF_64_RELATIVE
00000000000251f8  0000000000000008 R_BPF_64_RELATIVE
0000000000025208  0000000000000008 R_BPF_64_RELATIVE
0000000000025218  0000000000000008 R_BPF_64_RELATIVE
0000000000025228  0000000000000008 R_BPF_64_RELATIVE
0000000000025238  0000000000000008 R_BPF_64_RELATIVE
0000000000025250  0000000000000008 R_BPF_64_RELATIVE
0000000000025260  0000000000000008 R_BPF_64_RELATIVE
0000000000025270  0000000000000008 R_BPF_64_RELATIVE
0000000000025280  0000000000000008 R_BPF_64_RELATIVE
0000000000025290  0000000000000008 R_BPF_64_RELATIVE
00000000000252a0  0000000000000008 R_BPF_64_RELATIVE
00000000000252b0  0000000000000008 R_BPF_64_RELATIVE
00000000000252c0  0000000000000008 R_BPF_64_RELATIVE
00000000000252d0  0000000000000008 R_BPF_64_RELATIVE
00000000000252e0  0000000000000008 R_BPF_64_RELATIVE
00000000000252f0  0000000000000008 R_BPF_64_RELATIVE
0000000000025300  0000000000000008 R_BPF_64_RELATIVE
0000000000025310  0000000000000008 R_BPF_64_RELATIVE
0000000000025328  0000000000000008 R_BPF_64_RELATIVE
0000000000025340  0000000000000008 R_BPF_64_RELATIVE
0000000000025350  0000000000000008 R_BPF_64_RELATIVE
0000000000025360  0000000000000008 R_BPF_64_RELATIVE
0000000000025378  0000000000000008 R_BPF_64_RELATIVE
0000000000025390  0000000000000008 R_BPF_64_RELATIVE
00000000000253a8  0000000000000008 R_BPF_64_RELATIVE
00000000000253c0  0000000000000008 R_BPF_64_RELATIVE
00000000000253c8  0000000000000008 R_BPF_64_RELATIVE
00000000000253e0  0000000000000008 R_BPF_64_RELATIVE
00000000000253e8  0000000000000008 R_BPF_64_RELATIVE
00000000000253f8  0000000000000008 R_BPF_64_RELATIVE
0000000000025408  0000000000000008 R_BPF_64_RELATIVE
0000000000025420  0000000000000008 R_BPF_64_RELATIVE
0000000000025428  0000000000000008 R_BPF_64_RELATIVE
0000000000025430  0000000000000008 R_BPF_64_RELATIVE
0000000000025438  0000000000000008 R_BPF_64_RELATIVE
0000000000025450  0000000000000008 R_BPF_64_RELATIVE
0000000000025468  0000000000000008 R_BPF_64_RELATIVE
0000000000025480  0000000000000008 R_BPF_64_RELATIVE
0000000000025488  0000000000000008 R_BPF_64_RELATIVE
0000000000025490  0000000000000008 R_BPF_64_RELATIVE
0000000000000440  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000000888  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000000e78  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000013c0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000019e8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000001f40  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000002c08  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000002e08  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000031b8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000003640  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000003c28  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000040c0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000043f8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000004650  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000048f8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000004d08  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000005250  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000005700  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000005ab8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000006270  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000006698  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000006748  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000076f0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000007cc8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000008340  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000088c0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000090f8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000009308  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000097b0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000009c38  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000a400  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000a850  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000acb0  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000b418  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000b4e8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000b720  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000bb30  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000c078  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000c590  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000d2f8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000dc60  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000dc88  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000df68  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000e810  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000f620  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000f8b8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000f9a0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000116d0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000011c78  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000011ea0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000128d8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000012b68  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000013738  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000138c8  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000138f8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000014280  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000143e8  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000143f8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000014668  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000015838  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000015c38  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000160b0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016188  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016258  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016300  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016470  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000166d8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016800  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000168b0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016b90  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016d08  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000016d18  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017068  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000170b0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000170b8  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000178a0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017c98  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017d80  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017da0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017da8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017db0  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017db8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017de8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000017e28  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018148  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018160  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000183a8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018410  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018440  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018450  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018718  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018790  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000188b8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018928  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018a08  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018ae8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018bc8  000000010000000a R_BPF_64_32            0000000000000000 abort
0000000000018cb0  000000010000000a R_BPF_64_32            0000000000000000 abort
00000000000196b8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001a720  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001a9f0  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001ae28  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001ae88  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001aeb8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001afc0  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b4f0  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b660  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b690  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b7a8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b888  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b8e8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b8f8  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001b900  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001d850  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001dc20  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000001dd90  000000010000000a R_BPF_64_32            0000000000000000 abort
000000000000c908  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000c9e0  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000ca40  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000ca98  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000caf8  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cb98  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cbf8  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cc40  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cc80  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000ccc0  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cd38  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cdb0  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000ce28  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000ce80  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000cfd8  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000d048  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000d098  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
000000000000fcd8  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
0000000000013e50  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
0000000000015708  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
0000000000017d88  000000020000000a R_BPF_64_32            0000000000000000 sol_log_
0000000000017d98  000000030000000a R_BPF_64_32            00000000000155f0 custom_panic
.eh_frame section at offset 0x247e0 address 0x247e0
  [0x247e0] CIE length=20
    version 1
    augmentation zR
    code_alignment_factor 8
    data_alignment_factor -4
    return_address_register 11

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x247f8] FDE length=28 cie=[0x247e0]
    initial_location 0x15f0000000000
    address_range 0x10 (end  0x15f0000000010)

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x24818] FDE length=28 cie=[0x247e0]
    initial_location 0x15f1000000000
    address_range 0x10 (end  0x15f1000000010)

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x24838] FDE length=28 cie=[0x247e0]
    initial_location 0x15f2000000000
    address_range 0x10 (end  0x15f2000000010)

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x24858] FDE length=28 cie=[0x247e0]
    initial_location 0x15f3000000000
    address_range 0x10 (end  0x15f3000000010)

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x24878] FDE length=28 cie=[0x247e0]
    initial_location 0x15f4000000000
    address_range 0x10 (end  0x15f4000000010)

    Program
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

  [0x24898] CIE length=0
    version 0
    augmentation
    code_alignment_factor 0
    data_alignment_factor 0
    return_address_register 0

    Program


Symbol table '.dynsym' contains 5 entries
   Num    Value          Size Type    Bind   Vis       Ndx Name
     0 0000000000000000     0 NOTYPE  LOCAL  DEFAULT   UND
     1 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND abort
     2 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND sol_log_
     3 00000000000155f0   328 FUNC    GLOBAL DEFAULT     1 custom_panic
     4 0000000000015258   592 FUNC    GLOBAL DEFAULT     1 entrypoint

Symbol table '.symtab' contains 1858 entries
   Num    Value          Size Type    Bind   Vis       Ndx Name
     0 0000000000000000     0 NOTYPE  LOCAL  DEFAULT   UND
     1 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.0
     2 0000000000022e50    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
     3 0000000000024958    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_10
     4 0000000000024988    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_11
     5 0000000000024970    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_12
     6 00000000000249a0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_13
     7 00000000000249b8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_14
     8 00000000000249d0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_15
     9 00000000000249e8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_16
    10 0000000000024a00    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_17
    11 0000000000024a18    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_18
    12 0000000000024a30    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_19
    13 00000000000248a0    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
    14 0000000000024a48    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_20
    15 0000000000024a60    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_21
    16 0000000000024a78    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_22
    17 0000000000024a90    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_23
    18 0000000000024aa8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_24
    19 0000000000024ac0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_25
    20 0000000000024af0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_26
    21 0000000000024ad8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_27
    22 0000000000024b08    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_28
    23 0000000000024b20    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_29
    24 00000000000248e0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
    25 0000000000024b38    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_30
    26 0000000000024b50    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_31
    27 0000000000024b68    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_32
    28 0000000000024b80    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_33
    29 0000000000024b98    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_34
    30 0000000000024bb0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_35
    31 0000000000024bc8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_36
    32 0000000000024be0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_37
    33 0000000000024bf8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_38
    34 0000000000024c10    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_39
    35 0000000000024c28    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_40
    36 0000000000024c40    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_41
    37 0000000000024c58    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_42
    38 0000000000024c70    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_43
    39 0000000000022fd9    30 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_44
    40 0000000000022f28    25 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_45
    41 0000000000022ed7    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_46
    42 0000000000022f7e    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_47
    43 0000000000022e86    31 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_48
    44 0000000000022f0e    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_49
    45 00000000000248c0    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_5
    46 0000000000022fa5    21 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_50
    47 0000000000022f52    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_51
    48 0000000000022f41    17 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_52
    49 0000000000022ef2    28 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_53
    50 0000000000022ebd    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_54
    51 0000000000022ea5    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_55
    52 0000000000022ff7    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_56
    53 0000000000022f91    20 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_57
    54 0000000000022fba    31 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_58
    55 0000000000022f65    25 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_59
    56 00000000000248f8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_6
    57 0000000000024c88    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_60
    58 0000000000024cb8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_61
    59 0000000000024ca0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_62
    60 0000000000022e68    30 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_63
    61 0000000000024910    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_7
    62 0000000000024928    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_8
    63 0000000000024940    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_9
    64 0000000000008590     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_10
    65 0000000000008508     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_11
    66 0000000000008760     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_12
    67 0000000000008740     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_13
    68 00000000000087a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_14
    69 0000000000008788     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_15
    70 0000000000008850     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_16
    71 00000000000088c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_18
    72 00000000000087e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_19
    73 00000000000081d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_2
    74 0000000000008a98     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_20
    75 00000000000089c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_22
    76 0000000000008bd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_24
    77 0000000000008c20     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_25
    78 0000000000008800     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_27
    79 0000000000008808     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_28
    80 0000000000008c60     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_29
    81 00000000000081d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_3
    82 0000000000008db0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_32
    83 0000000000008df0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_33
    84 0000000000008ea8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_34
    85 0000000000008ed8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_36
    86 0000000000008dc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_37
    87 0000000000008f28     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_38
    88 0000000000008230     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_4
    89 0000000000009100     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_40
    90 0000000000008f00     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_41
    91 00000000000091b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_42
    92 0000000000009310     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_44
    93 00000000000093c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_45
    94 0000000000009408     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_46
    95 0000000000008580     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_47
    96 0000000000008228     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_48
    97 00000000000081c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_5
    98 00000000000082b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_6
    99 0000000000008348     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_8
   100 00000000000082a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_9
   101 0000000000009a40     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_10
   102 0000000000009c40     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_12
   103 0000000000009978     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_13
   104 0000000000009e10     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_14
   105 0000000000009d40     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_15
   106 0000000000009f30     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_16
   107 0000000000009f10     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_17
   108 000000000000a060     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_18
   109 000000000000a068     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_19
   110 0000000000009640     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_2
   111 0000000000009f78     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_20
   112 0000000000009f58     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_21
   113 0000000000009fb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_22
   114 000000000000a048     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_25
   115 000000000000a0b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_27
   116 000000000000a0c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_28
   117 000000000000a408     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_29
   118 0000000000009648     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_3
   119 0000000000009f98     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_33
   120 000000000000a570     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_34
   121 000000000000a558     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_35
   122 000000000000a1a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_36
   123 000000000000a1d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_38
   124 00000000000096a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_4
   125 000000000000a218     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_41
   126 000000000000a650     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_44
   127 000000000000a628     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_45
   128 000000000000a708     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_46
   129 000000000000a858     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_48
   130 000000000000a910     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_49
   131 0000000000009630     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_5
   132 000000000000a948     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_50
   133 0000000000009e00     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_51
   134 0000000000009698     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_52
   135 0000000000009728     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_6
   136 00000000000097b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_8
   137 0000000000009718     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_9
   138 000000000000ac18     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_10
   139 000000000000af00     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_11
   140 000000000000ae78     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_12
   141 000000000000b0b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_14
   142 000000000000b180     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_16
   143 000000000000b1b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_17
   144 000000000000b388     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_18
   145 000000000000b2b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_19
   146 000000000000ab40     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_2
   147 000000000000b300     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_21
   148 000000000000b338     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_22
   149 000000000000b3a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_23
   150 000000000000b420     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_25
   151 000000000000b4f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_27
   152 000000000000b728     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_29
   153 000000000000ab48     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_3
   154 000000000000b318     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_30
   155 000000000000b7e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_31
   156 000000000000b818     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_32
   157 000000000000aef0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_33
   158 000000000000ab98     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_34
   159 000000000000ab78     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_4
   160 000000000000aba0     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_5
   161 000000000000ab30     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_6
   162 000000000000ac28     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_7
   163 000000000000acb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB12_9
   164 000000000000bd80     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_10
   165 000000000000bcf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_11
   166 000000000000bf30     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_12
   167 000000000000bf38     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_13
   168 000000000000bf80     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_14
   169 000000000000bf88     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_15
   170 000000000000bfa8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_16
   171 000000000000bf60     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_17
   172 000000000000c010     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_18
   173 000000000000b9d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_2
   174 000000000000c080     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_20
   175 000000000000bff0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_21
   176 000000000000c1e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_22
   177 000000000000c168     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_23
   178 000000000000c330     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_24
   179 000000000000c350     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_26
   180 000000000000c3c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_29
   181 000000000000b9d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_3
   182 000000000000c5e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_31
   183 000000000000c598     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_32
   184 000000000000c6a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_33
   185 000000000000c6d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_34
   186 000000000000bd70     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_35
   187 000000000000ba28     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_36
   188 000000000000ba08     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_4
   189 000000000000ba30     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_5
   190 000000000000bb38     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_8
   191 000000000000b9c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_9
   192 000000000000cc20     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_11
   193 000000000000c9b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_13
   194 000000000000cb78     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_17
   195 000000000000ca18     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_19
   196 000000000000cad0     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_22
   197 000000000000c940     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_25
   198 000000000000cd98     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_26
   199 000000000000ce68     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_27
   200 000000000000d030     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_28
   201 000000000000cfc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_29
   202 000000000000cff8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_30
   203 000000000000d080     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_31
   204 000000000000cc68     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_32
   205 000000000000cdd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_33
   206 000000000000ce10     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_34
   207 000000000000cca8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_35
   208 000000000000cce8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_36
   209 000000000000cd20     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_37
   210 000000000000cd60     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_38
   211 000000000000c9a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_39
   212 000000000000cbd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_6
   213 000000000000ca70     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_8
   214 000000000000da78     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_10
   215 000000000000dbf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_11
   216 000000000000dc68     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_12
   217 000000000000db18     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_15
   218 000000000000db88     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_19
   219 000000000000d248     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_2
   220 000000000000dc20     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_20
   221 000000000000db98     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_21
   222 000000000000dbd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_22
   223 000000000000d268     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_25
   224 000000000000d270     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_26
   225 000000000000d278     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_27
   226 000000000000dc38     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_28
   227 000000000000d9d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_29
   228 000000000000d200     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_3
   229 000000000000da58     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_30
   230 000000000000d228     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_4
   231 000000000000d280     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_5
   232 000000000000d300     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_7
   233 0000000000000348     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
   234 00000000000005f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_11
   235 0000000000000568     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_12
   236 00000000000006a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_13
   237 0000000000000890     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_14
   238 00000000000006e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_15
   239 00000000000008d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_17
   240 00000000000008b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_18
   241 0000000000000988     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_19
   242 0000000000000278     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_2
   243 00000000000009c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_20
   244 00000000000005e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_21
   245 00000000000002d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_22
   246 00000000000002d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_3
   247 0000000000000240     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
   248 00000000000002a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_5
   249 00000000000002b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_6
   250 0000000000000390     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_7
   251 0000000000000448     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_9
   252 0000000000000d98     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_10
   253 0000000000000ba0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_11
   254 0000000000000ba8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_12
   255 0000000000000dd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_13
   256 0000000000000e80     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
   257 0000000000000d50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_16
   258 00000000000010d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_17
   259 0000000000001040     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_18
   260 00000000000012a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_19
   261 0000000000000b70     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_2
   262 0000000000001280     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_20
   263 00000000000012e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_21
   264 00000000000013c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_22
   265 0000000000001358     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_23
   266 00000000000013e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_25
   267 0000000000001500     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_28
   268 00000000000015a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_29
   269 0000000000000b78     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_3
   270 0000000000001660     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_30
   271 0000000000001790     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_32
   272 0000000000001808     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_34
   273 0000000000001820     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_35
   274 00000000000019f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_37
   275 0000000000001ad8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_39
   276 0000000000000bd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
   277 00000000000010b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_40
   278 0000000000000bc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_41
   279 00000000000010c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_42
   280 0000000000001ba8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_43
   281 0000000000000b60     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
   282 0000000000000be0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_6
   283 0000000000000c58     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_8
   284 0000000000001e48     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_10
   285 0000000000002300     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_11
   286 0000000000002278     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_12
   287 0000000000002620     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_13
   288 0000000000002668     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_15
   289 0000000000002c10     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_16
   290 00000000000026e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_17
   291 0000000000002c30     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_18
   292 0000000000002710     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_19
   293 0000000000001d78     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_2
   294 00000000000027d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_22
   295 00000000000027f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_23
   296 0000000000002c50     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_24
   297 00000000000028b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_25
   298 0000000000002c70     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_27
   299 0000000000002d28     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_29
   300 0000000000001dd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_3
   301 0000000000002d60     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_30
   302 00000000000022f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_31
   303 0000000000001dd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_32
   304 0000000000002de8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_33
   305 0000000000001d40     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_4
   306 0000000000001da8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_5
   307 0000000000001db0     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_6
   308 0000000000001e90     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_7
   309 0000000000001f48     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_9
   310 00000000000030c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_10
   311 0000000000003120     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_11
   312 0000000000003128     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_12
   313 0000000000003130     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_13
   314 00000000000031c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_15
   315 0000000000003380     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_16
   316 0000000000003448     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_17
   317 0000000000003648     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_19
   318 0000000000002ef8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_2
   319 0000000000003808     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_20
   320 00000000000038c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_21
   321 00000000000038c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_22
   322 00000000000038d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_23
   323 0000000000003a80     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_24
   324 0000000000003a98     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_25
   325 0000000000003aa0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_26
   326 0000000000003ae0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_27
   327 0000000000003b20     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_29
   328 0000000000002f68     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_3
   329 0000000000003b40     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_30
   330 0000000000003c30     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_35
   331 0000000000003c50     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_36
   332 0000000000003cf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_37
   333 0000000000003d38     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_38
   334 0000000000003db8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_39
   335 0000000000003e08     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_40
   336 0000000000003e58     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_41
   337 0000000000003f38     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_42
   338 0000000000003f40     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_43
   339 0000000000003f78     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_45
   340 0000000000003fb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_48
   341 0000000000003058     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_5
   342 0000000000004000     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_50
   343 0000000000004040     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_52
   344 00000000000040c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_55
   345 0000000000003068     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_6
   346 0000000000004230     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_61
   347 0000000000004258     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_63
   348 0000000000004270     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_64
   349 00000000000042c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_65
   350 00000000000042e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_66
   351 0000000000004378     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_68
   352 0000000000003078     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_7
   353 0000000000004400     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_71
   354 0000000000004428     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_72
   355 0000000000004480     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_73
   356 0000000000004658     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_75
   357 0000000000004900     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_78
   358 00000000000049b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_79
   359 0000000000003088     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_8
   360 00000000000049d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_80
   361 00000000000049f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_81
   362 0000000000003090     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_9
   363 0000000000004d20     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_10
   364 0000000000004fd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_11
   365 0000000000004f50     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_12
   366 00000000000051a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_13
   367 0000000000005188     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_14
   368 0000000000005278     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_18
   369 0000000000005258     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_19
   370 0000000000004d10     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_2
   371 00000000000053a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_20
   372 0000000000005320     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_21
   373 0000000000005980     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_22
   374 00000000000053f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_23
   375 00000000000057c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_26
   376 0000000000005708     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_27
   377 0000000000005878     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_28
   378 00000000000058b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_29
   379 0000000000004d38     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_3
   380 0000000000004fc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_30
   381 0000000000004d88     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_31
   382 0000000000004d30     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_32
   383 0000000000004b28     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_4
   384 0000000000004b98     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_5
   385 0000000000004d90     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_9
   386 0000000000005af8     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_10
   387 0000000000005fb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_11
   388 0000000000005f98     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_12
   389 0000000000006098     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_13
   390 00000000000062c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_15
   391 0000000000006278     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_16
   392 0000000000006380     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_17
   393 00000000000063b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_18
   394 0000000000005d50     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_19
   395 0000000000005d60     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_20
   396 0000000000005b20     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_3
   397 0000000000005ac0     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_4
   398 0000000000005d68     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_5
   399 0000000000005ce0     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_6
   400 0000000000005f70     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_7
   401 0000000000005f60     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_8
   402 0000000000005ac8     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_9
   403 0000000000006f00     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_13
   404 0000000000007050     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_14
   405 0000000000007068     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_15
   406 00000000000070b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_16
   407 0000000000007958     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_18
   408 0000000000007d10     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_19
   409 0000000000006588     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_2
   410 0000000000007f78     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_20
   411 0000000000006ad0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_21
   412 00000000000073a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_23
   413 00000000000073d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_24
   414 0000000000007910     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_26
   415 00000000000071b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_27
   416 0000000000007528     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_28
   417 0000000000006590     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_3
   418 0000000000007e40     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_30
   419 0000000000007ef0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_31
   420 0000000000007f30     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_32
   421 0000000000007fd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_33
   422 0000000000006ba0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_34
   423 00000000000066d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_35
   424 0000000000006bb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_37
   425 00000000000065e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_4
   426 0000000000006f70     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_40
   427 00000000000071f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_41
   428 0000000000007268     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_42
   429 00000000000079a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_43
   430 0000000000007a20     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_45
   431 0000000000006db8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_47
   432 00000000000076f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_49
   433 0000000000006578     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_5
   434 0000000000007778     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_51
   435 0000000000007bb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_53
   436 0000000000007d88     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_55
   437 0000000000007f98     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_57
   438 0000000000006e30     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_58
   439 0000000000007040     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_59
   440 00000000000066a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_6
   441 00000000000065e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_60
   442 0000000000007cd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_61
   443 0000000000006620     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_7
   444 0000000000006750     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_9
   445 00000000000000e8     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   446 0000000000000a48  4552 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::_process_initialize_account
   447 00000000000094e0  5432 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_burn
   448 00000000000059a0  2712 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_revoke
   449 000000000000d158  2872 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::validate_owner
   450 0000000000004a40  3936 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_approve
   451 0000000000008070  5232 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_mint_to
   452 0000000000002e10  7216 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_transfer
   453 000000000000aa18  3720 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_close_account
   454 0000000000006438  7224 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_set_authority
   455 00000000000000f0  2392 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_initialize_mint
   456 0000000000001c10  4608 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_initialize_multisig
   457 000000000000b8a0  3776 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process_toggle_freeze_account
   458 000000000000c760  2552 FUNC    LOCAL  DEFAULT     1 spl_token::processor::Processor::process
   459 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.1
   460 0000000000023012    35 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
   461 0000000000024cd0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   462 0000000000023081    40 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_3
   463 0000000000024ce8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_4
   464 0000000000023035    76 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_43
   465 0000000000023150    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
   466 000000000000dd50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_11
   467 000000000000dd78     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
   468 000000000000dd88     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_16
   469 000000000000ddc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_19
   470 000000000000de20     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_21
   471 000000000000de40     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_24
   472 000000000000de50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_26
   473 000000000000def0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_31
   474 000000000000df18     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_32
   475 000000000000df30     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_34
   476 000000000000df38     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_35
   477 000000000000df70     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_36
   478 000000000000df80     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_38
   479 000000000000dfa8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_39
   480 000000000000dfd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_41
   481 000000000000e128     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_46
   482 000000000000e1d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_47
   483 000000000000e1e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_48
   484 000000000000e1f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_50
   485 000000000000e208     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_51
   486 000000000000e218     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_53
   487 000000000000e2b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_56
   488 000000000000e358     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_59
   489 000000000000e428     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_61
   490 000000000000e430     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_62
   491 000000000000e438     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_63
   492 000000000000e4d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_66
   493 000000000000e570     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_69
   494 000000000000dd18     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_7
   495 000000000000e578     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_70
   496 000000000000eb50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_71
   497 000000000000e580     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_72
   498 000000000000e5a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_73
   499 000000000000e5d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_74
   500 000000000000ec10     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_75
   501 000000000000e5f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_76
   502 000000000000e770     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_78
   503 000000000000e7d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_79
   504 000000000000e7e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_81
   505 000000000000e818     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_82
   506 000000000000e8d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_83
   507 000000000000e980     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_84
   508 000000000000e990     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_85
   509 000000000000dd30     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_9
   510 000000000000ea68     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_90
   511 000000000000eae0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_91
   512 000000000000eb50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_92
   513 000000000000eb08     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_93
   514 000000000000eb30     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_94
   515 000000000000ec20     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_95
   516 000000000000ecd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_96
   517 000000000000eda8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_97
   518 000000000000edb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_98
   519 000000000000dc90  4488 FUNC    LOCAL  DEFAULT     1 spl_token::instruction::TokenInstruction::unpack
   520 000000000000ee18    56 FUNC    LOCAL  DEFAULT     1 spl_token::instruction::is_valid_signer_index
   521 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.10
   522 000000000000ee88     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_2
   523 000000000000eeb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_4
   524 000000000000eed0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_6
   525 000000000000ef30     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_9
   526 000000000000eff8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
   527 000000000000f018     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_11
   528 000000000000ef68     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_2
   529 000000000000ef98     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
   530 000000000000efb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_6
   531 000000000000f140     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_2
   532 000000000000f158     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_3
   533 000000000000ee50   232 FUNC    LOCAL  HIDDEN      1 core::alloc::global::GlobalAlloc::alloc_zeroed
   534 000000000000ef38   232 FUNC    LOCAL  HIDDEN      1 core::alloc::global::GlobalAlloc::realloc
   535 000000000000f020   328 FUNC    LOCAL  HIDDEN      1 bincode::internal::deserialize
   536 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.11
   537 000000000000f1c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_4
   538 000000000000f238     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
   539 000000000000f378     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_2
   540 000000000000f3b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_3
   541 000000000000f168   112 FUNC    LOCAL  HIDDEN      1 core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
   542 000000000000f1d8   112 FUNC    LOCAL  HIDDEN      1 core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne
   543 000000000000f3c0    16 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
   544 000000000000f248   216 FUNC    LOCAL  HIDDEN      1 alloc::vec::Vec<T,A>::extend_from_slice
   545 000000000000f320    32 FUNC    LOCAL  HIDDEN      1 alloc::vec::Vec<T,A>::reserve
   546 000000000000f340   128 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
   547 000000000000f3d0    64 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
   548 000000000000f410    64 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
   549 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.12
   550 000000000000f4e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_3
   551 000000000000f578     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_3
   552 000000000000f450   152 FUNC    LOCAL  HIDDEN      1 <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop
   553 000000000000f4e8   152 FUNC    LOCAL  HIDDEN      1 <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop
   554 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.13
   555 0000000000024d28    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_1
   556 0000000000023235    15 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_10
   557 0000000000023244    11 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_11
   558 0000000000024d60    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   559 0000000000024d00    16 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
   560 0000000000023168    55 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_4
   561 0000000000024d40    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_5
   562 0000000000024d10    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_6
   563 0000000000023168     0 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_7
   564 000000000002319f    74 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_8
   565 00000000000231e9    76 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_9
   566 000000000000f5f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_2
   567 000000000000f8c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_2
   568 000000000000f9a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_2
   569 000000000000f598    40 FUNC    LOCAL  DEFAULT     1 <&T as core::fmt::Display>::fmt
   570 000000000000f5c0     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   571 000000000000f638     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   572 000000000000f628    16 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   573 000000000000f580    24 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Display>::fmt
   574 000000000000f5c8    96 FUNC    LOCAL  HIDDEN      1 core::slice::<impl [T]>::copy_from_slice
   575 000000000000f640   736 FUNC    LOCAL  HIDDEN      1 serde::de::Error::invalid_length
   576 000000000000f920   208 FUNC    LOCAL  HIDDEN      1 <alloc::boxed::Box<T> as core::convert::From<T>>::from
   577 000000000000f9f0    88 FUNC    LOCAL  HIDDEN      1 bincode::deserialize
   578 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.14
   579 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.15
   580 000000000002339c    22 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
   581 000000000002334c    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_11
   582 0000000000023290    28 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_12
   583 000000000002337f    29 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_13
   584 00000000000232c6    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_14
   585 000000000002331b    25 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_15
   586 000000000002326a    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_16
   587 00000000000232e1    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_2
   588 0000000000023334    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_3
   589 000000000002327d    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_4
   590 0000000000023366    25 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_5
   591 00000000000232ac    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
   592 00000000000232fc    31 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_7
   593 000000000002324f    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_8
   594 00000000000233b2    14 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_9
   595 000000000000fb70     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_10
   596 000000000000fa90     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_12
   597 000000000000fb48     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_16
   598 000000000000faf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_18
   599 000000000000fb98     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_21
   600 000000000000fbc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_24
   601 000000000000fce8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_26
   602 000000000000fc60     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_27
   603 000000000000fc20     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_28
   604 000000000000fca0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_30
   605 000000000000fc00     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_32
   606 000000000000fc80     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_33
   607 000000000000fc40     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_34
   608 000000000000fcc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_35
   609 000000000000fcd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_36
   610 000000000000fcd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_37
   611 000000000000fce0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_38
   612 000000000000fb20     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_5
   613 000000000000fac8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_7
   614 000000000000fd48     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_2
   615 000000000000fd10    24 FUNC    LOCAL  HIDDEN      1 core::cell::Cell<T>::replace
   616 000000000000fd80    72 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   617 000000000000fe28    40 FUNC    LOCAL  DEFAULT     1 spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from
   618 000000000000fd10    24 FUNC    LOCAL  HIDDEN      1 core::cell::Cell<T>::replace
   619 000000000000fa48   712 FUNC    LOCAL  HIDDEN      1 <solana_program::program_error::ProgramError as solana_program::program_error::PrintProgramError>::print
   620 000000000000fd28    88 FUNC    LOCAL  HIDDEN      1 core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
   621 000000000000fdc8    96 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   622 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.2
   623 0000000000024d80    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_1
   624 0000000000024d98    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   625 0000000000024db0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
   626 00000000000233c0    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_38
   627 0000000000024dc8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_4
   628 0000000000024de0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_5
   629 0000000000024df8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_6
   630 0000000000024e10    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_7
   631 0000000000010710     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_2
   632 00000000000107b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_3
   633 00000000000107c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_4
   634 00000000000107d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_5
   635 0000000000011080     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_8
   636 0000000000011678     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_10
   637 0000000000011680     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_11
   638 00000000000110e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_3
   639 00000000000110f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_4
   640 0000000000011118     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_5
   641 00000000000115b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_8
   642 0000000000011668     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_9
   643 0000000000011910     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_11
   644 00000000000119a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_14
   645 00000000000119b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_15
   646 00000000000116d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_2
   647 0000000000011a08     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_20
   648 0000000000011b28     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_24
   649 0000000000011728     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_25
   650 0000000000011808     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_26
   651 0000000000011810     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_27
   652 0000000000011818     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_7
   653 0000000000011c80     0 NOTYPE  LOCAL  DEFAULT     1 LBB16_2
   654 0000000000011cc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB16_4
   655 0000000000011d38     0 NOTYPE  LOCAL  DEFAULT     1 LBB16_5
   656 0000000000011d78     0 NOTYPE  LOCAL  DEFAULT     1 LBB16_7
   657 0000000000011de0     0 NOTYPE  LOCAL  DEFAULT     1 LBB16_8
   658 0000000000011e08     0 NOTYPE  LOCAL  DEFAULT     1 LBB17_2
   659 0000000000011e30     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_2
   660 0000000000011e58     0 NOTYPE  LOCAL  DEFAULT     1 LBB19_2
   661 00000000000121b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_11
   662 0000000000011fd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_12
   663 0000000000012238     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_13
   664 00000000000123e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_18
   665 0000000000011ea8     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_2
   666 0000000000012428     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_22
   667 00000000000124f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_27
   668 0000000000012610     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_31
   669 00000000000124a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_32
   670 0000000000012010     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_33
   671 0000000000012040     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_34
   672 00000000000120b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_35
   673 0000000000012320     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_36
   674 00000000000122d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_37
   675 00000000000120c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB20_7
   676 0000000000012ac0     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_10
   677 0000000000012b28     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_11
   678 00000000000128e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_2
   679 00000000000129d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_4
   680 0000000000012a38     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_5
   681 0000000000012a68     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_7
   682 0000000000012a88     0 NOTYPE  LOCAL  DEFAULT     1 LBB21_8
   683 00000000000132e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_10
   684 0000000000013388     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_11
   685 0000000000013408     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_12
   686 00000000000136f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_13
   687 0000000000013300     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_14
   688 0000000000012b70     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_2
   689 0000000000012bd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_5
   690 0000000000012bd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_6
   691 0000000000013260     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_7
   692 0000000000013740     0 NOTYPE  LOCAL  DEFAULT     1 LBB25_2
   693 0000000000013800     0 NOTYPE  LOCAL  DEFAULT     1 LBB25_4
   694 00000000000138a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB25_6
   695 00000000000138d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB25_7
   696 0000000000013890     0 NOTYPE  LOCAL  DEFAULT     1 LBB25_9
   697 000000000000fea0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_2
   698 000000000000fec0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_3
   699 000000000000fee8     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_2
   700 000000000000ff08     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_3
   701 000000000000ff30     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_2
   702 000000000000ff50     0 NOTYPE  LOCAL  DEFAULT     1 LBB5_3
   703 000000000000ff98     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_2
   704 000000000000ffe8     0 NOTYPE  LOCAL  DEFAULT     1 LBB7_2
   705 0000000000010038     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_2
   706 0000000000010418     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_10
   707 0000000000010420     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_11
   708 0000000000010098     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_3
   709 00000000000100a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_4
   710 00000000000100c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_5
   711 0000000000010358     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_8
   712 0000000000010408     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_9
   713 000000000000fe50    16 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::get_packed_len
   714 000000000000fe60    16 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::get_packed_len
   715 000000000000fe70    16 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::get_packed_len
   716 000000000000fe80    72 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack_unchecked
   717 000000000000fec8    72 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack_unchecked
   718 000000000000ff10    72 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack_unchecked
   719 000000000000ff58    80 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::pack
   720 000000000000ffa8    80 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::pack
   721 000000000000fff8    80 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::pack
   722 0000000000010048  1000 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack
   723 0000000000010430  3176 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack
   724 0000000000011098  1528 FUNC    LOCAL  HIDDEN      1 solana_program::program_pack::Pack::unpack
   725 0000000000011e38    40 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Account as solana_program::program_pack::IsInitialized>::is_initialized
   726 0000000000011de8    40 FUNC    LOCAL  DEFAULT     1 spl_token::state::Account::is_frozen
   727 0000000000011e10    40 FUNC    LOCAL  DEFAULT     1 spl_token::state::Account::is_native
   728 0000000000011c38   432 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Mint as solana_program::program_pack::Pack>::pack_into_slice
   729 0000000000011690  1448 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Mint as solana_program::program_pack::Pack>::unpack_from_slice
   730 0000000000012898   664 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Account as solana_program::program_pack::Pack>::pack_into_slice
   731 0000000000011e60  2616 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Account as solana_program::program_pack::Pack>::unpack_from_slice
   732 00000000000136f8   520 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Multisig as solana_program::program_pack::Pack>::pack_into_slice
   733 0000000000012b30  3016 FUNC    LOCAL  DEFAULT     1 <spl_token::state::Multisig as solana_program::program_pack::Pack>::unpack_from_slice
   734 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.3
   735 0000000000023677    25 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
   736 000000000002355a    29 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_10
   737 0000000000023487    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_11
   738 00000000000234e6    67 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_12
   739 00000000000234cc    26 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_13
   740 00000000000235c9    38 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_14
   741 00000000000235a0    41 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_15
   742 0000000000023422    45 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_16
   743 000000000002340a    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_17
   744 0000000000023664    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_18
   745 000000000002361d    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_19
   746 0000000000023529    49 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_2
   747 00000000000235ef    46 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_3
   748 000000000002344f    56 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_4
   749 00000000000234a2    42 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_5
   750 0000000000023577    41 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
   751 00000000000233da    48 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_7
   752 0000000000023638    44 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_8
   753 0000000000023690    50 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_9
   754 0000000000013a20     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_10
   755 0000000000013958     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_13
   756 00000000000139f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_17
   757 00000000000139c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_20
   758 0000000000013a50     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_23
   759 0000000000013948     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_26
   760 0000000000013b38     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_27
   761 0000000000013a98     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_28
   762 0000000000013ab8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_29
   763 00000000000139b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_30
   764 0000000000013af8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_31
   765 0000000000013b08     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_32
   766 0000000000013a40     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_33
   767 0000000000013aa8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_34
   768 0000000000013980     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_35
   769 0000000000013ad8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_36
   770 0000000000013ae8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_37
   771 0000000000013a10     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_38
   772 0000000000013ac8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_39
   773 00000000000139e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_40
   774 0000000000013b18     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_41
   775 0000000000013b28     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_42
   776 0000000000013b48     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_43
   777 0000000000013a70     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_44
   778 0000000000013b50     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_45
   779 0000000000013a80     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_5
   780 0000000000013990     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_7
   781 0000000000013c18     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_12
   782 0000000000013c48     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
   783 0000000000013c78     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_18
   784 0000000000013ca8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_21
   785 0000000000013cd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_24
   786 0000000000013d00     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_26
   787 0000000000013d20     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_27
   788 0000000000013d40     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_28
   789 0000000000013d58     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_29
   790 0000000000013d78     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_30
   791 0000000000013d98     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_31
   792 0000000000013db8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_32
   793 0000000000013dd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_33
   794 0000000000013df8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_34
   795 0000000000013e18     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_35
   796 0000000000013e38     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_36
   797 0000000000013e48     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_37
   798 0000000000013e50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_38
   799 0000000000013bb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
   800 0000000000013be8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_9
   801 0000000000013b58    16 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   802 0000000000013900   600 FUNC    LOCAL  HIDDEN      1 solana_program::decode_error::DecodeError::decode_custom_error_to_enum
   803 0000000000013b68   760 FUNC    LOCAL  HIDDEN      1 spl_token::processor::<impl solana_program::program_error::PrintProgramError for spl_token::error::TokenError>::print
   804 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.4
   805 0000000000023711    43 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
   806 0000000000024e40    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   807 0000000000024e28    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
   808 00000000000236c2    79 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_4
   809 0000000000013fb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
   810 0000000000013f08     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_11
   811 0000000000013fc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_12
   812 0000000000013ec8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
   813 0000000000013f58     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_7
   814 0000000000013f80     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_8
   815 0000000000013fa8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_9
   816 0000000000014138     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_10
   817 0000000000014148     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_12
   818 0000000000014160     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_13
   819 0000000000014288     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_16
   820 00000000000142a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_17
   821 00000000000142f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_19
   822 0000000000014300     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_20
   823 0000000000014370     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_21
   824 00000000000143b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_22
   825 00000000000143d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_23
   826 00000000000143f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_25
   827 0000000000014368     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_27
   828 0000000000014048     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_3
   829 0000000000014088     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_6
   830 00000000000140a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_8
   831 0000000000014440     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_2
   832 0000000000014498     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_3
   833 0000000000013e60     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   834 0000000000013e68   368 FUNC    LOCAL  DEFAULT     1 alloc::raw_vec::finish_grow
   835 0000000000014400    72 FUNC    LOCAL  HIDDEN      1 <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
   836 0000000000013fd8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
   837 0000000000013fe8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
   838 0000000000013fd8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
   839 0000000000013ff8  1032 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::reserve
   840 0000000000014448    88 FUNC    LOCAL  HIDDEN      1 <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
   841 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.5
   842 0000000000023757    43 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
   843 0000000000024e90    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   844 0000000000024eb0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
   845 0000000000024e60    16 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_4
   846 0000000000024e70    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_5
   847 000000000002373c    27 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
   848 0000000000023782    85 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_7
   849 0000000000014728     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_12
   850 0000000000014768     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_13
   851 00000000000149e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
   852 0000000000014a90     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_17
   853 00000000000147c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_18
   854 00000000000148c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_21
   855 0000000000014908     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_22
   856 0000000000014a30     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_23
   857 0000000000014920     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_24
   858 0000000000014938     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_25
   859 0000000000014940     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_26
   860 0000000000014ae0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_27
   861 0000000000014960     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_28
   862 00000000000149d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_29
   863 0000000000014588     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_3
   864 00000000000145c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
   865 0000000000014618     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
   866 0000000000014870     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_6
   867 0000000000014578     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_7
   868 0000000000014ae8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_8
   869 0000000000014670     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_9
   870 00000000000144a0     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   871 00000000000144a8    24 FUNC    LOCAL  HIDDEN      1 bincode::de::Deserializer<R,O>::with_bincode_read
   872 00000000000144c0  1624 FUNC    LOCAL  HIDDEN      1 <&mut bincode::de::Deserializer<R,O> as serde::de::Deserializer>::deserialize_struct
   873 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.6
   874 0000000000024ec8    48 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_1
   875 0000000000014b90     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_2
   876 0000000000014bc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_3
   877 0000000000014dd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB10_2
   878 0000000000015038     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_10
   879 0000000000014f48     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_3
   880 0000000000014e68     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_4
   881 0000000000014f90     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_5
   882 0000000000015018     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_6
   883 0000000000014ed0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_7
   884 0000000000014f00     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_9
   885 0000000000014cd8     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   886 0000000000014de0   616 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_char
   887 0000000000015048   176 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_fmt
   888 00000000000150f8    32 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_str
   889 0000000000014b18   208 FUNC    LOCAL  HIDDEN      1 solana_program::account_info::next_account_info
   890 00000000000151f0   104 FUNC    LOCAL  DEFAULT     1 spl_token::native_mint::id
   891 0000000000014be8    24 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Display>::fmt
   892 0000000000014c00    24 FUNC    LOCAL  HIDDEN      1 core::fmt::ArgumentV1::new
   893 0000000000014c00    24 FUNC    LOCAL  HIDDEN      1 core::fmt::ArgumentV1::new
   894 0000000000014c18    24 FUNC    LOCAL  HIDDEN      1 core::fmt::ArgumentV1::new
   895 0000000000014c30   168 FUNC    LOCAL  HIDDEN      1 core::fmt::Write::write_fmt
   896 0000000000014ce0   256 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::zip::Zip<A,B>::new
   897 0000000000015178   120 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   898 0000000000015118    24 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   899 0000000000015130    16 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   900 0000000000015140    56 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   901 0000000000014c00    24 FUNC    LOCAL  HIDDEN      1 core::fmt::ArgumentV1::new
   902 0000000000014c00    24 FUNC    LOCAL  HIDDEN      1 core::fmt::ArgumentV1::new
   903 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.7
   904 0000000000024ef8    16 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_1
   905 00000000000237e8     0 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_2
   906 0000000000015350     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_2
   907 0000000000015468     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_4
   908 00000000000154e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_2
   909 0000000000015510     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
   910 0000000000015528     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_6
   911 0000000000015570     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_8
   912 00000000000237d8    16 OBJECT  LOCAL  DEFAULT     7 spl_token::entrypoint::A
   913 00000000000154a8   208 FUNC    LOCAL  HIDDEN      1 __rg_alloc
   914 00000000000155c0    48 FUNC    LOCAL  HIDDEN      1 __rg_alloc_zeroed
   915 0000000000015578     8 FUNC    LOCAL  HIDDEN      1 __rg_dealloc
   916 0000000000015580    64 FUNC    LOCAL  HIDDEN      1 __rg_realloc
   917 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.8
   918 0000000000024f08    48 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_1
   919 000000000002388a    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_3
   920 0000000000024f50    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_4
   921 0000000000024f38    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_5
   922 00000000000237f4    22 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
   923 000000000002380a    19 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_7
   924 000000000002381d    12 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_8
   925 0000000000023829    97 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_9
   926 0000000000015a18     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
   927 0000000000015a48     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_11
   928 00000000000159c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_12
   929 0000000000015ac8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_13
   930 0000000000015840     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_14
   931 0000000000015af0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_15
   932 0000000000015860     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_3
   933 0000000000015990     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_9
   934 0000000000015b10     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_1
   935 0000000000015b20     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_2
   936 0000000000015b50     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
   937 0000000000015b60     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
   938 0000000000015b68     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   939 0000000000015790   872 FUNC    LOCAL  HIDDEN      1 solana_program::sysvar::Sysvar::from_account_info
   940 0000000000015af8   112 FUNC    LOCAL  HIDDEN      1 core::ops::range::RangeInclusive<Idx>::contains
   941 0000000000015738    88 FUNC    LOCAL  HIDDEN      1 solana_program::rent::_::<impl serde::de::Deserialize for solana_program::rent::Rent>::deserialize
   942 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spl_token.e5qxbwbr-cgu.9
   943 0000000000024f70    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
   944 00000000000238a2    77 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_3
   945 0000000000015e80     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_2
   946 0000000000015ea0     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_4
   947 0000000000015eb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_6
   948 0000000000015bf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_4
   949 0000000000015c00     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_5
   950 0000000000015c08     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_6
   951 00000000000238f0    25 OBJECT  LOCAL  DEFAULT     7 str.0
   952 0000000000015c68    40 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::enumerate::Enumerate<I>::new
   953 0000000000015c68    40 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::enumerate::Enumerate<I>::new
   954 0000000000015cb0    56 FUNC    LOCAL  HIDDEN      1 core::slice::iter::Iter<T>::as_slice
   955 0000000000015df0    56 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   956 0000000000015df0    56 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   957 0000000000015e28    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   958 0000000000015d18     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   959 0000000000015da8    72 FUNC    LOCAL  HIDDEN      1 <T as core::convert::TryInto<U>>::try_into
   960 0000000000015e28    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   961 0000000000015ce8    48 FUNC    LOCAL  HIDDEN      1 core::slice::iter::Iter<T>::as_slice
   962 0000000000015d38    96 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   963 0000000000015d18     8 FUNC    LOCAL  HIDDEN      1 bincode::config::Options::allow_trailing_bytes
   964 0000000000015d18     8 FUNC    LOCAL  HIDDEN      1 bincode::config::Options::with_fixint_encoding
   965 0000000000015b70    16 FUNC    LOCAL  HIDDEN      1 <core::slice::iter::Chunks<T> as core::iter::adapters::zip::TrustedRandomAccess>::may_have_side_effect
   966 0000000000015b90   176 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::zip::TrustedRandomAccess::size
   967 0000000000015e28    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
   968 0000000000015e40   160 FUNC    LOCAL  HIDDEN      1 <core::slice::iter::Chunks<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
   969 0000000000015ee0    32 FUNC    LOCAL  HIDDEN      1 <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
   970 0000000000015c90    32 FUNC    LOCAL  HIDDEN      1 core::alloc::layout::size_align
   971 0000000000015d18     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   972 0000000000015d20    24 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
   973 0000000000015d98    16 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
   974 0000000000015b80    16 FUNC    LOCAL  HIDDEN      1 <bincode::config::WithOtherLimit<O,L> as bincode::config::internal::InternalOptions>::limit
   975 0000000000015c40    40 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::zip::TrustedRandomAccess::size
   976 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS 3ldgzogko6nn400h
   977 0000000000015f00     0 NOTYPE  LOCAL  DEFAULT     1
   978 0000000000015f10     0 NOTYPE  LOCAL  DEFAULT     1
   979 0000000000015f20     0 NOTYPE  LOCAL  DEFAULT     1
   980 0000000000015f30     0 NOTYPE  LOCAL  DEFAULT     1
   981 0000000000015f40     0 NOTYPE  LOCAL  DEFAULT     1
   982 0000000000015f00    16 FUNC    LOCAL  DEFAULT     1 __rust_alloc
   983 0000000000015f10    16 FUNC    LOCAL  DEFAULT     1 __rust_dealloc
   984 0000000000015f30    16 FUNC    LOCAL  DEFAULT     1 __rust_alloc_zeroed
   985 0000000000015f20    16 FUNC    LOCAL  DEFAULT     1 __rust_realloc
   986 0000000000015f40    16 FUNC    LOCAL  DEFAULT     1 __rust_alloc_error_handler
   987 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.1
   988 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.10
   989 0000000000024fa8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_12
   990 0000000000023921    99 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_46
   991 0000000000023909    24 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_5
   992 0000000000024f88    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_6
   993 0000000000024fc0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_7
   994 0000000000015fb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB22_2
   995 0000000000016020     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_4
   996 00000000000160b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB32_2
   997 0000000000016190     0 NOTYPE  LOCAL  DEFAULT     1 LBB34_2
   998 0000000000015f50     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
   999 0000000000016118   208 FUNC    LOCAL  DEFAULT     1 solana_program::account_info::AccountInfo::data_len
  1000 0000000000016040   216 FUNC    LOCAL  DEFAULT     1 solana_program::account_info::AccountInfo::lamports
  1001 0000000000016030    16 FUNC    LOCAL  DEFAULT     1 solana_program::account_info::AccountInfo::unsigned_key
  1002 0000000000015f58   104 FUNC    LOCAL  HIDDEN      1 core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
  1003 0000000000015fc0   112 FUNC    LOCAL  HIDDEN      1 core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  1004 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.0
  1005 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.11
  1006 0000000000016260     0 NOTYPE  LOCAL  DEFAULT     1 LBB29_2
  1007 0000000000016308     0 NOTYPE  LOCAL  DEFAULT     1 LBB30_2
  1008 0000000000016210   160 FUNC    LOCAL  HIDDEN      1 alloc::rc::Rc<T>::new
  1009 00000000000162b0   136 FUNC    LOCAL  HIDDEN      1 alloc::rc::Rc<T>::new
  1010 0000000000023984    32 OBJECT  LOCAL  DEFAULT     7 solana_program::sysvar::rent::ID
  1011 0000000000016338    48 FUNC    LOCAL  DEFAULT     1 solana_program::sysvar::rent::check_id
  1012 00000000000161e8    24 FUNC    LOCAL  HIDDEN      1 core::iter::adapters::rev::Rev<T>::new
  1013 0000000000016200    16 FUNC    LOCAL  HIDDEN      1 alloc::rc::Rc<T>::from_inner
  1014 0000000000016200    16 FUNC    LOCAL  HIDDEN      1 alloc::rc::Rc<T>::from_inner
  1015 00000000000161e8    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
  1016 00000000000161e8    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
  1017 00000000000161e8    24 FUNC    LOCAL  HIDDEN      1 <I as core::iter::traits::collect::IntoIterator>::into_iter
  1018 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.12
  1019 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.13
  1020 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.14
  1021 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.15
  1022 00000000000239a4    41 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_2
  1023 0000000000024fd8    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
  1024 00000000000239cd    80 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_65
  1025 0000000000016440     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_2
  1026 0000000000016368   272 FUNC    LOCAL  HIDDEN      1 core::ptr::const_ptr::<impl *const T>::align_offset
  1027 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.2
  1028 0000000000023a6c    43 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_1
  1029 0000000000025008    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_2
  1030 0000000000024ff0    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_3
  1031 0000000000023a1d    79 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_6
  1032 0000000000016a48     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_10
  1033 0000000000016a58     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_12
  1034 0000000000016a70     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_13
  1035 0000000000016b98     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_16
  1036 0000000000016bb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_17
  1037 0000000000016c08     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_19
  1038 0000000000016c18     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_20
  1039 0000000000016c90     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_21
  1040 0000000000016cd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_22
  1041 0000000000016cf8     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_23
  1042 0000000000016d10     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_25
  1043 0000000000016c88     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_27
  1044 0000000000016958     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_3
  1045 0000000000016998     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_6
  1046 00000000000169b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB18_8
  1047 00000000000165c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
  1048 0000000000016520     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_11
  1049 00000000000165d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_12
  1050 00000000000164e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
  1051 0000000000016570     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_7
  1052 0000000000016598     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_8
  1053 00000000000165c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_9
  1054 0000000000016d60     0 NOTYPE  LOCAL  DEFAULT     1 LBB38_2
  1055 0000000000016860     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_11
  1056 0000000000016890     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_13
  1057 00000000000168b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_14
  1058 00000000000168c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_15
  1059 00000000000166b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_2
  1060 00000000000166c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_4
  1061 00000000000166e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_5
  1062 0000000000016808     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_8
  1063 0000000000016478     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1064 0000000000016480   368 FUNC    LOCAL  DEFAULT     1 alloc::raw_vec::finish_grow
  1065 00000000000168f8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1066 0000000000016d20    72 FUNC    LOCAL  HIDDEN      1 <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  1067 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1068 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1069 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1070 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1071 00000000000165f0   760 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::allocate_in
  1072 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1073 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1074 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1075 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1076 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1077 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1078 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1079 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1080 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1081 00000000000168f8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1082 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1083 00000000000168e8    16 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::ptr
  1084 0000000000016908  1048 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::reserve
  1085 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.3
  1086 0000000000016d88    16 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  1087 0000000000016d68    32 FUNC    LOCAL  HIDDEN      1 alloc::vec::Vec<T,A>::reserve
  1088 0000000000016d98    64 FUNC    LOCAL  HIDDEN      1 <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  1089 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.4
  1090 0000000000023a97    97 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_106
  1091 0000000000025028    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_27
  1092 0000000000017140     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_11
  1093 00000000000171d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_13
  1094 0000000000017260     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_15
  1095 0000000000017278     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_17
  1096 0000000000017298     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_19
  1097 0000000000016ee0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_2
  1098 0000000000017380     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_21
  1099 0000000000017460     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_22
  1100 0000000000016fc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_3
  1101 0000000000016fe0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_4
  1102 0000000000017070     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_7
  1103 00000000000170b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_8
  1104 00000000000170c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB41_9
  1105 0000000000017638     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_10
  1106 0000000000017550     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_12
  1107 0000000000017610     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_16
  1108 00000000000175b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_18
  1109 0000000000017660     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_21
  1110 0000000000017688     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_23
  1111 00000000000176b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_25
  1112 0000000000017720     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_26
  1113 00000000000176e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_27
  1114 0000000000017760     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_28
  1115 00000000000176c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_29
  1116 0000000000017740     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_30
  1117 0000000000017700     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_31
  1118 0000000000017780     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_32
  1119 0000000000017798     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_33
  1120 00000000000177c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_34
  1121 00000000000175e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_5
  1122 0000000000017588     0 NOTYPE  LOCAL  DEFAULT     1 LBB58_7
  1123 0000000000017500   720 FUNC    LOCAL  DEFAULT     1 solana_program::program_error::<impl core::convert::From<solana_program::program_error::ProgramError> for u64>::from
  1124 0000000000016e08  1784 FUNC    LOCAL  DEFAULT     1 solana_program::entrypoint::deserialize
  1125 0000000000016dd8    40 FUNC    LOCAL  HIDDEN      1 core::alloc::layout::size_align
  1126 0000000000016dd8    40 FUNC    LOCAL  HIDDEN      1 core::alloc::layout::size_align
  1127 0000000000016e00     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
  1128 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.5
  1129 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.6
  1130 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.7
  1131 00000000000177e8    16 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
  1132 00000000000177d0    24 FUNC    LOCAL  HIDDEN      1 core::cell::Cell<T>::replace
  1133 00000000000177d0    24 FUNC    LOCAL  HIDDEN      1 core::cell::Cell<T>::replace
  1134 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.8
  1135 0000000000023af8    93 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_109
  1136 0000000000025040    32 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_43
  1137 0000000000023b55    41 OBJECT  LOCAL  DEFAULT     7 .L__unnamed_50
  1138 0000000000025060    24 OBJECT  LOCAL  DEFAULT     9 .L__unnamed_51
  1139 00000000000178a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB59_2
  1140 00000000000177f8     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1141 0000000000017820   208 FUNC    LOCAL  DEFAULT     1 solana_program::pubkey::Pubkey::new
  1142 0000000000017938    32 FUNC    LOCAL  DEFAULT     1 <solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref
  1143 00000000000178f0    72 FUNC    LOCAL  DEFAULT     1 solana_program::pubkey::Pubkey::new_from_array
  1144 0000000000017818     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
  1145 0000000000017800    24 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
  1146 0000000000017800    24 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
  1147 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_program.7hby8zh2-cgu.9
  1148 0000000000017a18     0 NOTYPE  LOCAL  DEFAULT     1 LBB45_2
  1149 0000000000017a78     0 NOTYPE  LOCAL  DEFAULT     1 LBB45_4
  1150 0000000000017b10     0 NOTYPE  LOCAL  DEFAULT     1 LBB46_2
  1151 0000000000017b68     0 NOTYPE  LOCAL  DEFAULT     1 LBB46_4
  1152 0000000000017b80     0 NOTYPE  LOCAL  DEFAULT     1 LBB46_6
  1153 0000000000017990   240 FUNC    LOCAL  DEFAULT     1 solana_program::rent::Rent::minimum_balance
  1154 0000000000017a80   264 FUNC    LOCAL  DEFAULT     1 solana_program::rent::Rent::is_exempt
  1155 0000000000017b88    16 FUNC    LOCAL  DEFAULT     1 solana_program::sysvar::rent::<impl solana_program::sysvar::SysvarId for solana_program::rent::Rent>::check_id
  1156 0000000000017958    56 FUNC    LOCAL  HIDDEN      1 core::ptr::align_offset
  1157 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hex.7ndevtss-cgu.1
  1158 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hex.7ndevtss-cgu.0
  1159 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hex.7ndevtss-cgu.3
  1160 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hex.7ndevtss-cgu.5
  1161 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.0
  1162 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.10
  1163 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.11
  1164 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.12
  1165 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.13
  1166 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.14
  1167 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.15
  1168 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.2
  1169 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.3
  1170 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.4
  1171 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.5
  1172 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.6
  1173 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.7
  1174 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.8
  1175 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.1
  1176 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS solana_frozen_abi.c4j9s2qq-cgu.9
  1177 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.2
  1178 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.0
  1179 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.1
  1180 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.4
  1181 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.5
  1182 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.6
  1183 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bs58.1twhu76n-cgu.7
  1184 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS spin.dk18cj1g-cgu.0
  1185 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.9
  1186 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.12
  1187 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.11
  1188 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.3
  1189 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.7
  1190 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.2
  1191 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.13
  1192 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.6
  1193 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.1
  1194 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.10
  1195 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS sha2.4rhxhx9r-cgu.8
  1196 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.7
  1197 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.1
  1198 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.5
  1199 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.4
  1200 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.2
  1201 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.10
  1202 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.6
  1203 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.0
  1204 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.3
  1205 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.8
  1206 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS log.2min1ukh-cgu.9
  1207 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.0
  1208 0000000000017b98    96 FUNC    LOCAL  HIDDEN      1 <T as core::convert::Into<U>>::into
  1209 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.10
  1210 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.11
  1211 0000000000017bf8    24 FUNC    LOCAL  DEFAULT     1 bincode::de::read::SliceReader::new
  1212 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.12
  1213 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.13
  1214 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.15
  1215 0000000000017c10     8 FUNC    LOCAL  DEFAULT     1 bincode::config::DefaultOptions::new
  1216 0000000000017c10     8 FUNC    LOCAL  HIDDEN      1 <T as core::convert::From<T>>::from
  1217 0000000000017c10     8 FUNC    LOCAL  DEFAULT     1 <bincode::config::DefaultOptions as core::default::Default>::default
  1218 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.4
  1219 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.5
  1220 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.14
  1221 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.6
  1222 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.8
  1223 0000000000017ca0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_2
  1224 0000000000017ce8    64 FUNC    LOCAL  DEFAULT     1 bincode::error::<impl core::convert::From<std::io::error::Error> for alloc::boxed::Box<bincode::error::ErrorKind>>::from
  1225 0000000000017c18   208 FUNC    LOCAL  HIDDEN      1 <alloc::boxed::Box<T> as core::convert::From<T>>::from
  1226 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS bincode.1h9081wg-cgu.9
  1227 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.0
  1228 0000000000017d58    32 FUNC    LOCAL  DEFAULT     1 <dyn serde::de::Expected as core::fmt::Display>::fmt
  1229 0000000000017d28    48 FUNC    LOCAL  DEFAULT     1 <&str as serde::de::Expected>::fmt
  1230 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.14
  1231 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.15
  1232 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.2
  1233 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.5
  1234 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.1
  1235 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.13
  1236 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.7
  1237 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS serde.6l3xmfrc-cgu.9
  1238 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.0
  1239 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.1
  1240 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.10
  1241 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.11
  1242 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.12
  1243 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.13
  1244 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.14
  1245 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.15
  1246 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.2
  1247 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.4
  1248 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.3
  1249 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.5
  1250 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.6
  1251 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.7
  1252 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.8
  1253 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS borsh.bheg6a0x-cgu.9
  1254 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.1
  1255 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.10
  1256 0000000000017d78    16 FUNC    LOCAL  DEFAULT     1 std::process::abort
  1257 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.11
  1258 0000000000017db0    16 FUNC    LOCAL  HIDDEN      1 std::sys::bpf::abort_internal
  1259 0000000000017d98    24 FUNC    LOCAL  HIDDEN      1 std::sys::bpf::panic
  1260 0000000000017d88    16 FUNC    LOCAL  HIDDEN      1 std::sys::bpf::sol_log
  1261 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.12
  1262 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.13
  1263 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.14
  1264 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.15
  1265 0000000000023b7e    46 OBJECT  LOCAL  DEFAULT     7 .Lanon.5ba0d885a17db97c028269bb434916b6.32
  1266 0000000000017dc0    48 FUNC    LOCAL  DEFAULT     1 rust_oom
  1267 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.2
  1268 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.0
  1269 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.3
  1270 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.4
  1271 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.5
  1272 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.6
  1273 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.7
  1274 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.8
  1275 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS std.8ah5mfz2-cgu.9
  1276 0000000000023bac    23 OBJECT  LOCAL  DEFAULT     7 .Lanon.8dc439b5e89675c9145ca04662b0e58f.55
  1277 0000000000017df0    64 FUNC    LOCAL  DEFAULT     1 rust_begin_unwind
  1278 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS panic_abort.coqcctjb-cgu.0
  1279 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hashbrown.6xul7ojl-cgu.1
  1280 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS hashbrown.6xul7ojl-cgu.2
  1281 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.0
  1282 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.1
  1283 0000000000017f30     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_10
  1284 0000000000017f40     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_11
  1285 0000000000017f08     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_12
  1286 0000000000017fb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_13
  1287 0000000000017fa0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_14
  1288 0000000000017fd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_15
  1289 0000000000017e90     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_3
  1290 0000000000017ec0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_6
  1291 0000000000017ed0     0 NOTYPE  LOCAL  DEFAULT     1 LBB6_8
  1292 00000000000180f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_10
  1293 0000000000018080     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_11
  1294 0000000000018100     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_12
  1295 0000000000018040     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_4
  1296 00000000000180a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_7
  1297 00000000000180c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_8
  1298 00000000000180e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB9_9
  1299 0000000000017fe0   312 FUNC    LOCAL  DEFAULT     1 alloc::raw_vec::finish_grow
  1300 0000000000018118    56 FUNC    LOCAL  DEFAULT     1 alloc::raw_vec::capacity_overflow
  1301 0000000000017e30   432 FUNC    LOCAL  HIDDEN      1 alloc::raw_vec::RawVec<T,A>::try_reserve
  1302 0000000000023bc3    28 OBJECT  LOCAL  HIDDEN      7 anon.f6872c5853b7ab428738afa418160683.4.llvm.13217898804959408353
  1303 0000000000023bdf    17 OBJECT  LOCAL  HIDDEN      7 anon.f6872c5853b7ab428738afa418160683.7.llvm.13217898804959408353
  1304 0000000000025078    24 OBJECT  LOCAL  HIDDEN      9 anon.f6872c5853b7ab428738afa418160683.8.llvm.13217898804959408353
  1305 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.11
  1306 0000000000023bf0    74 OBJECT  LOCAL  DEFAULT     7 .Lanon.34b34582ee24307dbdd760d2eba89639.0
  1307 0000000000025090    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.34b34582ee24307dbdd760d2eba89639.1
  1308 0000000000023c6d    24 OBJECT  LOCAL  DEFAULT     7 .Lanon.34b34582ee24307dbdd760d2eba89639.10
  1309 00000000000250c8    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.34b34582ee24307dbdd760d2eba89639.11
  1310 00000000000250a8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.34b34582ee24307dbdd760d2eba89639.3
  1311 0000000000023c3a    51 OBJECT  LOCAL  DEFAULT     7 .Lanon.34b34582ee24307dbdd760d2eba89639.9
  1312 0000000000018418     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_10
  1313 00000000000183b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_11
  1314 0000000000018290     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_14
  1315 00000000000183b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_16
  1316 00000000000181c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_2
  1317 00000000000181f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_3
  1318 0000000000018238     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_5
  1319 0000000000018270     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_7
  1320 0000000000018150     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1321 0000000000018168   736 FUNC    LOCAL  DEFAULT     1 alloc::fmt::format
  1322 0000000000018158    16 FUNC    LOCAL  HIDDEN      1 __rg_oom
  1323 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.12
  1324 0000000000018448    16 FUNC    LOCAL  DEFAULT     1 alloc::alloc::handle_alloc_error
  1325 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.2
  1326 0000000000018608     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_10
  1327 0000000000018638     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_11
  1328 00000000000186c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_12
  1329 0000000000018710     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_14
  1330 0000000000018720     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
  1331 0000000000018768     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_16
  1332 0000000000018780     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_17
  1333 00000000000184e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_3
  1334 0000000000018550     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
  1335 00000000000185b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_8
  1336 0000000000018600     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_9
  1337 0000000000018918     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_3
  1338 00000000000188c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_4
  1339 00000000000250e0    48 OBJECT  LOCAL  HIDDEN      9 anon.c01cbd3800a63be8cfd9157241e8eb3e.0.llvm.10554063460256905645
  1340 0000000000018458     8 FUNC    LOCAL  HIDDEN      1 core::ptr::drop_in_place
  1341 0000000000018460   824 FUNC    LOCAL  HIDDEN      1 <&mut W as core::fmt::Write>::write_char
  1342 0000000000018798   176 FUNC    LOCAL  HIDDEN      1 <&mut W as core::fmt::Write>::write_fmt
  1343 0000000000018848   232 FUNC    LOCAL  HIDDEN      1 <&mut W as core::fmt::Write>::write_str
  1344 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.13
  1345 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.14
  1346 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS alloc.4rhzjhnx-cgu.8
  1347 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.1
  1348 0000000000023c85    27 OBJECT  LOCAL  HIDDEN      7 anon.bd4fa26648642366280d8aebd34cbda5.0.llvm.14070000475520308321
  1349 0000000000025110    24 OBJECT  LOCAL  HIDDEN      9 anon.bd4fa26648642366280d8aebd34cbda5.1.llvm.14070000475520308321
  1350 0000000000023ca0     2 OBJECT  LOCAL  HIDDEN      7 anon.bd4fa26648642366280d8aebd34cbda5.2.llvm.14070000475520308321
  1351 0000000000023ca2   200 OBJECT  LOCAL  HIDDEN      7 anon.bd4fa26648642366280d8aebd34cbda5.5.llvm.14070000475520308321
  1352 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.10
  1353 0000000000025148    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.10
  1354 0000000000023d9e    22 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.11
  1355 0000000000023db4    13 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.12
  1356 0000000000025168    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.13
  1357 0000000000023dc1    21 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.18
  1358 0000000000023dd6    43 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.19
  1359 0000000000023e01     1 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.20
  1360 0000000000025188    48 OBJECT  LOCAL  DEFAULT     9 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.21
  1361 0000000000023d6a    18 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.6
  1362 0000000000023d7c    34 OBJECT  LOCAL  DEFAULT     7 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.7
  1363 0000000000025128    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.3bdc9f1e5e4e14b382ef19270afba9f6.8
  1364 0000000000018a10   224 FUNC    LOCAL  DEFAULT     1 core::slice::index::slice_end_index_len_fail
  1365 0000000000018bd0   232 FUNC    LOCAL  DEFAULT     1 core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  1366 0000000000018af0   224 FUNC    LOCAL  DEFAULT     1 core::slice::index::slice_index_order_fail
  1367 0000000000018930   224 FUNC    LOCAL  DEFAULT     1 core::slice::index::slice_start_index_len_fail
  1368 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.11
  1369 0000000000023e02     2 OBJECT  LOCAL  DEFAULT     7 .Lanon.7bf8d102a974398f324c96b0a8e13069.0
  1370 00000000000251b8    16 OBJECT  LOCAL  DEFAULT     9 .Lanon.7bf8d102a974398f324c96b0a8e13069.1
  1371 0000000000023e08    11 OBJECT  LOCAL  DEFAULT     7 .Lanon.7bf8d102a974398f324c96b0a8e13069.34
  1372 0000000000023e13     7 OBJECT  LOCAL  DEFAULT     7 .Lanon.7bf8d102a974398f324c96b0a8e13069.35
  1373 00000000000251c8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.7bf8d102a974398f324c96b0a8e13069.36
  1374 0000000000018d30     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_11
  1375 0000000000018e28     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_13
  1376 0000000000018e38     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_14
  1377 0000000000018ec8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_15
  1378 0000000000018f50     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_17
  1379 0000000000018fc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_18
  1380 0000000000018f30     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_2
  1381 0000000000018f68     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_20
  1382 0000000000019008     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_23
  1383 0000000000019098     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_24
  1384 00000000000190c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_25
  1385 0000000000019148     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_26
  1386 0000000000019438     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_29
  1387 00000000000196c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_3
  1388 00000000000194b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_30
  1389 0000000000019458     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_32
  1390 00000000000194f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_35
  1391 0000000000019218     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_36
  1392 0000000000019238     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_38
  1393 0000000000019330     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_40
  1394 0000000000019340     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_41
  1395 00000000000193d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_42
  1396 0000000000019588     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_44
  1397 0000000000019600     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_45
  1398 00000000000195a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_47
  1399 0000000000019640     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_5
  1400 0000000000019790     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_50
  1401 0000000000019820     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_51
  1402 0000000000019850     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_52
  1403 00000000000198d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_53
  1404 00000000000198d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_54
  1405 0000000000019698     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_7
  1406 0000000000019700     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_8
  1407 0000000000018d10     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_9
  1408 0000000000019910     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_2
  1409 0000000000019a08     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_4
  1410 0000000000019a18     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_5
  1411 0000000000019aa8     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_6
  1412 0000000000019b10     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_8
  1413 0000000000019b40     0 NOTYPE  LOCAL  DEFAULT     1 LBB49_9
  1414 0000000000019be0     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_2
  1415 0000000000019cd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_4
  1416 0000000000019ce8     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_5
  1417 0000000000019d78     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_6
  1418 0000000000019de0     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_8
  1419 0000000000019e10     0 NOTYPE  LOCAL  DEFAULT     1 LBB51_9
  1420 000000000001a020     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_11
  1421 0000000000019ee8     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_2
  1422 0000000000019fd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_6
  1423 0000000000019ff0     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_7
  1424 0000000000019ff8     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_8
  1425 000000000001a000     0 NOTYPE  LOCAL  DEFAULT     1 LBB65_9
  1426 0000000000018cb8     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1427 0000000000019bb8   720 FUNC    LOCAL  DEFAULT     1 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  1428 0000000000019e88   424 FUNC    LOCAL  DEFAULT     1 <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
  1429 0000000000019bb8   720 FUNC    LOCAL  DEFAULT     1 core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  1430 00000000000198e8   720 FUNC    LOCAL  DEFAULT     1 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  1431 0000000000018cc0  3112 FUNC    LOCAL  HIDDEN      1 <core::ops::range::Range<Idx> as core::fmt::Debug>::fmt
  1432 0000000000023e08     0 OBJECT  LOCAL  HIDDEN      7 anon.7bf8d102a974398f324c96b0a8e13069.2.llvm.10937093901034728496
  1433 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.12
  1434 0000000000023e1a     0 OBJECT  LOCAL  DEFAULT     7 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.0
  1435 0000000000023e1a    12 OBJECT  LOCAL  DEFAULT     7 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.4
  1436 0000000000023e26     1 OBJECT  LOCAL  DEFAULT     7 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.5
  1437 0000000000023e27     3 OBJECT  LOCAL  DEFAULT     7 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.6
  1438 00000000000251e8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.7
  1439 0000000000023e2a     1 OBJECT  LOCAL  DEFAULT     7 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.8
  1440 0000000000025208    48 OBJECT  LOCAL  DEFAULT     9 .Lanon.2c29e84038ea0d4ca2aea312abc309c1.9
  1441 000000000001a2c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_3
  1442 000000000001a0f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_4
  1443 000000000001a1c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_5
  1444 000000000001a398     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_6
  1445 000000000001a048   864 FUNC    LOCAL  DEFAULT     1 <core::panic::PanicInfo as core::fmt::Display>::fmt
  1446 000000000001a030    24 FUNC    LOCAL  HIDDEN      1 <T as core::any::Any>::type_id
  1447 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.15
  1448 0000000000023e58     0 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.18
  1449 0000000000023e60     5 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.32
  1450 0000000000023e65    11 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.33
  1451 0000000000023e70    22 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.34
  1452 0000000000023e86     1 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.35
  1453 0000000000025250    48 OBJECT  LOCAL  DEFAULT     9 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.36
  1454 0000000000023e87    14 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.37
  1455 0000000000025280    64 OBJECT  LOCAL  DEFAULT     9 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.40
  1456 0000000000023e95    38 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.41
  1457 0000000000023ebb     6 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.43
  1458 00000000000252c0    80 OBJECT  LOCAL  DEFAULT     9 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.44
  1459 0000000000023ec1    37 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.45
  1460 0000000000025310    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.46
  1461 0000000000025328    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.47
  1462 0000000000023e2b    43 OBJECT  LOCAL  DEFAULT     7 .Lanon.92d82762a8a069a6a45550b3b71dfb3c.5
  1463 000000000001a4c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_10
  1464 000000000001a4d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_12
  1465 000000000001a620     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_15
  1466 000000000001a6f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_16
  1467 000000000001a728     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_17
  1468 000000000001a400     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_2
  1469 000000000001a778     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_21
  1470 000000000001a780     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_22
  1471 000000000001a7b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_25
  1472 000000000001a528     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_26
  1473 000000000001a828     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_29
  1474 000000000001a8c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_33
  1475 000000000001a9f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_34
  1476 000000000001a8f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_35
  1477 000000000001a930     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_37
  1478 000000000001a448     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_4
  1479 000000000001a990     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_40
  1480 000000000001a9c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_41
  1481 000000000001ab58     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_42
  1482 000000000001aa08     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_46
  1483 000000000001a800     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_47
  1484 000000000001a468     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_6
  1485 000000000001a480     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_7
  1486 000000000001a498     0 NOTYPE  LOCAL  DEFAULT     1 LBB23_8
  1487 000000000001aca8     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_10
  1488 000000000001acf0     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_12
  1489 000000000001ad18     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_13
  1490 000000000001ad70     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_15
  1491 000000000001adf0     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_17
  1492 000000000001ae30     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_19
  1493 000000000001ac38     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_2
  1494 000000000001ad98     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_20
  1495 000000000001ade0     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_22
  1496 000000000001ac90     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_5
  1497 000000000001ae60     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_7
  1498 000000000001ae90     0 NOTYPE  LOCAL  DEFAULT     1 LBB28_8
  1499 000000000001abb8   776 FUNC    LOCAL  HIDDEN      1 core::unicode::printable::check
  1500 0000000000023ee6    82 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.48.llvm.2573620576539616888
  1501 0000000000023f38   290 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.49.llvm.2573620576539616888
  1502 000000000002405a   309 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.50.llvm.2573620576539616888
  1503 000000000002418f    76 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.51.llvm.2573620576539616888
  1504 00000000000241db   175 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.52.llvm.2573620576539616888
  1505 000000000002428a   419 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.53.llvm.2573620576539616888
  1506 000000000001a3a8  2064 FUNC    LOCAL  DEFAULT     1 core::str::slice_error_fail
  1507 00000000000230e9    32 OBJECT  LOCAL  HIDDEN      7 anon.92d82762a8a069a6a45550b3b71dfb3c.6.llvm.2573620576539616888
  1508 0000000000025238    24 OBJECT  LOCAL  HIDDEN      9 anon.92d82762a8a069a6a45550b3b71dfb3c.7.llvm.2573620576539616888
  1509 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.3
  1510 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.14
  1511 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.4
  1512 000000000002442d     0 OBJECT  LOCAL  DEFAULT     7 .Lanon.370ffaa308456387fd61000008b7f8b7.53
  1513 000000000002442d     2 OBJECT  LOCAL  DEFAULT     7 .Lanon.370ffaa308456387fd61000008b7f8b7.54
  1514 0000000000025340    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.370ffaa308456387fd61000008b7f8b7.55
  1515 000000000002442f    40 OBJECT  LOCAL  DEFAULT     7 .Lanon.370ffaa308456387fd61000008b7f8b7.56
  1516 0000000000025360    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.370ffaa308456387fd61000008b7f8b7.57
  1517 0000000000025378    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.370ffaa308456387fd61000008b7f8b7.58
  1518 0000000000025390    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.370ffaa308456387fd61000008b7f8b7.59
  1519 00000000000253a8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.370ffaa308456387fd61000008b7f8b7.71
  1520 0000000000024457    17 OBJECT  LOCAL  DEFAULT     7 .Lanon.370ffaa308456387fd61000008b7f8b7.78
  1521 000000000001b198     0 NOTYPE  LOCAL  DEFAULT     1 LBB39_10
  1522 000000000001b128     0 NOTYPE  LOCAL  DEFAULT     1 LBB39_6
  1523 000000000001b170     0 NOTYPE  LOCAL  DEFAULT     1 LBB39_7
  1524 000000000001b178     0 NOTYPE  LOCAL  DEFAULT     1 LBB39_8
  1525 000000000001b3a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_10
  1526 000000000001b400     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_12
  1527 000000000001b410     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_14
  1528 000000000001b478     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_17
  1529 000000000001b4a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_19
  1530 000000000001b1d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_2
  1531 000000000001b4f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_22
  1532 000000000001b528     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_23
  1533 000000000001b588     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_26
  1534 000000000001b5b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_27
  1535 000000000001b668     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_30
  1536 000000000001b638     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_31
  1537 000000000001b628     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_32
  1538 000000000001b270     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_4
  1539 000000000001b2d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_6
  1540 000000000001b340     0 NOTYPE  LOCAL  DEFAULT     1 LBB48_8
  1541 000000000001aec0     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1542 0000000000024468   124 OBJECT  LOCAL  DEFAULT     7 core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS
  1543 00000000000244e4   689 OBJECT  LOCAL  DEFAULT     7 core::unicode::unicode_data::grapheme_extend::OFFSETS
  1544 000000000001aec8   256 FUNC    LOCAL  DEFAULT     1 core::result::unwrap_failed
  1545 000000000001afc8   472 FUNC    LOCAL  DEFAULT     1 <core::array::TryFromSliceError as core::fmt::Debug>::fmt
  1546 000000000001b1a0  1272 FUNC    LOCAL  DEFAULT     1 core::unicode::unicode_data::grapheme_extend::lookup
  1547 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.5
  1548 00000000000247a0    14 OBJECT  LOCAL  DEFAULT     7 .Lanon.617e7ca68f5c448c208285912011537e.10
  1549 00000000000247b0     0 OBJECT  LOCAL  DEFAULT     7 .Lanon.617e7ca68f5c448c208285912011537e.12
  1550 00000000000253c8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.617e7ca68f5c448c208285912011537e.13
  1551 00000000000247b0    18 OBJECT  LOCAL  DEFAULT     7 .Lanon.617e7ca68f5c448c208285912011537e.15
  1552 00000000000253e8    32 OBJECT  LOCAL  DEFAULT     9 .Lanon.617e7ca68f5c448c208285912011537e.16
  1553 0000000000024795    11 OBJECT  LOCAL  DEFAULT     7 .Lanon.617e7ca68f5c448c208285912011537e.8
  1554 000000000001b698     8 FUNC    LOCAL  DEFAULT     1 core::ptr::drop_in_place
  1555 000000000001b7b0   224 FUNC    LOCAL  DEFAULT     1 core::panicking::panic_bounds_check
  1556 000000000001b6a0    64 FUNC    LOCAL  DEFAULT     1 <core::cell::BorrowError as core::fmt::Debug>::fmt
  1557 000000000001b6e0    64 FUNC    LOCAL  DEFAULT     1 <core::cell::BorrowMutError as core::fmt::Debug>::fmt
  1558 000000000001b720   144 FUNC    LOCAL  DEFAULT     1 core::panicking::panic
  1559 000000000001b890    96 FUNC    LOCAL  DEFAULT     1 core::panicking::panic_fmt
  1560 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.2
  1561 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.6
  1562 00000000000247c2     2 OBJECT  LOCAL  DEFAULT     7 .Lanon.44f347854fe7c78180e359ddd77dddc4.17
  1563 00000000000247c4     5 OBJECT  LOCAL  DEFAULT     7 .Lanon.44f347854fe7c78180e359ddd77dddc4.22
  1564 000000000001bda8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_12
  1565 000000000001bc80     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_18
  1566 000000000001bc88     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_19
  1567 000000000001bae0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_23
  1568 000000000001bae8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_24
  1569 000000000001be68     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_27
  1570 000000000001bec8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_29
  1571 000000000001ba58     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_3
  1572 000000000001be58     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_30
  1573 000000000001bed0     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_31
  1574 000000000001bbc8     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_6
  1575 000000000001bd18     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_7
  1576 000000000001bd48     0 NOTYPE  LOCAL  DEFAULT     1 LBB11_9
  1577 000000000001bfc0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_10
  1578 000000000001bfe0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_11
  1579 000000000001c038     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_12
  1580 000000000001c070     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_14
  1581 000000000001c0b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_15
  1582 000000000001c0f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_17
  1583 000000000001c1d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_19
  1584 000000000001c1f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_21
  1585 000000000001c228     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_23
  1586 000000000001c240     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_24
  1587 000000000001c270     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_26
  1588 000000000001c298     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_27
  1589 000000000001bf38     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_3
  1590 000000000001c188     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_31
  1591 000000000001c1c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_33
  1592 000000000001c3e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_34
  1593 000000000001c418     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_36
  1594 000000000001c428     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_37
  1595 000000000001c470     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_39
  1596 000000000001bf48     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_4
  1597 000000000001c4e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_41
  1598 000000000001c528     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_43
  1599 000000000001c2e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_44
  1600 000000000001c380     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_47
  1601 000000000001c3d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_49
  1602 000000000001bf68     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_5
  1603 000000000001c008     0 NOTYPE  LOCAL  DEFAULT     1 LBB13_8
  1604 000000000001c5c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_2
  1605 000000000001c608     0 NOTYPE  LOCAL  DEFAULT     1 LBB14_4
  1606 000000000001c7a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_12
  1607 000000000001c7e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_15
  1608 000000000001c820     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_16
  1609 000000000001c848     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_17
  1610 000000000001c648     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_2
  1611 000000000001c8c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_21
  1612 000000000001c910     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_24
  1613 000000000001c948     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_27
  1614 000000000001c978     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_28
  1615 000000000001c658     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_3
  1616 000000000001c9e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_32
  1617 000000000001c9e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_33
  1618 000000000001c9f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_35
  1619 000000000001ca10     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_37
  1620 000000000001ca18     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_38
  1621 000000000001ca48     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_40
  1622 000000000001cad0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_42
  1623 000000000001ca70     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_44
  1624 000000000001cba0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_47
  1625 000000000001cb00     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_48
  1626 000000000001cb18     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_49
  1627 000000000001c6c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_5
  1628 000000000001cb48     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_51
  1629 000000000001cb68     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_52
  1630 000000000001cbd0     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_54
  1631 000000000001cc00     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_56
  1632 000000000001cc18     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_57
  1633 000000000001cc48     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_59
  1634 000000000001cc50     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_60
  1635 000000000001cca8     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_62
  1636 000000000001cd18     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_64
  1637 000000000001cd68     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_66
  1638 000000000001c750     0 NOTYPE  LOCAL  DEFAULT     1 LBB15_9
  1639 000000000001ce80     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_10
  1640 000000000001ce70     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_11
  1641 000000000001ce98     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_12
  1642 000000000001ceb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_14
  1643 000000000001d3d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_16
  1644 000000000001d470     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_17
  1645 000000000001cee0     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_25
  1646 000000000001cf70     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_26
  1647 000000000001d120     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_27
  1648 000000000001d198     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_30
  1649 000000000001d268     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_35
  1650 000000000001d390     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_38
  1651 000000000001d2d8     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_39
  1652 000000000001d240     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_41
  1653 000000000001d368     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_43
  1654 000000000001d2a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_44
  1655 000000000001d3a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_45
  1656 000000000001d320     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_46
  1657 000000000001d158     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_47
  1658 000000000001d190     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_48
  1659 000000000001ce50     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_5
  1660 000000000001ce38     0 NOTYPE  LOCAL  DEFAULT     1 LBB42_8
  1661 000000000001c558   184 FUNC    LOCAL  DEFAULT     1 core::fmt::Formatter::pad_integral::write_prefix
  1662 000000000001d5c0    64 FUNC    LOCAL  DEFAULT     1 <core::fmt::Error as core::fmt::Debug>::fmt
  1663 000000000001b9b0  1320 FUNC    LOCAL  DEFAULT     1 core::fmt::write
  1664 000000000001b910   160 FUNC    LOCAL  DEFAULT     1 <core::fmt::Arguments as core::fmt::Display>::fmt
  1665 000000000001cd70    48 FUNC    LOCAL  DEFAULT     1 core::fmt::Formatter::write_str
  1666 000000000001cda0  2080 FUNC    LOCAL  DEFAULT     1 <char as core::fmt::Debug>::fmt
  1667 000000000001c610  1888 FUNC    LOCAL  DEFAULT     1 core::fmt::Formatter::pad
  1668 000000000001bed8  1664 FUNC    LOCAL  DEFAULT     1 core::fmt::Formatter::pad_integral
  1669 000000000001d630    48 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Debug>::fmt
  1670 000000000001d660    48 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Display>::fmt
  1671 000000000001b8f0    24 FUNC    LOCAL  HIDDEN      1 core::ops::function::FnOnce::call_once
  1672 000000000001d600    48 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Debug>::fmt
  1673 000000000001d690    56 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Display>::fmt
  1674 000000000001d6c8   168 FUNC    LOCAL  HIDDEN      1 <&T as core::fmt::Display>::fmt
  1675 000000000001b908     8 FUNC    LOCAL  HIDDEN      1 core::ptr::drop_in_place
  1676 000000000001cd70    48 FUNC    LOCAL  DEFAULT     1 <core::fmt::Formatter as core::fmt::Write>::write_str
  1677 0000000000025408    48 OBJECT  LOCAL  HIDDEN      9 anon.44f347854fe7c78180e359ddd77dddc4.6.llvm.11078318822292751687
  1678 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.7
  1679 0000000000025468    48 OBJECT  LOCAL  DEFAULT     9 .Lanon.9a7d624541618bafec2491f553c02d98.37
  1680 0000000000025438    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.9a7d624541618bafec2491f553c02d98.8
  1681 0000000000025450    24 OBJECT  LOCAL  DEFAULT     9 .Lanon.9a7d624541618bafec2491f553c02d98.9
  1682 000000000001e588     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_3
  1683 000000000001e5a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_4
  1684 000000000001e520     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_5
  1685 000000000001e5e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_6
  1686 000000000001e670     0 NOTYPE  LOCAL  DEFAULT     1 LBB24_7
  1687 000000000001e838     0 NOTYPE  LOCAL  DEFAULT     1 LBB27_3
  1688 000000000001e850     0 NOTYPE  LOCAL  DEFAULT     1 LBB27_4
  1689 000000000001e7d0     0 NOTYPE  LOCAL  DEFAULT     1 LBB27_5
  1690 000000000001e898     0 NOTYPE  LOCAL  DEFAULT     1 LBB27_6
  1691 000000000001e920     0 NOTYPE  LOCAL  DEFAULT     1 LBB27_7
  1692 000000000001da40     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_10
  1693 000000000001da90     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_13
  1694 000000000001dab0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_15
  1695 000000000001dcb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_17
  1696 000000000001dae8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_18
  1697 000000000001db00     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_19
  1698 000000000001d8b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_2
  1699 000000000001db20     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_20
  1700 000000000001dbe8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_22
  1701 000000000001dc28     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_24
  1702 000000000001dc70     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_26
  1703 000000000001dcd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_28
  1704 000000000001d938     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_29
  1705 000000000001d988     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_31
  1706 000000000001d7b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_33
  1707 000000000001d818     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_37
  1708 000000000001d858     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_38
  1709 000000000001dcf0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_39
  1710 000000000001d920     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
  1711 000000000001d890     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_42
  1712 000000000001d8b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_43
  1713 000000000001d9b0     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
  1714 000000000001d9f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_8
  1715 000000000001dfe0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_10
  1716 000000000001e1a0     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_14
  1717 000000000001e1a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_18
  1718 000000000001de40     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_4
  1719 000000000001de58     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_6
  1720 000000000001df78     0 NOTYPE  LOCAL  DEFAULT     1 LBB4_7
  1721 000000000001e318     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_10
  1722 000000000001e470     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_13
  1723 000000000001e478     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_14
  1724 000000000001e250     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_4
  1725 000000000001e270     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_6
  1726 000000000001e2c0     0 NOTYPE  LOCAL  DEFAULT     1 LBB8_7
  1727 000000000001e750   496 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_char
  1728 000000000001e940   176 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_fmt
  1729 000000000001e738    24 FUNC    LOCAL  DEFAULT     1 <&mut W as core::fmt::Write>::write_str
  1730 000000000001dd98  1072 FUNC    LOCAL  DEFAULT     1 core::fmt::builders::DebugStruct::field
  1731 000000000001e1c8   736 FUNC    LOCAL  DEFAULT     1 core::fmt::builders::DebugTuple::field
  1732 00000000000247d5     1 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.18.llvm.12368802915356661767
  1733 00000000000247d6     2 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.19.llvm.12368802915356661767
  1734 00000000000247db     1 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.22.llvm.12368802915356661767
  1735 00000000000247dc     1 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.23.llvm.12368802915356661767
  1736 000000000001e4a8   488 FUNC    LOCAL  HIDDEN      1 core::fmt::Write::write_char
  1737 000000000001e690   168 FUNC    LOCAL  HIDDEN      1 core::fmt::Write::write_fmt
  1738 000000000001d778  1568 FUNC    LOCAL  DEFAULT     1 <core::fmt::builders::PadAdapter as core::fmt::Write>::write_str
  1739 000000000001d770     8 FUNC    LOCAL  HIDDEN      1 core::ptr::drop_in_place
  1740 000000000001d770     8 FUNC    LOCAL  HIDDEN      1 core::ptr::drop_in_place
  1741 000000000001d770     8 FUNC    LOCAL  HIDDEN      1 core::ptr::drop_in_place
  1742 00000000000247c9     3 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.10.llvm.12368802915356661767
  1743 00000000000247cc     2 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.11.llvm.12368802915356661767
  1744 00000000000247ce     2 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.12.llvm.12368802915356661767
  1745 00000000000247d0     2 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.13.llvm.12368802915356661767
  1746 00000000000247d2     3 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.14.llvm.12368802915356661767
  1747 00000000000247d8     2 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.20.llvm.12368802915356661767
  1748 00000000000247da     1 OBJECT  LOCAL  HIDDEN      7 anon.9a7d624541618bafec2491f553c02d98.21.llvm.12368802915356661767
  1749 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.8
  1750 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS core.aalogr99-cgu.9
  1751 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.12
  1752 000000000001e9f0    16 FUNC    LOCAL  HIDDEN      1 __muldf3
  1753 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.18
  1754 000000000001ea88     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_3
  1755 000000000001eac0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_4
  1756 000000000001eac8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_5
  1757 000000000001eaf0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_7
  1758 000000000001eb28     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_8
  1759 000000000001ec08     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_3
  1760 000000000001ec30     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_4
  1761 000000000001ec38     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_5
  1762 000000000001ec58     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_7
  1763 000000000001ec80     0 NOTYPE  LOCAL  DEFAULT     1 LBB2_8
  1764 000000000001ede0     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_11
  1765 000000000001ed18     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_3
  1766 000000000001ed60     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_5
  1767 000000000001ed70     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_6
  1768 000000000001ed98     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_8
  1769 000000000001edb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB3_9
  1770 000000000001ea00   304 FUNC    LOCAL  HIDDEN      1 memcpy
  1771 000000000001eb30   344 FUNC    LOCAL  HIDDEN      1 memset
  1772 000000000001ec88   352 FUNC    LOCAL  HIDDEN      1 memcmp
  1773 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.26
  1774 000000000001ee90     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_5
  1775 000000000001eea8     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_6
  1776 000000000001eeb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_7
  1777 000000000001ede8   208 FUNC    LOCAL  HIDDEN      1 __fixunsdfdi
  1778 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.37
  1779 000000000001ef88     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_10
  1780 000000000001efa0     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_5
  1781 000000000001ef80     0 NOTYPE  LOCAL  DEFAULT     1 LBB0_9
  1782 000000000001eeb8   280 FUNC    LOCAL  HIDDEN      1 __gtdf2
  1783 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.5
  1784 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.47
  1785 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.53
  1786 000000000001f1c8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
  1787 000000000001f210     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_12
  1788 000000000001f250     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_15
  1789 000000000001f3b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_17
  1790 000000000001f3e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_18
  1791 000000000001f0a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_2
  1792 000000000001f560     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_21
  1793 000000000001f588     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_22
  1794 000000000001f668     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_24
  1795 000000000001f688     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_25
  1796 000000000001f6a8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_26
  1797 000000000001f6e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_28
  1798 000000000001f720     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_30
  1799 000000000001f780     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_31
  1800 000000000001f7b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_33
  1801 000000000001f7e8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_35
  1802 000000000001f7f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_36
  1803 000000000001f7f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_38
  1804 000000000001f100     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
  1805 000000000001f128     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_5
  1806 000000000001f150     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_6
  1807 000000000001f170     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_7
  1808 000000000001f1b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_9
  1809 000000000001efd0  2104 FUNC    LOCAL  HIDDEN      1 compiler_builtins::float::mul::__muldf3
  1810 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.58
  1811 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS ashlti3.c
  1812 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS divdi3.c
  1813 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS floatundidf.c
  1814 000000000001f808   136 FUNC    LOCAL  HIDDEN      1 __floatundidf
  1815 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.57
  1816 000000000001f890    16 FUNC    LOCAL  HIDDEN      1 __adddf3
  1817 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS compiler_builtins.dy4s3o87-cgu.25
  1818 000000000001f9f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_10
  1819 0000000000020238     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_13
  1820 000000000001fa20     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_15
  1821 000000000001fa38     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_17
  1822 000000000001fa48     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_19
  1823 000000000001f920     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_2
  1824 000000000001fc08     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_22
  1825 000000000001fc30     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_23
  1826 000000000001fdb0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_26
  1827 000000000001fdd8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_27
  1828 000000000001fe90     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_31
  1829 000000000001feb8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_32
  1830 000000000001ff30     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_34
  1831 00000000000200e0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_38
  1832 000000000001f970     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_4
  1833 00000000000201f0     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_40
  1834 0000000000020118     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_41
  1835 0000000000020158     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_43
  1836 0000000000020180     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_44
  1837 0000000000020218     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_46
  1838 0000000000020210     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_48
  1839 000000000001f998     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_5
  1840 000000000001f948     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_6
  1841 000000000001f9f8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_7
  1842 000000000001f9b8     0 NOTYPE  LOCAL  DEFAULT     1 LBB1_8
  1843 000000000001f8a0  2496 FUNC    LOCAL  HIDDEN      1 compiler_builtins::float::add::__adddf3
  1844 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS floatundisf.c
  1845 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS lshrti3.c
  1846 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS muloti4.c
  1847 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS divti3.c
  1848 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS multi3.c
  1849 0000000000020260   296 FUNC    LOCAL  HIDDEN      1 __multi3
  1850 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS udivmoddi4.c
  1851 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS udivmodti4.c
  1852 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS udivti3.c
  1853 0000000000025498     0 NOTYPE  LOCAL  HIDDEN     10 _DYNAMIC
  1854 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND abort
  1855 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND sol_log_
  1856 00000000000155f0   328 FUNC    GLOBAL DEFAULT     1 custom_panic
  1857 0000000000015258   592 FUNC    GLOBAL DEFAULT     1 entrypoint
There are no section groups in this file.
Histogram for bucket list length (total of 5 buckets)
 Length  Number     % of total  Coverage
      0  1          ( 20.0%)       0.0%
      1  4          ( 80.0%)     100.0%
Histogram for `.gnu.hash' bucket list length (total of 1 buckets)
 Length  Number     % of total  Coverage
      0  0          (  0.0%)       0.0%
      1  0          (  0.0%)       0.0%
      2  1          (100.0%)     100.0%

/home/walk/projects/current/solana-program-library/target/bpfel-unknown-unknown/release/spl_token.so	file format elf64-bpf


Disassembly of section .text

00000000000000e8 <core::ptr::drop_in_place>
      29	95 00 00 00 00 00 00 00	exit

00000000000000f0 <spl_token::processor::Processor::process_initialize_mint>
      30	bf 59 00 00 00 00 00 00	r9 = r5
      31	bf 47 00 00 00 00 00 00	r7 = r4
      32	bf 16 00 00 00 00 00 00	r6 = r1
      33	7b 2a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r2
      34	27 03 00 00 30 00 00 00	r3 *= 0x30
      35	0f 32 00 00 00 00 00 00	r2 += r3
      36	7b 2a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r2
      37	bf a1 00 00 00 00 00 00	r1 = r10
      38	07 01 00 00 98 ff ff ff	r1 += -0x68
      39	bf a2 00 00 00 00 00 00	r2 = r10
      40	07 02 00 00 d8 fe ff ff	r2 += -0x128
      41	85 10 00 00 39 29 00 00	call 0x2939 ; <solana_program::account_info::next_account_info>
      42	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
      43	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
      44	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
      45	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
      46	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
      47	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
      48	79 a8 a0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x60)
      49	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
      50	15 01 1c 00 01 00 00 00	if r1 == 0x1 goto +0x1c <LBB1_2>
      51	79 91 08 f0 00 00 00 00	r1 = *(u64 *)(r9 - 0xff8)
      52	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
      53	79 99 00 f0 00 00 00 00	r9 = *(u64 *)(r9 - 0x1000)
      54	bf 81 00 00 00 00 00 00	r1 = r8
      55	85 10 00 00 eb 2b 00 00	call 0x2beb ; <solana_program::account_info::AccountInfo::data_len>
      56	7b 0a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r0
      57	bf a1 00 00 00 00 00 00	r1 = r10
      58	07 01 00 00 98 ff ff ff	r1 += -0x68
      59	bf a2 00 00 00 00 00 00	r2 = r10
      60	07 02 00 00 d8 fe ff ff	r2 += -0x128
      61	85 10 00 00 25 29 00 00	call 0x2925 ; <solana_program::account_info::next_account_info>
      62	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
      63	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
      64	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
      65	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
      66	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
      67	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
      68	79 a2 a0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x60)
      69	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
      70	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB1_4>
      71	05 00 13 00 00 00 00 00	goto +0x13 <LBB1_3>

0000000000000240 <LBB1_4>
      72	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
      73	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
      74	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
      75	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
      76	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
      77	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
      78	05 00 06 00 00 00 00 00	goto +0x6 <LBB1_5>

0000000000000278 <LBB1_2>
      79	7b 8a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r8
      80	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
      81	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
      82	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
      83	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
      84	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)

00000000000002a8 <LBB1_5>
      85	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1

00000000000002b0 <LBB1_6>
      86	bf a2 00 00 00 00 00 00	r2 = r10
      87	07 02 00 00 98 ff ff ff	r2 += -0x68
      88	bf 61 00 00 00 00 00 00	r1 = r6
      89	85 10 00 00 56 1f 00 00	call 0x1f56 ; <<T as core::convert::From<T>>::from>

00000000000002d0 <LBB1_22>
      90	95 00 00 00 00 00 00 00	exit

00000000000002d8 <LBB1_3>
      91	bf a1 00 00 00 00 00 00	r1 = r10
      92	07 01 00 00 00 ff ff ff	r1 += -0x100
      93	85 10 00 00 94 2a 00 00	call 0x2a94 ; <solana_program::sysvar::Sysvar::from_account_info>
      94	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
      95	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
      96	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
      97	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
      98	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
      99	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
     100	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
     101	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
     102	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     103	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB1_10>
     104	05 00 09 00 00 00 00 00	goto +0x9 <LBB1_7>

0000000000000348 <LBB1_10>
     105	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
     106	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
     107	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
     108	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
     109	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
     110	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
     111	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
     112	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
     113	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB1_6>

0000000000000390 <LBB1_7>
     114	7b 9a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r9
     115	7b 7a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r7
     116	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
     117	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     118	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
     119	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     120	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
     121	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
     122	79 87 10 00 00 00 00 00	r7 = *(u64 *)(r8 + 0x10)
     123	79 72 10 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x10)
     124	07 02 00 00 01 00 00 00	r2 += 0x1
     125	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB1_9>
     126	bf a3 00 00 00 00 00 00	r3 = r10
     127	07 03 00 00 f8 ff ff ff	r3 += -0x8
     128	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
     130	b7 02 00 00 18 00 00 00	r2 = 0x18
     131	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
     133	18 05 00 00 e0 48 02 00 00 00 00 00 00 00 00 00	r5 = 0x248e0 ll
     135	85 10 00 00 51 35 00 00	call 0x3551 ; <core::result::unwrap_failed>
     136	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000000448 <LBB1_9>
     137	bf 79 00 00 00 00 00 00	r9 = r7
     138	07 09 00 00 10 00 00 00	r9 += 0x10
     139	bf 91 00 00 00 00 00 00	r1 = r9
     140	85 10 00 00 15 1f 00 00	call 0x1f15 ; <core::cell::Cell<T>::replace>
     141	79 72 18 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x18)
     142	79 73 20 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x20)
     143	bf a1 00 00 00 00 00 00	r1 = r10
     144	07 01 00 00 98 ff ff ff	r1 += -0x68
     145	85 10 00 00 50 1f 00 00	call 0x1f50 ; <solana_program::program_pack::Pack::unpack_unchecked>
     146	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
     147	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
     148	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
     149	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
     150	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
     151	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
     152	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
     153	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
     154	61 a1 c0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x40)
     155	63 1a 90 ff 00 00 00 00	*(u32 *)(r10 - 0x70) = r1
     156	79 a1 c4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c)
     157	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
     158	61 a1 cc ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x34)
     159	63 1a 68 ff 00 00 00 00	*(u32 *)(r10 - 0x98) = r1
     160	79 a1 d2 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e)
     161	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
     162	79 a1 da ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x26)
     163	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
     164	79 a1 e2 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e)
     165	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
     166	79 a1 ea ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x16)
     167	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
     168	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
     169	7b 1a 1e ff 00 00 00 00	*(u64 *)(r10 - 0xe2) = r1
     170	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
     171	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB1_12>
     172	05 00 11 00 00 00 00 00	goto +0x11 <LBB1_11>

0000000000000568 <LBB1_12>
     173	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
     174	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
     175	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
     176	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
     177	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
     178	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
     179	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
     180	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
     181	bf a2 00 00 00 00 00 00	r2 = r10
     182	07 02 00 00 98 ff ff ff	r2 += -0x68
     183	bf 61 00 00 00 00 00 00	r1 = r6
     184	85 10 00 00 f7 1e 00 00	call 0x1ef7 ; <<T as core::convert::From<T>>::from>
     185	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
     186	07 02 00 00 ff ff ff ff	r2 += -0x1
     187	bf 91 00 00 00 00 00 00	r1 = r9

00000000000005e0 <LBB1_21>
     188	85 10 00 00 e5 1e 00 00	call 0x1ee5 ; <core::cell::Cell<T>::replace>
     189	05 00 9c ff 00 00 00 00	goto -0x64 <LBB1_22>

00000000000005f0 <LBB1_11>
     190	71 a7 d1 ff 00 00 00 00	r7 = *(u8 *)(r10 - 0x2f)
     191	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     192	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
     193	61 a1 68 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x98)
     194	63 1a 58 ff 00 00 00 00	*(u32 *)(r10 - 0xa8) = r1
     195	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
     196	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
     197	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     198	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
     199	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
     200	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
     201	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
     202	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
     203	79 a1 1e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe2)
     204	7b 1a 46 ff 00 00 00 00	*(u64 *)(r10 - 0xba) = r1
     205	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
     206	07 02 00 00 ff ff ff ff	r2 += -0x1
     207	bf 91 00 00 00 00 00 00	r1 = r9
     208	85 10 00 00 d1 1e 00 00	call 0x1ed1 ; <core::cell::Cell<T>::replace>
     209	57 07 00 00 01 00 00 00	r7 &= 0x1
     210	15 07 01 00 00 00 00 00	if r7 == 0x0 goto +0x1 <LBB1_13>
     211	05 00 3e 00 00 00 00 00	goto +0x3e <LBB1_14>

00000000000006a0 <LBB1_13>
     212	bf 81 00 00 00 00 00 00	r1 = r8
     213	85 10 00 00 32 2b 00 00	call 0x2b32 ; <solana_program::account_info::AccountInfo::lamports>
     214	bf a1 00 00 00 00 00 00	r1 = r10
     215	07 01 00 00 e8 fe ff ff	r1 += -0x118
     216	bf 02 00 00 00 00 00 00	r2 = r0
     217	79 a3 d0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x130)
     218	85 10 00 00 75 2e 00 00	call 0x2e75 ; <solana_program::rent::Rent::is_exempt>
     219	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB1_15>
     220	05 00 39 00 00 00 00 00	goto +0x39 <LBB1_18>

00000000000006e8 <LBB1_15>
     221	79 a2 c8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x138)
     222	61 21 20 00 00 00 00 00	r1 = *(u32 *)(r2 + 0x20)
     223	63 1a 4a ff 00 00 00 00	*(u32 *)(r10 - 0xb6) = r1
     224	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
     225	7b 1a 42 ff 00 00 00 00	*(u64 *)(r10 - 0xbe) = r1
     226	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
     227	7b 1a 3a ff 00 00 00 00	*(u64 *)(r10 - 0xc6) = r1
     228	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
     229	7b 1a 32 ff 00 00 00 00	*(u64 *)(r10 - 0xce) = r1
     230	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
     231	7b 1a 2a ff 00 00 00 00	*(u64 *)(r10 - 0xd6) = r1
     232	b7 01 00 00 01 00 00 00	r1 = 0x1
     233	63 1a 98 ff 00 00 00 00	*(u32 *)(r10 - 0x68) = r1
     234	79 a3 b8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x148)
     235	79 32 00 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x0)
     236	7b 2a 9c ff 00 00 00 00	*(u64 *)(r10 - 0x64) = r2
     237	79 32 08 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x8)
     238	7b 2a a4 ff 00 00 00 00	*(u64 *)(r10 - 0x5c) = r2
     239	79 32 10 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x10)
     240	7b 2a ac ff 00 00 00 00	*(u64 *)(r10 - 0x54) = r2
     241	79 32 18 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x18)
     242	7b 2a b4 ff 00 00 00 00	*(u64 *)(r10 - 0x4c) = r2
     243	73 1a c9 ff 00 00 00 00	*(u8 *)(r10 - 0x37) = r1
     244	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
     245	73 1a c8 ff 00 00 00 00	*(u8 *)(r10 - 0x38) = r1
     246	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
     247	7b 1a bc ff 00 00 00 00	*(u64 *)(r10 - 0x44) = r1
     248	61 a1 58 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xa8)
     249	63 1a c4 ff 00 00 00 00	*(u32 *)(r10 - 0x3c) = r1
     250	79 a1 46 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xba)
     251	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
     252	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
     253	7b 1a e2 ff 00 00 00 00	*(u64 *)(r10 - 0x1e) = r1
     254	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
     255	7b 1a da ff 00 00 00 00	*(u64 *)(r10 - 0x26) = r1
     256	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
     257	7b 1a d2 ff 00 00 00 00	*(u64 *)(r10 - 0x2e) = r1
     258	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
     259	7b 1a ca ff 00 00 00 00	*(u64 *)(r10 - 0x36) = r1
     260	79 88 10 00 00 00 00 00	r8 = *(u64 *)(r8 + 0x10)
     261	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
     262	15 01 13 00 00 00 00 00	if r1 == 0x0 goto +0x13 <LBB1_17>
     263	bf a3 00 00 00 00 00 00	r3 = r10
     264	07 03 00 00 f8 ff ff ff	r3 += -0x8
     265	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
     267	b7 02 00 00 10 00 00 00	r2 = 0x10
     268	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
     270	18 05 00 00 f8 48 02 00 00 00 00 00 00 00 00 00	r5 = 0x248f8 ll
     272	85 10 00 00 c8 34 00 00	call 0x34c8 ; <core::result::unwrap_failed>
     273	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000000890 <LBB1_14>
     274	bf 61 00 00 00 00 00 00	r1 = r6
     275	b7 02 00 00 06 00 00 00	r2 = 0x6
     276	85 10 00 00 56 26 00 00	call 0x2656 ; <<T as core::convert::Into<U>>::into>
     277	05 00 44 ff 00 00 00 00	goto -0xbc <LBB1_22>

00000000000008b0 <LBB1_18>
     278	bf 61 00 00 00 00 00 00	r1 = r6
     279	b7 02 00 00 00 00 00 00	r2 = 0x0
     280	85 10 00 00 52 26 00 00	call 0x2652 ; <<T as core::convert::Into<U>>::into>
     281	05 00 40 ff 00 00 00 00	goto -0xc0 <LBB1_22>

00000000000008d0 <LBB1_17>
     282	bf 87 00 00 00 00 00 00	r7 = r8
     283	07 07 00 00 10 00 00 00	r7 += 0x10
     284	bf 71 00 00 00 00 00 00	r1 = r7
     285	b7 02 00 00 ff ff ff ff	r2 = -0x1
     286	85 10 00 00 83 1e 00 00	call 0x1e83 ; <core::cell::Cell<T>::replace>
     287	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
     288	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
     289	bf a1 00 00 00 00 00 00	r1 = r10
     290	07 01 00 00 00 ff ff ff	r1 += -0x100
     291	bf a2 00 00 00 00 00 00	r2 = r10
     292	07 02 00 00 98 ff ff ff	r2 += -0x68
     293	85 10 00 00 d9 1e 00 00	call 0x1ed9 ; <solana_program::program_pack::Pack::pack>
     294	79 a1 04 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xfc)
     295	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
     296	79 a1 0c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf4)
     297	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
     298	79 a1 14 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xec)
     299	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
     300	61 a1 1c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe4)
     301	63 1a 88 ff 00 00 00 00	*(u32 *)(r10 - 0x78) = r1
     302	61 a1 00 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x100)
     303	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB1_19>
     304	05 00 07 00 00 00 00 00	goto +0x7 <LBB1_20>

0000000000000988 <LBB1_19>
     305	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
     306	07 02 00 00 01 00 00 00	r2 += 0x1
     307	bf 71 00 00 00 00 00 00	r1 = r7
     308	85 10 00 00 6d 1e 00 00	call 0x1e6d ; <core::cell::Cell<T>::replace>
     309	b7 01 00 00 10 00 00 00	r1 = 0x10
     310	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
     311	05 00 22 ff 00 00 00 00	goto -0xde <LBB1_22>

00000000000009c0 <LBB1_20>
     312	63 1a 98 ff 00 00 00 00	*(u32 *)(r10 - 0x68) = r1
     313	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
     314	7b 1a 9c ff 00 00 00 00	*(u64 *)(r10 - 0x64) = r1
     315	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
     316	7b 1a a4 ff 00 00 00 00	*(u64 *)(r10 - 0x5c) = r1
     317	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
     318	7b 1a ac ff 00 00 00 00	*(u64 *)(r10 - 0x54) = r1
     319	61 a1 88 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x78)
     320	63 1a b4 ff 00 00 00 00	*(u32 *)(r10 - 0x4c) = r1
     321	bf a2 00 00 00 00 00 00	r2 = r10
     322	07 02 00 00 98 ff ff ff	r2 += -0x68
     323	bf 61 00 00 00 00 00 00	r1 = r6
     324	85 10 00 00 6b 1e 00 00	call 0x1e6b ; <<T as core::convert::From<T>>::from>
     325	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
     326	07 02 00 00 01 00 00 00	r2 += 0x1
     327	bf 71 00 00 00 00 00 00	r1 = r7
     328	05 00 73 ff 00 00 00 00	goto -0x8d <LBB1_21>

0000000000000a48 <spl_token::processor::Processor::_process_initialize_account>
     329	bf 48 00 00 00 00 00 00	r8 = r4
     330	bf 16 00 00 00 00 00 00	r6 = r1
     331	7b 2a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r2
     332	27 03 00 00 30 00 00 00	r3 *= 0x30
     333	0f 32 00 00 00 00 00 00	r2 += r3
     334	7b 2a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r2
     335	bf a1 00 00 00 00 00 00	r1 = r10
     336	07 01 00 00 e8 fe ff ff	r1 += -0x118
     337	bf a2 00 00 00 00 00 00	r2 = r10
     338	07 02 00 00 60 fd ff ff	r2 += -0x2a0
     339	85 10 00 00 0f 28 00 00	call 0x280f ; <solana_program::account_info::next_account_info>
     340	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     341	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
     342	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     343	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
     344	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     345	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     346	79 a7 f0 fe 00 00 00 00	r7 = *(u64 *)(r10 - 0x110)
     347	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
     348	15 01 11 00 01 00 00 00	if r1 == 0x1 goto +0x11 <LBB2_2>
     349	bf a1 00 00 00 00 00 00	r1 = r10
     350	07 01 00 00 e8 fe ff ff	r1 += -0x118
     351	bf a2 00 00 00 00 00 00	r2 = r10
     352	07 02 00 00 60 fd ff ff	r2 += -0x2a0
     353	85 10 00 00 01 28 00 00	call 0x2801 ; <solana_program::account_info::next_account_info>
     354	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     355	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
     356	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     357	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
     358	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     359	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     360	79 a9 f0 fe 00 00 00 00	r9 = *(u64 *)(r10 - 0x110)
     361	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
     362	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB2_5>
     363	05 00 0e 00 00 00 00 00	goto +0xe <LBB2_4>

0000000000000b60 <LBB2_5>
     364	7b 9a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r9
     365	05 00 01 00 00 00 00 00	goto +0x1 <LBB2_3>

0000000000000b70 <LBB2_2>
     366	7b 7a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r7

0000000000000b78 <LBB2_3>
     367	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
     368	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     369	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
     370	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     371	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)

0000000000000ba0 <LBB2_11>
     372	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1

0000000000000ba8 <LBB2_12>
     373	bf a2 00 00 00 00 00 00	r2 = r10
     374	07 02 00 00 e8 fe ff ff	r2 += -0x118
     375	bf 61 00 00 00 00 00 00	r1 = r6
     376	85 10 00 00 37 1e 00 00	call 0x1e37 ; <<T as core::convert::From<T>>::from>

0000000000000bc8 <LBB2_41>
     377	95 00 00 00 00 00 00 00	exit

0000000000000bd0 <LBB2_4>
     378	15 08 01 00 00 00 00 00	if r8 == 0x0 goto +0x1 <LBB2_6>
     379	05 00 0f 00 00 00 00 00	goto +0xf <LBB2_8>

0000000000000be0 <LBB2_6>
     380	bf a1 00 00 00 00 00 00	r1 = r10
     381	07 01 00 00 e8 fe ff ff	r1 += -0x118
     382	bf a2 00 00 00 00 00 00	r2 = r10
     383	07 02 00 00 60 fd ff ff	r2 += -0x2a0
     384	85 10 00 00 e2 27 00 00	call 0x27e2 ; <solana_program::account_info::next_account_info>
     385	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     386	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
     387	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     388	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
     389	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     390	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     391	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
     392	79 a2 e8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x118)
     393	15 02 8f 00 01 00 00 00	if r2 == 0x1 goto +0x8f <LBB2_42>
     394	79 18 00 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x0)

0000000000000c58 <LBB2_8>
     395	bf 71 00 00 00 00 00 00	r1 = r7
     396	85 10 00 00 96 2a 00 00	call 0x2a96 ; <solana_program::account_info::AccountInfo::data_len>
     397	7b 0a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r0
     398	bf a1 00 00 00 00 00 00	r1 = r10
     399	07 01 00 00 e8 fe ff ff	r1 += -0x118
     400	bf a2 00 00 00 00 00 00	r2 = r10
     401	07 02 00 00 60 fd ff ff	r2 += -0x2a0
     402	85 10 00 00 d0 27 00 00	call 0x27d0 ; <solana_program::account_info::next_account_info>
     403	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     404	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
     405	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     406	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
     407	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     408	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
     409	79 a2 f0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x110)
     410	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
     411	15 01 17 00 01 00 00 00	if r1 == 0x1 goto +0x17 <LBB2_10>
     412	bf a1 00 00 00 00 00 00	r1 = r10
     413	07 01 00 00 38 fe ff ff	r1 += -0x1c8
     414	85 10 00 00 53 29 00 00	call 0x2953 ; <solana_program::sysvar::Sysvar::from_account_info>
     415	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
     416	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
     417	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
     418	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
     419	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
     420	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
     421	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
     422	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
     423	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
     424	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB2_16>
     425	05 00 10 00 00 00 00 00	goto +0x10 <LBB2_13>

0000000000000d50 <LBB2_16>
     426	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
     427	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
     428	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
     429	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     430	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
     431	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     432	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
     433	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
     434	05 00 c2 ff 00 00 00 00	goto -0x3e <LBB2_12>

0000000000000d98 <LBB2_10>
     435	7b 2a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r2
     436	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
     437	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     438	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
     439	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     440	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
     441	05 00 ba ff 00 00 00 00	goto -0x46 <LBB2_11>

0000000000000dd0 <LBB2_13>
     442	7b 9a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r9
     443	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
     444	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
     445	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
     446	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
     447	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
     448	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
     449	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
     450	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
     451	07 02 00 00 01 00 00 00	r2 += 0x1
     452	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB2_15>
     453	bf a3 00 00 00 00 00 00	r3 = r10
     454	07 03 00 00 c0 ff ff ff	r3 += -0x40
     455	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
     457	b7 02 00 00 18 00 00 00	r2 = 0x18
     458	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
     460	18 05 00 00 10 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x24910 ll
     462	85 10 00 00 0a 34 00 00	call 0x340a ; <core::result::unwrap_failed>
     463	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000000e80 <LBB2_15>
     464	bf 91 00 00 00 00 00 00	r1 = r9
     465	07 01 00 00 10 00 00 00	r1 += 0x10
     466	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
     467	85 10 00 00 ce 1d 00 00	call 0x1dce ; <core::cell::Cell<T>::replace>
     468	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
     469	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
     470	bf a1 00 00 00 00 00 00	r1 = r10
     471	07 01 00 00 e8 fe ff ff	r1 += -0x118
     472	85 10 00 00 00 1e 00 00	call 0x1e00 ; <solana_program::program_pack::Pack::unpack_unchecked>
     473	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
     474	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
     475	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     476	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
     477	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     478	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     479	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
     480	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
     481	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
     482	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
     483	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
     484	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
     485	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
     486	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
     487	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
     488	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
     489	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
     490	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
     491	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
     492	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
     493	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
     494	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
     495	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
     496	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
     497	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
     498	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
     499	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
     500	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
     501	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
     502	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
     503	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
     504	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
     505	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
     506	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
     507	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
     508	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
     509	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
     510	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
     511	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
     512	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
     513	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
     514	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
     515	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
     516	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
     517	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
     518	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB2_18>
     519	05 00 13 00 00 00 00 00	goto +0x13 <LBB2_17>

0000000000001040 <LBB2_18>
     520	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
     521	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
     522	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
     523	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     524	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
     525	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     526	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
     527	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
     528	bf a2 00 00 00 00 00 00	r2 = r10
     529	07 02 00 00 e8 fe ff ff	r2 += -0x118
     530	bf 61 00 00 00 00 00 00	r1 = r6
     531	85 10 00 00 9c 1d 00 00	call 0x1d9c ; <<T as core::convert::From<T>>::from>
     532	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
     533	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
     534	07 02 00 00 ff ff ff ff	r2 += -0x1

00000000000010b8 <LBB2_40>
     535	85 10 00 00 8a 1d 00 00	call 0x1d8a ; <core::cell::Cell<T>::replace>
     536	05 00 60 ff 00 00 00 00	goto -0xa0 <LBB2_41>

00000000000010c8 <LBB2_42>
     537	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
     538	05 00 54 ff 00 00 00 00	goto -0xac <LBB2_3>

00000000000010d8 <LBB2_17>
     539	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
     540	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
     541	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
     542	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
     543	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
     544	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
     545	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
     546	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
     547	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
     548	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
     549	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
     550	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
     551	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
     552	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
     553	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
     554	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
     555	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
     556	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
     557	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
     558	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
     559	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
     560	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
     561	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
     562	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
     563	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
     564	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
     565	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
     566	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
     567	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
     568	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
     569	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
     570	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
     571	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
     572	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
     573	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
     574	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
     575	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
     576	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
     577	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
     578	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
     579	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
     580	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
     581	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
     582	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
     583	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
     584	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
     585	07 02 00 00 ff ff ff ff	r2 += -0x1
     586	85 10 00 00 57 1d 00 00	call 0x1d57 ; <core::cell::Cell<T>::replace>
     587	bf a1 00 00 00 00 00 00	r1 = r10
     588	07 01 00 00 88 fd ff ff	r1 += -0x278
     589	85 10 00 00 79 21 00 00	call 0x2179 ; <<spl_token::state::Account as solana_program::program_pack::IsInitialized>::is_initialized>
     590	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB2_20>
     591	05 00 04 00 00 00 00 00	goto +0x4 <LBB2_19>

0000000000001280 <LBB2_20>
     592	bf 61 00 00 00 00 00 00	r1 = r6
     593	b7 02 00 00 06 00 00 00	r2 = 0x6
     594	85 10 00 00 18 25 00 00	call 0x2518 ; <<T as core::convert::Into<U>>::into>
     595	05 00 25 ff 00 00 00 00	goto -0xdb <LBB2_41>

00000000000012a0 <LBB2_19>
     596	bf 71 00 00 00 00 00 00	r1 = r7
     597	85 10 00 00 b2 29 00 00	call 0x29b2 ; <solana_program::account_info::AccountInfo::lamports>
     598	bf a1 00 00 00 00 00 00	r1 = r10
     599	07 01 00 00 70 fd ff ff	r1 += -0x290
     600	bf 02 00 00 00 00 00 00	r2 = r0
     601	79 a3 58 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2a8)
     602	85 10 00 00 f5 2c 00 00	call 0x2cf5 ; <solana_program::rent::Rent::is_exempt>
     603	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB2_21>
     604	05 00 1c 00 00 00 00 00	goto +0x1c <LBB2_22>

00000000000012e8 <LBB2_21>
     605	79 a9 48 fd 00 00 00 00	r9 = *(u64 *)(r10 - 0x2b8)
     606	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
     607	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
     608	bf a1 00 00 00 00 00 00	r1 = r10
     609	07 01 00 00 e8 fe ff ff	r1 += -0x118
     610	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
     611	85 10 00 00 da 27 00 00	call 0x27da ; <spl_token::native_mint::id>
     612	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
     613	b7 02 00 00 20 00 00 00	r2 = 0x20
     614	79 a3 40 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2c0)
     615	b7 04 00 00 20 00 00 00	r4 = 0x20
     616	85 10 00 00 d2 1b 00 00	call 0x1bd2 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
     617	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB2_23>
     618	05 00 61 00 00 00 00 00	goto +0x61 <LBB2_30>

0000000000001358 <LBB2_23>
     619	79 99 10 00 00 00 00 00	r9 = *(u64 *)(r9 + 0x10)
     620	79 91 10 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x10)
     621	15 01 0f 00 00 00 00 00	if r1 == 0x0 goto +0xf <LBB2_25>
     622	bf a3 00 00 00 00 00 00	r3 = r10
     623	07 03 00 00 c0 ff ff ff	r3 += -0x40
     624	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
     626	b7 02 00 00 10 00 00 00	r2 = 0x10
     627	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
     629	18 05 00 00 28 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x24928 ll
     631	85 10 00 00 61 33 00 00	call 0x3361 ; <core::result::unwrap_failed>
     632	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000013c8 <LBB2_22>
     633	bf 61 00 00 00 00 00 00	r1 = r6
     634	b7 02 00 00 00 00 00 00	r2 = 0x0
     635	85 10 00 00 ef 24 00 00	call 0x24ef ; <<T as core::convert::Into<U>>::into>
     636	05 00 fc fe 00 00 00 00	goto -0x104 <LBB2_41>

00000000000013e8 <LBB2_25>
     637	bf 91 00 00 00 00 00 00	r1 = r9
     638	07 01 00 00 10 00 00 00	r1 += 0x10
     639	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
     640	b7 02 00 00 ff ff ff ff	r2 = -0x1
     641	85 10 00 00 20 1d 00 00	call 0x1d20 ; <core::cell::Cell<T>::replace>
     642	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
     643	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
     644	bf a1 00 00 00 00 00 00	r1 = r10
     645	07 01 00 00 e8 fe ff ff	r1 += -0x118
     646	85 10 00 00 82 1d 00 00	call 0x1d82 ; <solana_program::program_pack::Pack::unpack>
     647	bf a1 00 00 00 00 00 00	r1 = r10
     648	07 01 00 00 f0 fe ff ff	r1 += -0x110
     649	79 a2 e8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x118)
     650	55 02 2a 00 01 00 00 00	if r2 != 0x1 goto +0x2a <LBB2_29>
     651	79 a8 50 fd 00 00 00 00	r8 = *(u64 *)(r10 - 0x2b0)
     652	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
     653	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
     654	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
     655	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
     656	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
     657	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
     658	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
     659	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
     660	bf a1 00 00 00 00 00 00	r1 = r10
     661	07 01 00 00 c0 ff ff ff	r1 += -0x40
     662	b7 02 00 00 02 00 00 00	r2 = 0x2
     663	85 10 00 00 d3 24 00 00	call 0x24d3 ; <<T as core::convert::Into<U>>::into>
     664	61 a1 e0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x20)
     665	55 01 06 00 0e 00 00 00	if r1 != 0xe goto +0x6 <LBB2_28>
     666	bf a7 00 00 00 00 00 00	r7 = r10
     667	07 07 00 00 e8 ff ff ff	r7 += -0x18
     668	bf 71 00 00 00 00 00 00	r1 = r7
     669	85 10 00 00 da 1b 00 00	call 0x1bda ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
     670	bf 71 00 00 00 00 00 00	r1 = r7
     671	85 10 00 00 e0 25 00 00	call 0x25e0 ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>

0000000000001500 <LBB2_28>
     672	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
     673	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     674	79 a2 c0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x40)
     675	7b 2a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r2
     676	79 a3 c8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x38)
     677	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
     678	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
     679	79 a4 d8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x28)
     680	7b 4a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r4
     681	7b 4a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r4
     682	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     683	7b 3a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r3
     684	7b 2a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r2
     685	bf a2 00 00 00 00 00 00	r2 = r10
     686	07 02 00 00 e8 fe ff ff	r2 += -0x118
     687	bf 61 00 00 00 00 00 00	r1 = r6
     688	85 10 00 00 ff 1c 00 00	call 0x1cff ; <<T as core::convert::From<T>>::from>
     689	bf 81 00 00 00 00 00 00	r1 = r8
     690	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
     691	07 02 00 00 01 00 00 00	r2 += 0x1
     692	05 00 62 ff 00 00 00 00	goto -0x9e <LBB2_40>

00000000000015a8 <LBB2_29>
     693	79 12 50 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x50)
     694	7b 2a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r2
     695	79 12 48 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x48)
     696	7b 2a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r2
     697	79 12 40 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x40)
     698	7b 2a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r2
     699	79 12 38 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x38)
     700	7b 2a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r2
     701	79 12 30 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x30)
     702	7b 2a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r2
     703	79 12 28 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x28)
     704	7b 2a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r2
     705	79 12 20 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x20)
     706	7b 2a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r2
     707	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
     708	7b 2a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r2
     709	79 11 10 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x10)
     710	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
     711	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
     712	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
     713	07 02 00 00 01 00 00 00	r2 += 0x1
     714	85 10 00 00 d7 1c 00 00	call 0x1cd7 ; <core::cell::Cell<T>::replace>
     715	79 a9 48 fd 00 00 00 00	r9 = *(u64 *)(r10 - 0x2b8)

0000000000001660 <LBB2_30>
     716	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
     717	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
     718	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
     719	79 14 10 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x10)
     720	79 11 18 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x18)
     721	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
     722	7b 4a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r4
     723	7b 3a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r3
     724	7b 2a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r2
     725	79 81 00 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x0)
     726	79 82 08 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x8)
     727	79 83 10 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x10)
     728	79 84 18 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x18)
     729	7b 4a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r4
     730	7b 3a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r3
     731	7b 2a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r2
     732	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
     733	b7 08 00 00 00 00 00 00	r8 = 0x0
     734	7b 8a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r8
     735	63 8a d0 fd 00 00 00 00	*(u32 *)(r10 - 0x230) = r8
     736	b7 02 00 00 01 00 00 00	r2 = 0x1
     737	b7 01 00 00 01 00 00 00	r1 = 0x1
     738	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
     739	73 2a f4 fd 00 00 00 00	*(u8 *)(r10 - 0x20c) = r2
     740	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
     741	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
     742	bf a9 00 00 00 00 00 00	r9 = r10
     743	07 09 00 00 e8 fe ff ff	r9 += -0x118
     744	bf 91 00 00 00 00 00 00	r1 = r9
     745	85 10 00 00 54 27 00 00	call 0x2754 ; <spl_token::native_mint::id>
     746	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
     747	b7 02 00 00 20 00 00 00	r2 = 0x20
     748	bf 93 00 00 00 00 00 00	r3 = r9
     749	b7 04 00 00 20 00 00 00	r4 = 0x20
     750	85 10 00 00 3e 1b 00 00	call 0x1b3e ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
     751	55 00 02 00 00 00 00 00	if r0 != 0x0 goto +0x2 <LBB2_32>
     752	63 8a f8 fd 00 00 00 00	*(u32 *)(r10 - 0x208) = r8
     753	05 00 12 00 00 00 00 00	goto +0x12 <LBB2_35>

0000000000001790 <LBB2_32>
     754	bf a1 00 00 00 00 00 00	r1 = r10
     755	07 01 00 00 70 fd ff ff	r1 += -0x290
     756	79 a2 58 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2a8)
     757	85 10 00 00 3c 2c 00 00	call 0x2c3c ; <solana_program::rent::Rent::minimum_balance>
     758	bf 09 00 00 00 00 00 00	r9 = r0
     759	7b 9a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r9
     760	b7 01 00 00 01 00 00 00	r1 = 0x1
     761	63 1a f8 fd 00 00 00 00	*(u32 *)(r10 - 0x208) = r1
     762	bf 71 00 00 00 00 00 00	r1 = r7
     763	85 10 00 00 0c 29 00 00	call 0x290c ; <solana_program::account_info::AccountInfo::lamports>
     764	bf 08 00 00 00 00 00 00	r8 = r0
     765	1f 98 00 00 00 00 00 00	r8 -= r9
     766	2d 08 02 00 00 00 00 00	if r8 > r0 goto +0x2 <LBB2_34>
     767	b7 01 00 00 00 00 00 00	r1 = 0x0
     768	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1

0000000000001808 <LBB2_34>
     769	79 a1 48 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b8)
     770	57 01 00 00 01 00 00 00	r1 &= 0x1
     771	55 01 71 00 00 00 00 00	if r1 != 0x0 goto +0x71 <LBB2_43>

0000000000001820 <LBB2_35>
     772	7b 8a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r8
     773	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
     774	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
     775	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
     776	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
     777	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
     778	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
     779	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
     780	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
     781	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
     782	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
     783	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
     784	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
     785	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
     786	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
     787	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
     788	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
     789	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
     790	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
     791	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
     792	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
     793	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
     794	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
     795	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
     796	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
     797	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
     798	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
     799	7b 8a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r8
     800	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
     801	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
     802	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
     803	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
     804	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
     805	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
     806	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
     807	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
     808	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
     809	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
     810	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
     811	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
     812	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
     813	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
     814	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
     815	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
     816	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
     817	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
     818	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB2_37>
     819	bf a3 00 00 00 00 00 00	r3 = r10
     820	07 03 00 00 c0 ff ff ff	r3 += -0x40
     821	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
     823	b7 02 00 00 10 00 00 00	r2 = 0x10
     824	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
     826	18 05 00 00 40 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x24940 ll
     828	85 10 00 00 9c 32 00 00	call 0x329c ; <core::result::unwrap_failed>
     829	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000019f0 <LBB2_37>
     830	bf 87 00 00 00 00 00 00	r7 = r8
     831	07 07 00 00 10 00 00 00	r7 += 0x10
     832	bf 71 00 00 00 00 00 00	r1 = r7
     833	b7 02 00 00 ff ff ff ff	r2 = -0x1
     834	85 10 00 00 5f 1c 00 00	call 0x1c5f ; <core::cell::Cell<T>::replace>
     835	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
     836	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
     837	bf a1 00 00 00 00 00 00	r1 = r10
     838	07 01 00 00 38 fe ff ff	r1 += -0x1c8
     839	bf a2 00 00 00 00 00 00	r2 = r10
     840	07 02 00 00 e8 fe ff ff	r2 += -0x118
     841	85 10 00 00 a1 1c 00 00	call 0x1ca1 ; <solana_program::program_pack::Pack::pack>
     842	79 a1 3c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c4)
     843	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
     844	79 a1 44 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1bc)
     845	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
     846	79 a1 4c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b4)
     847	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
     848	61 a1 54 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1ac)
     849	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 0x8) = r1
     850	61 a1 38 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1c8)
     851	55 01 07 00 10 00 00 00	if r1 != 0x10 goto +0x7 <LBB2_39>
     852	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
     853	07 02 00 00 01 00 00 00	r2 += 0x1
     854	bf 71 00 00 00 00 00 00	r1 = r7
     855	85 10 00 00 4a 1c 00 00	call 0x1c4a ; <core::cell::Cell<T>::replace>
     856	b7 01 00 00 10 00 00 00	r1 = 0x10
     857	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
     858	05 00 1e fe 00 00 00 00	goto -0x1e2 <LBB2_41>

0000000000001ad8 <LBB2_39>
     859	63 1a e8 fe 00 00 00 00	*(u32 *)(r10 - 0x118) = r1
     860	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
     861	7b 1a ec fe 00 00 00 00	*(u64 *)(r10 - 0x114) = r1
     862	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
     863	7b 1a f4 fe 00 00 00 00	*(u64 *)(r10 - 0x10c) = r1
     864	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
     865	7b 1a fc fe 00 00 00 00	*(u64 *)(r10 - 0x104) = r1
     866	61 a1 f8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x8)
     867	63 1a 04 ff 00 00 00 00	*(u32 *)(r10 - 0xfc) = r1
     868	bf a1 00 00 00 00 00 00	r1 = r10
     869	07 01 00 00 38 fe ff ff	r1 += -0x1c8
     870	bf a2 00 00 00 00 00 00	r2 = r10
     871	07 02 00 00 e8 fe ff ff	r2 += -0x118
     872	85 10 00 00 47 1c 00 00	call 0x1c47 ; <<T as core::convert::From<T>>::from>
     873	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
     874	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
     875	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
     876	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
     877	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
     878	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
     879	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
     880	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
     881	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
     882	07 02 00 00 01 00 00 00	r2 += 0x1
     883	bf 71 00 00 00 00 00 00	r1 = r7
     884	05 00 a2 fe 00 00 00 00	goto -0x15e <LBB2_40>

0000000000001ba8 <LBB2_43>
     885	bf a1 00 00 00 00 00 00	r1 = r10
     886	07 01 00 00 e8 fe ff ff	r1 += -0x118
     887	b7 02 00 00 0e 00 00 00	r2 = 0xe
     888	85 10 00 00 4c 1c 00 00	call 0x1c4c ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
     889	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
     890	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
     891	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
     892	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
     893	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
     894	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
     895	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
     896	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
     897	05 00 f7 fd 00 00 00 00	goto -0x209 <LBB2_41>

0000000000001c10 <spl_token::processor::Processor::process_initialize_multisig>
     898	bf 48 00 00 00 00 00 00	r8 = r4
     899	bf 16 00 00 00 00 00 00	r6 = r1
     900	7b 2a 78 fb 00 00 00 00	*(u64 *)(r10 - 0x488) = r2
     901	27 03 00 00 30 00 00 00	r3 *= 0x30
     902	0f 32 00 00 00 00 00 00	r2 += r3
     903	7b 2a 80 fb 00 00 00 00	*(u64 *)(r10 - 0x480) = r2
     904	bf a1 00 00 00 00 00 00	r1 = r10
     905	07 01 00 00 70 fe ff ff	r1 += -0x190
     906	bf a2 00 00 00 00 00 00	r2 = r10
     907	07 02 00 00 78 fb ff ff	r2 += -0x488
     908	85 10 00 00 d6 25 00 00	call 0x25d6 ; <solana_program::account_info::next_account_info>
     909	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
     910	7b 1a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r1
     911	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
     912	7b 1a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r1
     913	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
     914	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
     915	79 a7 78 fe 00 00 00 00	r7 = *(u64 *)(r10 - 0x188)
     916	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
     917	15 01 19 00 01 00 00 00	if r1 == 0x1 goto +0x19 <LBB5_2>
     918	bf 71 00 00 00 00 00 00	r1 = r7
     919	85 10 00 00 8b 28 00 00	call 0x288b ; <solana_program::account_info::AccountInfo::data_len>
     920	bf 09 00 00 00 00 00 00	r9 = r0
     921	bf a1 00 00 00 00 00 00	r1 = r10
     922	07 01 00 00 70 fe ff ff	r1 += -0x190
     923	bf a2 00 00 00 00 00 00	r2 = r10
     924	07 02 00 00 78 fb ff ff	r2 += -0x488
     925	85 10 00 00 c5 25 00 00	call 0x25c5 ; <solana_program::account_info::next_account_info>
     926	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
     927	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
     928	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
     929	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
     930	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
     931	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
     932	79 a2 78 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x188)
     933	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
     934	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB5_4>
     935	05 00 13 00 00 00 00 00	goto +0x13 <LBB5_3>

0000000000001d40 <LBB5_4>
     936	7b 2a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r2
     937	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
     938	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
     939	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
     940	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
     941	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
     942	05 00 06 00 00 00 00 00	goto +0x6 <LBB5_5>

0000000000001d78 <LBB5_2>
     943	7b 7a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r7
     944	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
     945	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
     946	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
     947	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
     948	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)

0000000000001da8 <LBB5_5>
     949	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1

0000000000001db0 <LBB5_6>
     950	bf a2 00 00 00 00 00 00	r2 = r10
     951	07 02 00 00 70 fe ff ff	r2 += -0x190
     952	bf 61 00 00 00 00 00 00	r1 = r6
     953	85 10 00 00 f6 1b 00 00	call 0x1bf6 ; <<T as core::convert::From<T>>::from>

0000000000001dd0 <LBB5_32>
     954	95 00 00 00 00 00 00 00	exit

0000000000001dd8 <LBB5_3>
     955	bf a1 00 00 00 00 00 00	r1 = r10
     956	07 01 00 00 08 fd ff ff	r1 += -0x2f8
     957	85 10 00 00 34 27 00 00	call 0x2734 ; <solana_program::sysvar::Sysvar::from_account_info>
     958	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
     959	7b 1a a0 fb 00 00 00 00	*(u64 *)(r10 - 0x460) = r1
     960	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
     961	7b 1a a8 fb 00 00 00 00	*(u64 *)(r10 - 0x458) = r1
     962	79 a1 20 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e0)
     963	7b 1a b0 fb 00 00 00 00	*(u64 *)(r10 - 0x450) = r1
     964	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
     965	7b 1a b8 fb 00 00 00 00	*(u64 *)(r10 - 0x448) = r1
     966	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
     967	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB5_10>
     968	05 00 09 00 00 00 00 00	goto +0x9 <LBB5_7>

0000000000001e48 <LBB5_10>
     969	79 a1 b8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x448)
     970	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
     971	79 a1 b0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x450)
     972	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
     973	79 a1 a8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x458)
     974	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
     975	79 a1 a0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x460)
     976	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
     977	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB5_6>

0000000000001e90 <LBB5_7>
     978	7b 9a 60 fb 00 00 00 00	*(u64 *)(r10 - 0x4a0) = r9
     979	7b 8a 58 fb 00 00 00 00	*(u64 *)(r10 - 0x4a8) = r8
     980	79 a1 b0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x450)
     981	7b 1a 98 fb 00 00 00 00	*(u64 *)(r10 - 0x468) = r1
     982	79 a1 a8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x458)
     983	7b 1a 90 fb 00 00 00 00	*(u64 *)(r10 - 0x470) = r1
     984	79 a1 a0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x460)
     985	7b 1a 88 fb 00 00 00 00	*(u64 *)(r10 - 0x478) = r1
     986	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
     987	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
     988	07 02 00 00 01 00 00 00	r2 += 0x1
     989	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB5_9>
     990	bf a3 00 00 00 00 00 00	r3 = r10
     991	07 03 00 00 f8 ff ff ff	r3 += -0x8
     992	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
     994	b7 02 00 00 18 00 00 00	r2 = 0x18
     995	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
     997	18 05 00 00 58 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x24958 ll
     999	85 10 00 00 f1 31 00 00	call 0x31f1 ; <core::result::unwrap_failed>
    1000	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000001f48 <LBB5_9>
    1001	bf 98 00 00 00 00 00 00	r8 = r9
    1002	07 08 00 00 10 00 00 00	r8 += 0x10
    1003	bf 81 00 00 00 00 00 00	r1 = r8
    1004	85 10 00 00 b5 1b 00 00	call 0x1bb5 ; <core::cell::Cell<T>::replace>
    1005	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    1006	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    1007	bf a1 00 00 00 00 00 00	r1 = r10
    1008	07 01 00 00 70 fe ff ff	r1 += -0x190
    1009	85 10 00 00 de 1b 00 00	call 0x1bde ; <solana_program::program_pack::Pack::unpack_unchecked>
    1010	79 a1 71 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x18f)
    1011	7b 1a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r1
    1012	79 a1 79 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x187)
    1013	7b 1a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r1
    1014	79 a1 81 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17f)
    1015	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
    1016	79 a1 89 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x177)
    1017	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    1018	79 a1 91 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x16f)
    1019	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    1020	79 a1 99 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x167)
    1021	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    1022	79 a1 a1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x15f)
    1023	7b 1a 38 fd 00 00 00 00	*(u64 *)(r10 - 0x2c8) = r1
    1024	79 a1 a9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x157)
    1025	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
    1026	79 a1 b1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14f)
    1027	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
    1028	79 a1 b9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x147)
    1029	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    1030	79 a1 c1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13f)
    1031	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    1032	79 a1 c9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x137)
    1033	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    1034	79 a1 d1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12f)
    1035	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    1036	79 a1 d9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x127)
    1037	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    1038	79 a1 e1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x11f)
    1039	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    1040	79 a1 e9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x117)
    1041	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    1042	79 a1 f1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10f)
    1043	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    1044	79 a1 f9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x107)
    1045	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    1046	79 a1 01 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xff)
    1047	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    1048	79 a1 09 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf7)
    1049	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    1050	79 a1 11 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xef)
    1051	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    1052	79 a1 19 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe7)
    1053	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    1054	79 a1 21 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdf)
    1055	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    1056	79 a1 29 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd7)
    1057	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1058	79 a1 31 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcf)
    1059	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1060	79 a1 39 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc7)
    1061	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1062	79 a1 41 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xbf)
    1063	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    1064	79 a1 49 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb7)
    1065	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    1066	79 a1 51 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xaf)
    1067	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    1068	79 a1 59 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa7)
    1069	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    1070	79 a1 61 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9f)
    1071	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    1072	79 a1 69 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x97)
    1073	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    1074	79 a1 71 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8f)
    1075	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    1076	79 a1 79 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x87)
    1077	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    1078	79 a1 81 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x7f)
    1079	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    1080	79 a1 89 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x77)
    1081	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    1082	79 a1 91 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6f)
    1083	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    1084	79 a1 99 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x67)
    1085	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    1086	79 a1 a1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5f)
    1087	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    1088	79 a1 a9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x57)
    1089	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    1090	79 a1 b1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x4f)
    1091	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    1092	79 a1 b9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x47)
    1093	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    1094	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    1095	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    1096	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    1097	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    1098	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    1099	63 1a 67 fe 00 00 00 00	*(u32 *)(r10 - 0x199) = r1
    1100	71 a1 70 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x190)
    1101	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB5_12>
    1102	05 00 11 00 00 00 00 00	goto +0x11 <LBB5_11>

0000000000002278 <LBB5_12>
    1103	79 a1 27 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d9)
    1104	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    1105	79 a1 1f fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e1)
    1106	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    1107	79 a1 17 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e9)
    1108	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    1109	79 a1 0f fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f1)
    1110	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    1111	bf a2 00 00 00 00 00 00	r2 = r10
    1112	07 02 00 00 70 fe ff ff	r2 += -0x190
    1113	bf 61 00 00 00 00 00 00	r1 = r6
    1114	85 10 00 00 55 1b 00 00	call 0x1b55 ; <<T as core::convert::From<T>>::from>
    1115	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    1116	07 02 00 00 ff ff ff ff	r2 += -0x1
    1117	bf 81 00 00 00 00 00 00	r1 = r8

00000000000022f0 <LBB5_31>
    1118	85 10 00 00 43 1b 00 00	call 0x1b43 ; <core::cell::Cell<T>::replace>
    1119	05 00 5a ff 00 00 00 00	goto -0xa6 <LBB5_32>

0000000000002300 <LBB5_11>
    1120	61 a1 67 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x199)
    1121	63 1a ff fc 00 00 00 00	*(u32 *)(r10 - 0x301) = r1
    1122	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    1123	7b 1a f8 fc 00 00 00 00	*(u64 *)(r10 - 0x308) = r1
    1124	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    1125	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1
    1126	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    1127	7b 1a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r1
    1128	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    1129	7b 1a e0 fc 00 00 00 00	*(u64 *)(r10 - 0x320) = r1
    1130	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    1131	7b 1a d8 fc 00 00 00 00	*(u64 *)(r10 - 0x328) = r1
    1132	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    1133	7b 1a d0 fc 00 00 00 00	*(u64 *)(r10 - 0x330) = r1
    1134	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    1135	7b 1a c8 fc 00 00 00 00	*(u64 *)(r10 - 0x338) = r1
    1136	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    1137	7b 1a c0 fc 00 00 00 00	*(u64 *)(r10 - 0x340) = r1
    1138	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    1139	7b 1a b8 fc 00 00 00 00	*(u64 *)(r10 - 0x348) = r1
    1140	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    1141	7b 1a b0 fc 00 00 00 00	*(u64 *)(r10 - 0x350) = r1
    1142	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    1143	7b 1a a8 fc 00 00 00 00	*(u64 *)(r10 - 0x358) = r1
    1144	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    1145	7b 1a a0 fc 00 00 00 00	*(u64 *)(r10 - 0x360) = r1
    1146	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    1147	7b 1a 98 fc 00 00 00 00	*(u64 *)(r10 - 0x368) = r1
    1148	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    1149	7b 1a 90 fc 00 00 00 00	*(u64 *)(r10 - 0x370) = r1
    1150	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    1151	7b 1a 88 fc 00 00 00 00	*(u64 *)(r10 - 0x378) = r1
    1152	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    1153	7b 1a 80 fc 00 00 00 00	*(u64 *)(r10 - 0x380) = r1
    1154	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    1155	7b 1a 78 fc 00 00 00 00	*(u64 *)(r10 - 0x388) = r1
    1156	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    1157	7b 1a 70 fc 00 00 00 00	*(u64 *)(r10 - 0x390) = r1
    1158	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    1159	7b 1a 68 fc 00 00 00 00	*(u64 *)(r10 - 0x398) = r1
    1160	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    1161	7b 1a 60 fc 00 00 00 00	*(u64 *)(r10 - 0x3a0) = r1
    1162	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    1163	7b 1a 58 fc 00 00 00 00	*(u64 *)(r10 - 0x3a8) = r1
    1164	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    1165	7b 1a 50 fc 00 00 00 00	*(u64 *)(r10 - 0x3b0) = r1
    1166	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    1167	7b 1a 48 fc 00 00 00 00	*(u64 *)(r10 - 0x3b8) = r1
    1168	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    1169	7b 1a 40 fc 00 00 00 00	*(u64 *)(r10 - 0x3c0) = r1
    1170	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    1171	7b 1a 38 fc 00 00 00 00	*(u64 *)(r10 - 0x3c8) = r1
    1172	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    1173	7b 1a 30 fc 00 00 00 00	*(u64 *)(r10 - 0x3d0) = r1
    1174	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    1175	7b 1a 28 fc 00 00 00 00	*(u64 *)(r10 - 0x3d8) = r1
    1176	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    1177	7b 1a 20 fc 00 00 00 00	*(u64 *)(r10 - 0x3e0) = r1
    1178	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    1179	7b 1a 18 fc 00 00 00 00	*(u64 *)(r10 - 0x3e8) = r1
    1180	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    1181	7b 1a 10 fc 00 00 00 00	*(u64 *)(r10 - 0x3f0) = r1
    1182	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    1183	7b 1a 08 fc 00 00 00 00	*(u64 *)(r10 - 0x3f8) = r1
    1184	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    1185	7b 1a 00 fc 00 00 00 00	*(u64 *)(r10 - 0x400) = r1
    1186	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    1187	7b 1a f8 fb 00 00 00 00	*(u64 *)(r10 - 0x408) = r1
    1188	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    1189	7b 1a f0 fb 00 00 00 00	*(u64 *)(r10 - 0x410) = r1
    1190	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    1191	7b 1a e8 fb 00 00 00 00	*(u64 *)(r10 - 0x418) = r1
    1192	79 a1 48 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b8)
    1193	7b 1a e0 fb 00 00 00 00	*(u64 *)(r10 - 0x420) = r1
    1194	79 a1 40 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c0)
    1195	7b 1a d8 fb 00 00 00 00	*(u64 *)(r10 - 0x428) = r1
    1196	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    1197	7b 1a d0 fb 00 00 00 00	*(u64 *)(r10 - 0x430) = r1
    1198	79 a1 30 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d0)
    1199	7b 1a c8 fb 00 00 00 00	*(u64 *)(r10 - 0x438) = r1
    1200	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    1201	7b 1a c0 fb 00 00 00 00	*(u64 *)(r10 - 0x440) = r1
    1202	79 a1 20 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e0)
    1203	7b 1a b8 fb 00 00 00 00	*(u64 *)(r10 - 0x448) = r1
    1204	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    1205	7b 1a b0 fb 00 00 00 00	*(u64 *)(r10 - 0x450) = r1
    1206	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    1207	7b 1a a8 fb 00 00 00 00	*(u64 *)(r10 - 0x458) = r1
    1208	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
    1209	7b 1a a0 fb 00 00 00 00	*(u64 *)(r10 - 0x460) = r1
    1210	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    1211	07 02 00 00 ff ff ff ff	r2 += -0x1
    1212	bf 81 00 00 00 00 00 00	r1 = r8
    1213	85 10 00 00 e4 1a 00 00	call 0x1ae4 ; <core::cell::Cell<T>::replace>
    1214	71 a1 a2 fb 00 00 00 00	r1 = *(u8 *)(r10 - 0x45e)
    1215	15 01 04 00 00 00 00 00	if r1 == 0x0 goto +0x4 <LBB5_13>
    1216	bf 61 00 00 00 00 00 00	r1 = r6
    1217	b7 02 00 00 06 00 00 00	r2 = 0x6
    1218	85 10 00 00 a8 22 00 00	call 0x22a8 ; <<T as core::convert::Into<U>>::into>
    1219	05 00 f6 fe 00 00 00 00	goto -0x10a <LBB5_32>

0000000000002620 <LBB5_13>
    1220	bf 71 00 00 00 00 00 00	r1 = r7
    1221	85 10 00 00 42 27 00 00	call 0x2742 ; <solana_program::account_info::AccountInfo::lamports>
    1222	bf a1 00 00 00 00 00 00	r1 = r10
    1223	07 01 00 00 88 fb ff ff	r1 += -0x478
    1224	bf 02 00 00 00 00 00 00	r2 = r0
    1225	79 a3 60 fb 00 00 00 00	r3 = *(u64 *)(r10 - 0x4a0)
    1226	85 10 00 00 85 2a 00 00	call 0x2a85 ; <solana_program::rent::Rent::is_exempt>
    1227	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB5_15>
    1228	05 00 b5 00 00 00 00 00	goto +0xb5 <LBB5_16>

0000000000002668 <LBB5_15>
    1229	bf a1 00 00 00 00 00 00	r1 = r10
    1230	07 01 00 00 68 fb ff ff	r1 += -0x498
    1231	bf a2 00 00 00 00 00 00	r2 = r10
    1232	07 02 00 00 78 fb ff ff	r2 += -0x488
    1233	85 10 00 00 c4 26 00 00	call 0x26c4 ; <core::slice::iter::Iter<T>::as_slice>
    1234	79 a8 58 fb 00 00 00 00	r8 = *(u64 *)(r10 - 0x4a8)
    1235	73 8a a0 fb 00 00 00 00	*(u8 *)(r10 - 0x460) = r8
    1236	79 a9 70 fb 00 00 00 00	r9 = *(u64 *)(r10 - 0x490)
    1237	73 9a a1 fb 00 00 00 00	*(u8 *)(r10 - 0x45f) = r9
    1238	79 a1 68 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x498)
    1239	7b 1a 60 fb 00 00 00 00	*(u64 *)(r10 - 0x4a0) = r1
    1240	bf 91 00 00 00 00 00 00	r1 = r9
    1241	57 01 00 00 ff 00 00 00	r1 &= 0xff
    1242	85 10 00 00 e8 18 00 00	call 0x18e8 ; <spl_token::instruction::is_valid_signer_index>
    1243	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB5_17>
    1244	05 00 a9 00 00 00 00 00	goto +0xa9 <LBB5_18>

00000000000026e8 <LBB5_17>
    1245	57 08 00 00 ff 00 00 00	r8 &= 0xff
    1246	bf 81 00 00 00 00 00 00	r1 = r8
    1247	85 10 00 00 e3 18 00 00	call 0x18e3 ; <spl_token::instruction::is_valid_signer_index>
    1248	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB5_19>
    1249	05 00 a8 00 00 00 00 00	goto +0xa8 <LBB5_24>

0000000000002710 <LBB5_19>
    1250	27 09 00 00 30 00 00 00	r9 *= 0x30
    1251	79 a2 60 fb 00 00 00 00	r2 = *(u64 *)(r10 - 0x4a0)
    1252	bf 23 00 00 00 00 00 00	r3 = r2
    1253	0f 93 00 00 00 00 00 00	r3 += r9
    1254	bf a8 00 00 00 00 00 00	r8 = r10
    1255	07 08 00 00 70 fe ff ff	r8 += -0x190
    1256	bf 81 00 00 00 00 00 00	r1 = r8
    1257	85 10 00 00 a3 26 00 00	call 0x26a3 ; <core::iter::adapters::enumerate::Enumerate<I>::new>
    1258	bf a1 00 00 00 00 00 00	r1 = r10
    1259	07 01 00 00 08 fd ff ff	r1 += -0x2f8
    1260	bf 82 00 00 00 00 00 00	r2 = r8
    1261	85 10 00 00 d0 26 00 00	call 0x26d0 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    1262	79 a2 10 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2f0)
    1263	79 a3 08 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2f8)
    1264	1d 32 26 00 00 00 00 00	if r2 == r3 goto +0x26 <LBB5_25>
    1265	79 a0 18 fd 00 00 00 00	r0 = *(u64 *)(r10 - 0x2e8)
    1266	bf 04 00 00 00 00 00 00	r4 = r0
    1267	67 04 00 00 05 00 00 00	r4 <<= 0x5
    1268	bf a1 00 00 00 00 00 00	r1 = r10
    1269	07 01 00 00 a0 fb ff ff	r1 += -0x460
    1270	0f 14 00 00 00 00 00 00	r4 += r1
    1271	bf 01 00 00 00 00 00 00	r1 = r0
    1272	25 00 01 00 0b 00 00 00	if r0 > 0xb goto +0x1 <LBB5_22>
    1273	b7 01 00 00 0b 00 00 00	r1 = 0xb

00000000000027d0 <LBB5_22>
    1274	bf 15 00 00 00 00 00 00	r5 = r1
    1275	1f 05 00 00 00 00 00 00	r5 -= r0
    1276	47 04 00 00 03 00 00 00	r4 |= 0x3
    1277	07 05 00 00 01 00 00 00	r5 += 0x1

00000000000027f0 <LBB5_23>
    1278	79 30 00 00 00 00 00 00	r0 = *(u64 *)(r3 + 0x0)
    1279	79 08 18 00 00 00 00 00	r8 = *(u64 *)(r0 + 0x18)
    1280	7b 8a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r8
    1281	79 08 10 00 00 00 00 00	r8 = *(u64 *)(r0 + 0x10)
    1282	7b 8a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r8
    1283	79 08 08 00 00 00 00 00	r8 = *(u64 *)(r0 + 0x8)
    1284	7b 8a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r8
    1285	79 00 00 00 00 00 00 00	r0 = *(u64 *)(r0 + 0x0)
    1286	7b 0a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r0
    1287	07 05 00 00 ff ff ff ff	r5 += -0x1
    1288	15 05 b4 00 00 00 00 00	if r5 == 0x0 goto +0xb4 <LBB5_33>
    1289	bf 40 00 00 00 00 00 00	r0 = r4
    1290	07 00 00 00 20 00 00 00	r0 += 0x20
    1291	07 03 00 00 30 00 00 00	r3 += 0x30
    1292	79 a8 88 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x178)
    1293	7b 84 18 00 00 00 00 00	*(u64 *)(r4 + 0x18) = r8
    1294	79 a8 80 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x180)
    1295	7b 84 10 00 00 00 00 00	*(u64 *)(r4 + 0x10) = r8
    1296	79 a8 78 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x188)
    1297	7b 84 08 00 00 00 00 00	*(u64 *)(r4 + 0x8) = r8
    1298	79 a8 70 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x190)
    1299	7b 84 00 00 00 00 00 00	*(u64 *)(r4 + 0x0) = r8
    1300	bf 04 00 00 00 00 00 00	r4 = r0
    1301	1d 32 01 00 00 00 00 00	if r2 == r3 goto +0x1 <LBB5_25>
    1302	05 00 e7 ff 00 00 00 00	goto -0x19 <LBB5_23>

00000000000028b8 <LBB5_25>
    1303	85 10 00 00 af 19 00 00	call 0x19af ; <<T as core::convert::From<T>>::from>
    1304	b7 01 00 00 01 00 00 00	r1 = 0x1
    1305	73 1a a2 fb 00 00 00 00	*(u8 *)(r10 - 0x45e) = r1
    1306	61 a1 ff fc 00 00 00 00	r1 = *(u32 *)(r10 - 0x301)
    1307	63 1a cf ff 00 00 00 00	*(u32 *)(r10 - 0x31) = r1
    1308	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    1309	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    1310	79 a1 f0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x310)
    1311	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    1312	79 a1 e8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x318)
    1313	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    1314	79 a1 e0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x320)
    1315	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    1316	79 a1 d8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x328)
    1317	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    1318	79 a1 d0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x330)
    1319	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    1320	79 a1 c8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x338)
    1321	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    1322	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    1323	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    1324	79 a1 b8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x348)
    1325	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    1326	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    1327	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    1328	79 a1 a8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x358)
    1329	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    1330	79 a1 a0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x360)
    1331	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    1332	79 a1 98 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x368)
    1333	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    1334	79 a1 90 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x370)
    1335	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    1336	79 a1 88 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x378)
    1337	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    1338	79 a1 80 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x380)
    1339	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    1340	79 a1 78 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x388)
    1341	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    1342	79 a1 70 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x390)
    1343	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    1344	79 a1 68 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x398)
    1345	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    1346	79 a1 60 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3a0)
    1347	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    1348	79 a1 58 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3a8)
    1349	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    1350	79 a1 50 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3b0)
    1351	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    1352	79 a1 48 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3b8)
    1353	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    1354	79 a1 40 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c0)
    1355	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    1356	79 a1 38 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c8)
    1357	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    1358	79 a1 30 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3d0)
    1359	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    1360	79 a1 28 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3d8)
    1361	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    1362	79 a1 20 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3e0)
    1363	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    1364	79 a1 18 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3e8)
    1365	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    1366	79 a1 10 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f0)
    1367	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    1368	79 a1 08 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f8)
    1369	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    1370	79 a1 00 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x400)
    1371	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    1372	79 a1 f8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x408)
    1373	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    1374	79 a1 f0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x410)
    1375	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    1376	79 a1 e8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x418)
    1377	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    1378	79 a1 e0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x420)
    1379	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    1380	79 a1 d8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x428)
    1381	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    1382	79 a1 d0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x430)
    1383	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    1384	79 a1 c8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x438)
    1385	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    1386	79 a1 c0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x440)
    1387	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    1388	79 a1 b8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x448)
    1389	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    1390	79 a1 b0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x450)
    1391	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    1392	79 a1 a8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x458)
    1393	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    1394	79 a1 a0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x460)
    1395	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    1396	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
    1397	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    1398	15 01 17 00 00 00 00 00	if r1 == 0x0 goto +0x17 <LBB5_27>
    1399	bf a3 00 00 00 00 00 00	r3 = r10
    1400	07 03 00 00 f8 ff ff ff	r3 += -0x8
    1401	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    1403	b7 02 00 00 10 00 00 00	r2 = 0x10
    1404	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    1406	18 05 00 00 88 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x24988 ll
    1408	85 10 00 00 58 30 00 00	call 0x3058 ; <core::result::unwrap_failed>
    1409	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000002c10 <LBB5_16>
    1410	bf 61 00 00 00 00 00 00	r1 = r6
    1411	b7 02 00 00 00 00 00 00	r2 = 0x0
    1412	85 10 00 00 e6 21 00 00	call 0x21e6 ; <<T as core::convert::Into<U>>::into>
    1413	05 00 34 fe 00 00 00 00	goto -0x1cc <LBB5_32>

0000000000002c30 <LBB5_18>
    1414	bf 61 00 00 00 00 00 00	r1 = r6
    1415	b7 02 00 00 07 00 00 00	r2 = 0x7
    1416	85 10 00 00 e2 21 00 00	call 0x21e2 ; <<T as core::convert::Into<U>>::into>
    1417	05 00 30 fe 00 00 00 00	goto -0x1d0 <LBB5_32>

0000000000002c50 <LBB5_24>
    1418	bf 61 00 00 00 00 00 00	r1 = r6
    1419	b7 02 00 00 08 00 00 00	r2 = 0x8
    1420	85 10 00 00 de 21 00 00	call 0x21de ; <<T as core::convert::Into<U>>::into>
    1421	05 00 2c fe 00 00 00 00	goto -0x1d4 <LBB5_32>

0000000000002c70 <LBB5_27>
    1422	bf 87 00 00 00 00 00 00	r7 = r8
    1423	07 07 00 00 10 00 00 00	r7 += 0x10
    1424	bf 71 00 00 00 00 00 00	r1 = r7
    1425	b7 02 00 00 ff ff ff ff	r2 = -0x1
    1426	85 10 00 00 0f 1a 00 00	call 0x1a0f ; <core::cell::Cell<T>::replace>
    1427	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    1428	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    1429	bf a1 00 00 00 00 00 00	r1 = r10
    1430	07 01 00 00 08 fd ff ff	r1 += -0x2f8
    1431	bf a2 00 00 00 00 00 00	r2 = r10
    1432	07 02 00 00 70 fe ff ff	r2 += -0x190
    1433	85 10 00 00 5b 1a 00 00	call 0x1a5b ; <solana_program::program_pack::Pack::pack>
    1434	79 a1 0c fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f4)
    1435	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    1436	79 a1 14 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2ec)
    1437	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    1438	79 a1 1c fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e4)
    1439	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    1440	61 a1 24 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x2dc)
    1441	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    1442	61 a1 08 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x2f8)
    1443	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB5_29>
    1444	05 00 07 00 00 00 00 00	goto +0x7 <LBB5_30>

0000000000002d28 <LBB5_29>
    1445	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1446	07 02 00 00 01 00 00 00	r2 += 0x1
    1447	bf 71 00 00 00 00 00 00	r1 = r7
    1448	85 10 00 00 f9 19 00 00	call 0x19f9 ; <core::cell::Cell<T>::replace>
    1449	b7 01 00 00 10 00 00 00	r1 = 0x10
    1450	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    1451	05 00 0e fe 00 00 00 00	goto -0x1f2 <LBB5_32>

0000000000002d60 <LBB5_30>
    1452	63 1a 70 fe 00 00 00 00	*(u32 *)(r10 - 0x190) = r1
    1453	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    1454	7b 1a 74 fe 00 00 00 00	*(u64 *)(r10 - 0x18c) = r1
    1455	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    1456	7b 1a 7c fe 00 00 00 00	*(u64 *)(r10 - 0x184) = r1
    1457	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    1458	7b 1a 84 fe 00 00 00 00	*(u64 *)(r10 - 0x17c) = r1
    1459	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    1460	63 1a 8c fe 00 00 00 00	*(u32 *)(r10 - 0x174) = r1
    1461	bf a2 00 00 00 00 00 00	r2 = r10
    1462	07 02 00 00 70 fe ff ff	r2 += -0x190
    1463	bf 61 00 00 00 00 00 00	r1 = r6
    1464	85 10 00 00 f7 19 00 00	call 0x19f7 ; <<T as core::convert::From<T>>::from>
    1465	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1466	07 02 00 00 01 00 00 00	r2 += 0x1
    1467	bf 71 00 00 00 00 00 00	r1 = r7
    1468	05 00 a1 fe 00 00 00 00	goto -0x15f <LBB5_31>

0000000000002de8 <LBB5_33>
    1469	b7 02 00 00 0b 00 00 00	r2 = 0xb
    1470	18 03 00 00 70 49 02 00 00 00 00 00 00 00 00 00	r3 = 0x24970 ll
    1472	85 10 00 00 35 31 00 00	call 0x3135 ; <core::panicking::panic_bounds_check>
    1473	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000002e10 <spl_token::processor::Processor::process_transfer>
    1474	bf 57 00 00 00 00 00 00	r7 = r5
    1475	bf 29 00 00 00 00 00 00	r9 = r2
    1476	bf 16 00 00 00 00 00 00	r6 = r1
    1477	7b 3a 00 fd 00 00 00 00	*(u64 *)(r10 - 0x300) = r3
    1478	27 04 00 00 30 00 00 00	r4 *= 0x30
    1479	0f 43 00 00 00 00 00 00	r3 += r4
    1480	7b 3a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r3
    1481	bf a1 00 00 00 00 00 00	r1 = r10
    1482	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1483	bf a2 00 00 00 00 00 00	r2 = r10
    1484	07 02 00 00 00 fd ff ff	r2 += -0x300
    1485	85 10 00 00 95 23 00 00	call 0x2395 ; <solana_program::account_info::next_account_info>
    1486	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1487	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1488	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1489	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1490	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1491	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1492	79 a8 28 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0xd8)
    1493	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1494	15 01 36 00 01 00 00 00	if r1 == 0x1 goto +0x36 <LBB6_6>
    1495	7b 9a d8 fc 00 00 00 00	*(u64 *)(r10 - 0x328) = r9
    1496	79 71 10 f0 00 00 00 00	r1 = *(u64 *)(r7 - 0xff0)
    1497	7b 1a d0 fc 00 00 00 00	*(u64 *)(r10 - 0x330) = r1
    1498	79 71 08 f0 00 00 00 00	r1 = *(u64 *)(r7 - 0xff8)
    1499	79 77 00 f0 00 00 00 00	r7 = *(u64 *)(r7 - 0x1000)
    1500	b7 09 00 00 00 00 00 00	r9 = 0x0
    1501	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB6_2>
    1502	05 00 0e 00 00 00 00 00	goto +0xe <LBB6_3>

0000000000002ef8 <LBB6_2>
    1503	bf a1 00 00 00 00 00 00	r1 = r10
    1504	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1505	bf a2 00 00 00 00 00 00	r2 = r10
    1506	07 02 00 00 00 fd ff ff	r2 += -0x300
    1507	85 10 00 00 7f 23 00 00	call 0x237f ; <solana_program::account_info::next_account_info>
    1508	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1509	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1510	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1511	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1512	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1513	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1514	79 a9 28 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0xd8)
    1515	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1516	15 01 24 00 01 00 00 00	if r1 == 0x1 goto +0x24 <LBB6_8>

0000000000002f68 <LBB6_3>
    1517	7b 7a c8 fc 00 00 00 00	*(u64 *)(r10 - 0x338) = r7
    1518	bf a1 00 00 00 00 00 00	r1 = r10
    1519	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1520	bf a2 00 00 00 00 00 00	r2 = r10
    1521	07 02 00 00 00 fd ff ff	r2 += -0x300
    1522	85 10 00 00 70 23 00 00	call 0x2370 ; <solana_program::account_info::next_account_info>
    1523	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1524	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1525	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1526	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1527	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1528	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1529	79 a7 28 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0xd8)
    1530	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1531	15 01 13 00 01 00 00 00	if r1 == 0x1 goto +0x13 <LBB6_7>
    1532	bf a1 00 00 00 00 00 00	r1 = r10
    1533	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1534	bf a2 00 00 00 00 00 00	r2 = r10
    1535	07 02 00 00 00 fd ff ff	r2 += -0x300
    1536	85 10 00 00 62 23 00 00	call 0x2362 ; <solana_program::account_info::next_account_info>
    1537	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1538	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1539	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1540	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1541	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1542	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1543	79 a2 28 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xd8)
    1544	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1545	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB6_5>
    1546	05 00 1b 00 00 00 00 00	goto +0x1b <LBB6_13>

0000000000003058 <LBB6_5>
    1547	7b 2a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r2
    1548	05 00 05 00 00 00 00 00	goto +0x5 <LBB6_9>

0000000000003068 <LBB6_6>
    1549	7b 8a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r8
    1550	05 00 03 00 00 00 00 00	goto +0x3 <LBB6_9>

0000000000003078 <LBB6_7>
    1551	7b 7a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r7
    1552	05 00 01 00 00 00 00 00	goto +0x1 <LBB6_9>

0000000000003088 <LBB6_8>
    1553	7b 9a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r9

0000000000003090 <LBB6_9>
    1554	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    1555	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    1556	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    1557	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    1558	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    1559	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1

00000000000030c0 <LBB6_10>
    1560	bf a1 00 00 00 00 00 00	r1 = r10
    1561	07 01 00 00 70 fe ff ff	r1 += -0x190
    1562	bf a2 00 00 00 00 00 00	r2 = r10
    1563	07 02 00 00 20 ff ff ff	r2 += -0xe0
    1564	85 10 00 00 93 19 00 00	call 0x1993 ; <<T as core::convert::From<T>>::from>
    1565	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1566	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    1567	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1568	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    1569	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1570	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    1571	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)

0000000000003120 <LBB6_11>
    1572	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1

0000000000003128 <LBB6_12>
    1573	95 00 00 00 00 00 00 00	exit

0000000000003130 <LBB6_13>
    1574	7b 2a b8 fc 00 00 00 00	*(u64 *)(r10 - 0x348) = r2
    1575	7b 7a c0 fc 00 00 00 00	*(u64 *)(r10 - 0x340) = r7
    1576	7b 8a b0 fc 00 00 00 00	*(u64 *)(r10 - 0x350) = r8
    1577	79 87 10 00 00 00 00 00	r7 = *(u64 *)(r8 + 0x10)
    1578	79 72 10 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x10)
    1579	07 02 00 00 01 00 00 00	r2 += 0x1
    1580	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB6_15>
    1581	bf a3 00 00 00 00 00 00	r3 = r10
    1582	07 03 00 00 f8 ff ff ff	r3 += -0x8
    1583	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    1585	b7 02 00 00 18 00 00 00	r2 = 0x18
    1586	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    1588	18 05 00 00 a0 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x249a0 ll
    1590	85 10 00 00 a2 2f 00 00	call 0x2fa2 ; <core::result::unwrap_failed>
    1591	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000031c0 <LBB6_15>
    1592	bf 78 00 00 00 00 00 00	r8 = r7
    1593	07 08 00 00 10 00 00 00	r8 += 0x10
    1594	bf 81 00 00 00 00 00 00	r1 = r8
    1595	85 10 00 00 66 19 00 00	call 0x1966 ; <core::cell::Cell<T>::replace>
    1596	79 72 18 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x18)
    1597	79 73 20 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x20)
    1598	bf a1 00 00 00 00 00 00	r1 = r10
    1599	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1600	85 10 00 00 d2 1b 00 00	call 0x1bd2 ; <solana_program::program_pack::Pack::unpack>
    1601	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    1602	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    1603	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1604	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    1605	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1606	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    1607	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1608	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    1609	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    1610	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    1611	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    1612	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    1613	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    1614	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    1615	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    1616	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    1617	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    1618	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    1619	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    1620	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    1621	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    1622	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    1623	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    1624	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    1625	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    1626	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    1627	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    1628	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    1629	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    1630	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    1631	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    1632	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    1633	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    1634	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    1635	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    1636	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    1637	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    1638	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    1639	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    1640	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    1641	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    1642	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    1643	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    1644	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    1645	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1646	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB6_16>
    1647	05 00 19 00 00 00 00 00	goto +0x19 <LBB6_17>

0000000000003380 <LBB6_16>
    1648	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1649	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    1650	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1651	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    1652	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1653	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    1654	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    1655	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    1656	bf a1 00 00 00 00 00 00	r1 = r10
    1657	07 01 00 00 c0 fd ff ff	r1 += -0x240
    1658	bf a2 00 00 00 00 00 00	r2 = r10
    1659	07 02 00 00 20 ff ff ff	r2 += -0xe0
    1660	85 10 00 00 33 19 00 00	call 0x1933 ; <<T as core::convert::From<T>>::from>
    1661	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    1662	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    1663	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    1664	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    1665	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    1666	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    1667	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    1668	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    1669	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    1670	07 02 00 00 ff ff ff ff	r2 += -0x1
    1671	bf 81 00 00 00 00 00 00	r1 = r8
    1672	05 00 90 00 00 00 00 00	goto +0x90 <LBB6_22>

0000000000003448 <LBB6_17>
    1673	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    1674	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    1675	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    1676	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    1677	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    1678	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    1679	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    1680	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    1681	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    1682	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    1683	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    1684	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    1685	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    1686	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    1687	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    1688	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    1689	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    1690	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    1691	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    1692	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    1693	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    1694	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    1695	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    1696	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    1697	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    1698	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    1699	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    1700	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    1701	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    1702	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
    1703	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    1704	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
    1705	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    1706	7b 1a 38 fd 00 00 00 00	*(u64 *)(r10 - 0x2c8) = r1
    1707	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    1708	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    1709	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1710	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    1711	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1712	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    1713	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1714	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
    1715	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    1716	7b 1a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r1
    1717	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    1718	07 02 00 00 ff ff ff ff	r2 += -0x1
    1719	bf 81 00 00 00 00 00 00	r1 = r8
    1720	85 10 00 00 e9 18 00 00	call 0x18e9 ; <core::cell::Cell<T>::replace>
    1721	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    1722	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
    1723	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    1724	07 02 00 00 01 00 00 00	r2 += 0x1
    1725	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB6_19>
    1726	bf a3 00 00 00 00 00 00	r3 = r10
    1727	07 03 00 00 f8 ff ff ff	r3 += -0x8
    1728	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    1730	b7 02 00 00 18 00 00 00	r2 = 0x18
    1731	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    1733	18 05 00 00 b8 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x249b8 ll
    1735	85 10 00 00 11 2f 00 00	call 0x2f11 ; <core::result::unwrap_failed>
    1736	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000003648 <LBB6_19>
    1737	bf 87 00 00 00 00 00 00	r7 = r8
    1738	07 07 00 00 10 00 00 00	r7 += 0x10
    1739	bf 71 00 00 00 00 00 00	r1 = r7
    1740	85 10 00 00 d5 18 00 00	call 0x18d5 ; <core::cell::Cell<T>::replace>
    1741	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    1742	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    1743	bf a1 00 00 00 00 00 00	r1 = r10
    1744	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1745	85 10 00 00 41 1b 00 00	call 0x1b41 ; <solana_program::program_pack::Pack::unpack>
    1746	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    1747	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    1748	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1749	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    1750	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1751	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    1752	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1753	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    1754	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    1755	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    1756	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    1757	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    1758	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    1759	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    1760	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    1761	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    1762	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    1763	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    1764	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    1765	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    1766	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    1767	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    1768	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    1769	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    1770	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    1771	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    1772	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    1773	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    1774	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    1775	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    1776	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    1777	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    1778	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    1779	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    1780	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    1781	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    1782	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    1783	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    1784	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    1785	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    1786	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    1787	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    1788	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    1789	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    1790	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1791	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB6_20>
    1792	05 00 1a 00 00 00 00 00	goto +0x1a <LBB6_23>

0000000000003808 <LBB6_20>
    1793	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1794	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    1795	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1796	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    1797	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1798	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    1799	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    1800	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    1801	bf a1 00 00 00 00 00 00	r1 = r10
    1802	07 01 00 00 d8 ff ff ff	r1 += -0x28
    1803	bf a2 00 00 00 00 00 00	r2 = r10
    1804	07 02 00 00 20 ff ff ff	r2 += -0xe0
    1805	85 10 00 00 a2 18 00 00	call 0x18a2 ; <<T as core::convert::From<T>>::from>
    1806	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    1807	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    1808	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    1809	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    1810	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    1811	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    1812	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    1813	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    1814	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1815	07 02 00 00 ff ff ff ff	r2 += -0x1

00000000000038c0 <LBB6_21>
    1816	bf 71 00 00 00 00 00 00	r1 = r7

00000000000038c8 <LBB6_22>
    1817	85 10 00 00 88 18 00 00	call 0x1888 ; <core::cell::Cell<T>::replace>
    1818	05 00 0a ff 00 00 00 00	goto -0xf6 <LBB6_12>

00000000000038d8 <LBB6_23>
    1819	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    1820	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    1821	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    1822	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    1823	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    1824	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    1825	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    1826	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    1827	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    1828	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    1829	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    1830	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    1831	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    1832	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    1833	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    1834	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    1835	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    1836	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    1837	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    1838	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    1839	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    1840	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    1841	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    1842	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    1843	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    1844	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    1845	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    1846	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    1847	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    1848	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    1849	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    1850	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    1851	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    1852	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    1853	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    1854	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    1855	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1856	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    1857	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1858	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    1859	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1860	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    1861	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    1862	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    1863	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1864	07 02 00 00 ff ff ff ff	r2 += -0x1
    1865	bf 71 00 00 00 00 00 00	r1 = r7
    1866	85 10 00 00 57 18 00 00	call 0x1857 ; <core::cell::Cell<T>::replace>
    1867	bf a1 00 00 00 00 00 00	r1 = r10
    1868	07 01 00 00 10 fd ff ff	r1 += -0x2f0
    1869	85 10 00 00 6f 1c 00 00	call 0x1c6f ; <spl_token::state::Account::is_frozen>
    1870	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB6_24>
    1871	05 00 0c 00 00 00 00 00	goto +0xc <LBB6_27>

0000000000003a80 <LBB6_24>
    1872	bf a1 00 00 00 00 00 00	r1 = r10
    1873	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1874	b7 02 00 00 11 00 00 00	r2 = 0x11

0000000000003a98 <LBB6_25>
    1875	85 10 00 00 17 20 00 00	call 0x2017 ; <<T as core::convert::Into<U>>::into>

0000000000003aa0 <LBB6_26>
    1876	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1877	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    1878	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1879	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    1880	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    1881	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    1882	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1883	05 00 c8 fe 00 00 00 00	goto -0x138 <LBB6_11>

0000000000003ae0 <LBB6_27>
    1884	bf a1 00 00 00 00 00 00	r1 = r10
    1885	07 01 00 00 c0 fd ff ff	r1 += -0x240
    1886	85 10 00 00 5e 1c 00 00	call 0x1c5e ; <spl_token::state::Account::is_frozen>
    1887	55 00 f0 ff 00 00 00 00	if r0 != 0x0 goto -0x10 <LBB6_24>
    1888	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    1889	79 a2 c8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x338)
    1890	2d 12 01 00 00 00 00 00	if r2 > r1 goto +0x1 <LBB6_29>
    1891	05 00 04 00 00 00 00 00	goto +0x4 <LBB6_30>

0000000000003b20 <LBB6_29>
    1892	bf a1 00 00 00 00 00 00	r1 = r10
    1893	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1894	b7 02 00 00 01 00 00 00	r2 = 0x1
    1895	05 00 eb ff 00 00 00 00	goto -0x15 <LBB6_25>

0000000000003b40 <LBB6_30>
    1896	bf a1 00 00 00 00 00 00	r1 = r10
    1897	07 01 00 00 10 fd ff ff	r1 += -0x2f0
    1898	bf a3 00 00 00 00 00 00	r3 = r10
    1899	07 03 00 00 c0 fd ff ff	r3 += -0x240
    1900	b7 02 00 00 20 00 00 00	r2 = 0x20
    1901	b7 04 00 00 20 00 00 00	r4 = 0x20
    1902	85 10 00 00 cc 16 00 00	call 0x16cc ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    1903	55 00 16 00 00 00 00 00	if r0 != 0x0 goto +0x16 <LBB6_35>
    1904	15 09 50 00 00 00 00 00	if r9 == 0x0 goto +0x50 <LBB6_40>
    1905	79 93 00 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x0)
    1906	bf a1 00 00 00 00 00 00	r1 = r10
    1907	07 01 00 00 10 fd ff ff	r1 += -0x2f0
    1908	b7 02 00 00 20 00 00 00	r2 = 0x20
    1909	b7 04 00 00 20 00 00 00	r4 = 0x20
    1910	85 10 00 00 c4 16 00 00	call 0x16c4 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    1911	55 00 0e 00 00 00 00 00	if r0 != 0x0 goto +0xe <LBB6_35>
    1912	79 98 10 00 00 00 00 00	r8 = *(u64 *)(r9 + 0x10)
    1913	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    1914	15 01 0f 00 00 00 00 00	if r1 == 0x0 goto +0xf <LBB6_36>
    1915	bf a3 00 00 00 00 00 00	r3 = r10
    1916	07 03 00 00 f8 ff ff ff	r3 += -0x8
    1917	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    1919	b7 02 00 00 10 00 00 00	r2 = 0x10
    1920	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    1922	18 05 00 00 d0 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x249d0 ll
    1924	85 10 00 00 54 2e 00 00	call 0x2e54 ; <core::result::unwrap_failed>
    1925	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000003c30 <LBB6_35>
    1926	bf a1 00 00 00 00 00 00	r1 = r10
    1927	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1928	b7 02 00 00 03 00 00 00	r2 = 0x3
    1929	05 00 c9 ff 00 00 00 00	goto -0x37 <LBB6_25>

0000000000003c50 <LBB6_36>
    1930	bf 87 00 00 00 00 00 00	r7 = r8
    1931	07 07 00 00 10 00 00 00	r7 += 0x10
    1932	bf 71 00 00 00 00 00 00	r1 = r7
    1933	b7 02 00 00 ff ff ff ff	r2 = -0x1
    1934	85 10 00 00 13 18 00 00	call 0x1813 ; <core::cell::Cell<T>::replace>
    1935	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    1936	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    1937	bf a1 00 00 00 00 00 00	r1 = r10
    1938	07 01 00 00 20 ff ff ff	r1 += -0xe0
    1939	85 10 00 00 75 18 00 00	call 0x1875 ; <solana_program::program_pack::Pack::unpack>
    1940	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    1941	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    1942	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    1943	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    1944	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    1945	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    1946	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    1947	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    1948	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    1949	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB6_37>
    1950	05 00 18 00 00 00 00 00	goto +0x18 <LBB6_39>

0000000000003cf8 <LBB6_37>
    1951	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    1952	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    1953	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    1954	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    1955	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    1956	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    1957	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    1958	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1

0000000000003d38 <LBB6_38>
    1959	bf a1 00 00 00 00 00 00	r1 = r10
    1960	07 01 00 00 70 fe ff ff	r1 += -0x190
    1961	bf a2 00 00 00 00 00 00	r2 = r10
    1962	07 02 00 00 20 ff ff ff	r2 += -0xe0
    1963	85 10 00 00 04 18 00 00	call 0x1804 ; <<T as core::convert::From<T>>::from>
    1964	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    1965	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    1966	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    1967	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    1968	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    1969	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    1970	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    1971	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    1972	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1973	07 02 00 00 01 00 00 00	r2 += 0x1
    1974	05 00 61 ff 00 00 00 00	goto -0x9f <LBB6_21>

0000000000003db8 <LBB6_39>
    1975	71 a8 58 ff 00 00 00 00	r8 = *(u8 *)(r10 - 0xa8)
    1976	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    1977	07 02 00 00 01 00 00 00	r2 += 0x1
    1978	bf 71 00 00 00 00 00 00	r1 = r7
    1979	85 10 00 00 e6 17 00 00	call 0x17e6 ; <core::cell::Cell<T>::replace>
    1980	79 a2 d0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x330)
    1981	57 02 00 00 ff 00 00 00	r2 &= 0xff
    1982	bf 81 00 00 00 00 00 00	r1 = r8
    1983	1d 21 01 00 00 00 00 00	if r1 == r2 goto +0x1 <LBB6_40>
    1984	05 00 97 00 00 00 00 00	goto +0x97 <LBB6_65>

0000000000003e08 <LBB6_40>
    1985	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    1986	79 13 00 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x0)
    1987	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    1988	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    1989	b7 02 00 00 20 00 00 00	r2 = 0x20
    1990	b7 04 00 00 20 00 00 00	r4 = 0x20
    1991	85 10 00 00 65 16 00 00	call 0x1665 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    1992	bf 08 00 00 00 00 00 00	r8 = r0
    1993	61 a1 58 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x2a8)
    1994	15 01 4e 00 01 00 00 00	if r1 == 0x1 goto +0x4e <LBB6_55>

0000000000003e58 <LBB6_41>
    1995	bf a1 00 00 00 00 00 00	r1 = r10
    1996	07 01 00 00 f0 fc ff ff	r1 += -0x310
    1997	bf a2 00 00 00 00 00 00	r2 = r10
    1998	07 02 00 00 00 fd ff ff	r2 += -0x300
    1999	85 10 00 00 c6 23 00 00	call 0x23c6 ; <core::slice::iter::Iter<T>::as_slice>
    2000	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    2001	79 a2 f0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x310)
    2002	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    2003	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    2004	bf a5 00 00 00 00 00 00	r5 = r10
    2005	bf a1 00 00 00 00 00 00	r1 = r10
    2006	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2007	bf a3 00 00 00 00 00 00	r3 = r10
    2008	07 03 00 00 30 fd ff ff	r3 += -0x2d0
    2009	79 a2 d8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x328)
    2010	79 a4 b8 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x348)
    2011	85 10 00 00 4f 12 00 00	call 0x124f ; <spl_token::processor::Processor::validate_owner>
    2012	79 a1 24 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdc)
    2013	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2014	79 a1 2c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd4)
    2015	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2016	79 a1 34 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcc)
    2017	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2018	61 a1 3c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xc4)
    2019	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2020	61 a1 20 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe0)
    2021	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB6_42>
    2022	05 00 67 00 00 00 00 00	goto +0x67 <LBB6_64>

0000000000003f38 <LBB6_42>
    2023	55 08 53 01 00 00 00 00	if r8 != 0x0 goto +0x153 <LBB6_80>

0000000000003f40 <LBB6_43>
    2024	79 a3 50 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2b0)
    2025	bf 31 00 00 00 00 00 00	r1 = r3
    2026	79 a5 c8 fc 00 00 00 00	r5 = *(u64 *)(r10 - 0x338)
    2027	1f 51 00 00 00 00 00 00	r1 -= r5
    2028	b7 02 00 00 01 00 00 00	r2 = 0x1
    2029	2d 31 01 00 00 00 00 00	if r1 > r3 goto +0x1 <LBB6_45>
    2030	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000003f78 <LBB6_45>
    2031	57 02 00 00 01 00 00 00	r2 &= 0x1
    2032	55 02 8f 00 00 00 00 00	if r2 != 0x0 goto +0x8f <LBB6_71>
    2033	79 a4 00 fe 00 00 00 00	r4 = *(u64 *)(r10 - 0x200)
    2034	bf 42 00 00 00 00 00 00	r2 = r4
    2035	0f 52 00 00 00 00 00 00	r2 += r5
    2036	b7 03 00 00 01 00 00 00	r3 = 0x1
    2037	2d 24 01 00 00 00 00 00	if r4 > r2 goto +0x1 <LBB6_48>
    2038	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000003fb8 <LBB6_48>
    2039	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    2040	57 03 00 00 01 00 00 00	r3 &= 0x1
    2041	55 03 86 00 00 00 00 00	if r3 != 0x0 goto +0x86 <LBB6_71>
    2042	7b 2a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r2
    2043	bf a1 00 00 00 00 00 00	r1 = r10
    2044	07 01 00 00 10 fd ff ff	r1 += -0x2f0
    2045	85 10 00 00 c4 1b 00 00	call 0x1bc4 ; <spl_token::state::Account::is_native>
    2046	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB6_50>
    2047	05 00 90 00 00 00 00 00	goto +0x90 <LBB6_73>

0000000000004000 <LBB6_50>
    2048	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    2049	85 10 00 00 06 24 00 00	call 0x2406 ; <solana_program::account_info::AccountInfo::lamports>
    2050	bf 09 00 00 00 00 00 00	r9 = r0
    2051	79 a1 c8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x338)
    2052	1f 19 00 00 00 00 00 00	r9 -= r1
    2053	b7 01 00 00 01 00 00 00	r1 = 0x1
    2054	2d 09 01 00 00 00 00 00	if r9 > r0 goto +0x1 <LBB6_52>
    2055	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000004040 <LBB6_52>
    2056	57 01 00 00 01 00 00 00	r1 &= 0x1
    2057	55 01 76 00 00 00 00 00	if r1 != 0x0 goto +0x76 <LBB6_71>
    2058	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    2059	79 18 08 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x8)
    2060	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    2061	15 01 4e 00 00 00 00 00	if r1 == 0x0 goto +0x4e <LBB6_66>
    2062	bf a3 00 00 00 00 00 00	r3 = r10
    2063	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2064	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2066	b7 02 00 00 10 00 00 00	r2 = 0x10
    2067	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2069	18 05 00 00 e8 49 02 00 00 00 00 00 00 00 00 00	r5 = 0x249e8 ll
    2071	85 10 00 00 c1 2d 00 00	call 0x2dc1 ; <core::result::unwrap_failed>
    2072	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000040c8 <LBB6_55>
    2073	79 a1 b8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x348)
    2074	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    2075	bf a7 00 00 00 00 00 00	r7 = r10
    2076	07 07 00 00 5c fd ff ff	r7 += -0x2a4
    2077	b7 02 00 00 20 00 00 00	r2 = 0x20
    2078	bf 73 00 00 00 00 00 00	r3 = r7
    2079	b7 04 00 00 20 00 00 00	r4 = 0x20
    2080	85 10 00 00 0c 16 00 00	call 0x160c ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    2081	15 00 a9 ff 00 00 00 00	if r0 == 0x0 goto -0x57 <LBB6_41>
    2082	bf a1 00 00 00 00 00 00	r1 = r10
    2083	07 01 00 00 e0 fc ff ff	r1 += -0x320
    2084	bf a2 00 00 00 00 00 00	r2 = r10
    2085	07 02 00 00 00 fd ff ff	r2 += -0x300
    2086	85 10 00 00 6f 23 00 00	call 0x236f ; <core::slice::iter::Iter<T>::as_slice>
    2087	79 a1 e8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x318)
    2088	79 a2 e0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x320)
    2089	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    2090	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    2091	bf a5 00 00 00 00 00 00	r5 = r10
    2092	bf a1 00 00 00 00 00 00	r1 = r10
    2093	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2094	79 a2 d8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x328)
    2095	bf 73 00 00 00 00 00 00	r3 = r7
    2096	79 a4 b8 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x348)
    2097	85 10 00 00 f9 11 00 00	call 0x11f9 ; <spl_token::processor::Processor::validate_owner>
    2098	79 a1 24 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdc)
    2099	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2100	79 a1 2c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd4)
    2101	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2102	79 a1 34 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcc)
    2103	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2104	61 a1 3c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xc4)
    2105	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2106	61 a1 20 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe0)
    2107	55 01 12 00 10 00 00 00	if r1 != 0x10 goto +0x12 <LBB6_64>
    2108	79 a2 90 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x270)
    2109	79 a1 c8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x338)
    2110	2d 21 25 ff 00 00 00 00	if r1 > r2 goto -0xdb <LBB6_29>
    2111	55 08 fb 00 00 00 00 00	if r8 != 0x0 goto +0xfb <LBB6_80>
    2112	bf 21 00 00 00 00 00 00	r1 = r2
    2113	79 a3 c8 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x338)
    2114	1f 31 00 00 00 00 00 00	r1 -= r3
    2115	b7 03 00 00 01 00 00 00	r3 = 0x1
    2116	2d 21 01 00 00 00 00 00	if r1 > r2 goto +0x1 <LBB6_61>
    2117	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000004230 <LBB6_61>
    2118	57 03 00 00 01 00 00 00	r3 &= 0x1
    2119	55 03 38 00 00 00 00 00	if r3 != 0x0 goto +0x38 <LBB6_71>
    2120	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    2121	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB6_63>
    2122	05 00 9d ff 00 00 00 00	goto -0x63 <LBB6_43>

0000000000004258 <LBB6_63>
    2123	b7 01 00 00 00 00 00 00	r1 = 0x0
    2124	63 1a 58 fd 00 00 00 00	*(u32 *)(r10 - 0x2a8) = r1
    2125	05 00 9a ff 00 00 00 00	goto -0x66 <LBB6_43>

0000000000004270 <LBB6_64>
    2126	63 1a 20 ff 00 00 00 00	*(u32 *)(r10 - 0xe0) = r1
    2127	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    2128	7b 1a 24 ff 00 00 00 00	*(u64 *)(r10 - 0xdc) = r1
    2129	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    2130	7b 1a 2c ff 00 00 00 00	*(u64 *)(r10 - 0xd4) = r1
    2131	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    2132	7b 1a 34 ff 00 00 00 00	*(u64 *)(r10 - 0xcc) = r1
    2133	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    2134	63 1a 3c ff 00 00 00 00	*(u32 *)(r10 - 0xc4) = r1
    2135	05 00 c0 fd 00 00 00 00	goto -0x240 <LBB6_10>

00000000000042c0 <LBB6_65>
    2136	bf a1 00 00 00 00 00 00	r1 = r10
    2137	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2138	b7 02 00 00 12 00 00 00	r2 = 0x12
    2139	05 00 f7 fe 00 00 00 00	goto -0x109 <LBB6_25>

00000000000042e0 <LBB6_66>
    2140	bf 87 00 00 00 00 00 00	r7 = r8
    2141	07 07 00 00 10 00 00 00	r7 += 0x10
    2142	bf 71 00 00 00 00 00 00	r1 = r7
    2143	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2144	85 10 00 00 41 17 00 00	call 0x1741 ; <core::cell::Cell<T>::replace>
    2145	79 81 18 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x18)
    2146	7b 91 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r9
    2147	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    2148	07 02 00 00 01 00 00 00	r2 += 0x1
    2149	bf 71 00 00 00 00 00 00	r1 = r7
    2150	85 10 00 00 3b 17 00 00	call 0x173b ; <core::cell::Cell<T>::replace>
    2151	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    2152	85 10 00 00 9f 23 00 00	call 0x239f ; <solana_program::account_info::AccountInfo::lamports>
    2153	bf 09 00 00 00 00 00 00	r9 = r0
    2154	79 a1 c8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x338)
    2155	0f 19 00 00 00 00 00 00	r9 += r1
    2156	b7 01 00 00 01 00 00 00	r1 = 0x1
    2157	2d 90 01 00 00 00 00 00	if r0 > r9 goto +0x1 <LBB6_68>
    2158	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000004378 <LBB6_68>
    2159	57 01 00 00 01 00 00 00	r1 &= 0x1
    2160	55 01 0f 00 00 00 00 00	if r1 != 0x0 goto +0xf <LBB6_71>
    2161	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    2162	79 18 08 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x8)
    2163	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    2164	15 01 10 00 00 00 00 00	if r1 == 0x0 goto +0x10 <LBB6_72>
    2165	bf a3 00 00 00 00 00 00	r3 = r10
    2166	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2167	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2169	b7 02 00 00 10 00 00 00	r2 = 0x10
    2170	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2172	18 05 00 00 00 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a00 ll
    2174	85 10 00 00 5a 2d 00 00	call 0x2d5a ; <core::result::unwrap_failed>
    2175	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000004400 <LBB6_71>
    2176	bf a1 00 00 00 00 00 00	r1 = r10
    2177	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2178	b7 02 00 00 0e 00 00 00	r2 = 0xe
    2179	85 10 00 00 41 17 00 00	call 0x1741 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    2180	05 00 cf fe 00 00 00 00	goto -0x131 <LBB6_26>

0000000000004428 <LBB6_72>
    2181	bf 87 00 00 00 00 00 00	r7 = r8
    2182	07 07 00 00 10 00 00 00	r7 += 0x10
    2183	bf 71 00 00 00 00 00 00	r1 = r7
    2184	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2185	85 10 00 00 18 17 00 00	call 0x1718 ; <core::cell::Cell<T>::replace>
    2186	79 81 18 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x18)
    2187	7b 91 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r9
    2188	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    2189	07 02 00 00 01 00 00 00	r2 += 0x1
    2190	bf 71 00 00 00 00 00 00	r1 = r7
    2191	85 10 00 00 12 17 00 00	call 0x1712 ; <core::cell::Cell<T>::replace>

0000000000004480 <LBB6_73>
    2192	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    2193	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    2194	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    2195	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    2196	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    2197	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    2198	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    2199	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    2200	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    2201	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    2202	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    2203	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    2204	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    2205	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    2206	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    2207	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    2208	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    2209	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    2210	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    2211	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    2212	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    2213	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    2214	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    2215	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    2216	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    2217	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    2218	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    2219	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    2220	79 a1 48 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b8)
    2221	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    2222	79 a1 40 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c0)
    2223	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    2224	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    2225	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    2226	79 a1 30 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d0)
    2227	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    2228	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    2229	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    2230	79 a1 20 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e0)
    2231	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    2232	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    2233	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    2234	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    2235	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    2236	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    2237	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
    2238	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    2239	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB6_75>
    2240	bf a3 00 00 00 00 00 00	r3 = r10
    2241	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2242	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2244	b7 02 00 00 10 00 00 00	r2 = 0x10
    2245	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2247	18 05 00 00 18 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a18 ll
    2249	85 10 00 00 0f 2d 00 00	call 0x2d0f ; <core::result::unwrap_failed>
    2250	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000004658 <LBB6_75>
    2251	bf 87 00 00 00 00 00 00	r7 = r8
    2252	07 07 00 00 10 00 00 00	r7 += 0x10
    2253	bf 71 00 00 00 00 00 00	r1 = r7
    2254	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2255	85 10 00 00 d2 16 00 00	call 0x16d2 ; <core::cell::Cell<T>::replace>
    2256	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    2257	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    2258	bf a1 00 00 00 00 00 00	r1 = r10
    2259	07 01 00 00 70 fe ff ff	r1 += -0x190
    2260	bf a2 00 00 00 00 00 00	r2 = r10
    2261	07 02 00 00 20 ff ff ff	r2 += -0xe0
    2262	85 10 00 00 14 17 00 00	call 0x1714 ; <solana_program::program_pack::Pack::pack>
    2263	79 a1 74 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x18c)
    2264	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2265	79 a1 7c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x184)
    2266	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2267	79 a1 84 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17c)
    2268	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2269	61 a1 8c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x174)
    2270	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2271	61 a1 70 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x190)
    2272	55 01 5d 00 10 00 00 00	if r1 != 0x10 goto +0x5d <LBB6_81>
    2273	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    2274	07 02 00 00 01 00 00 00	r2 += 0x1
    2275	bf 71 00 00 00 00 00 00	r1 = r7
    2276	85 10 00 00 bd 16 00 00	call 0x16bd ; <core::cell::Cell<T>::replace>
    2277	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2278	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    2279	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2280	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    2281	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2282	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    2283	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2284	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    2285	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    2286	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    2287	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    2288	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    2289	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    2290	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    2291	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    2292	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    2293	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    2294	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    2295	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    2296	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    2297	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    2298	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    2299	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    2300	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    2301	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    2302	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    2303	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    2304	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    2305	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    2306	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    2307	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    2308	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    2309	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    2310	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    2311	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    2312	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    2313	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    2314	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    2315	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    2316	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    2317	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    2318	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    2319	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    2320	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    2321	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    2322	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
    2323	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    2324	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB6_78>
    2325	bf a3 00 00 00 00 00 00	r3 = r10
    2326	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2327	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2329	b7 02 00 00 10 00 00 00	r2 = 0x10
    2330	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2332	18 05 00 00 30 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a30 ll
    2334	85 10 00 00 ba 2c 00 00	call 0x2cba ; <core::result::unwrap_failed>
    2335	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000004900 <LBB6_78>
    2336	bf 87 00 00 00 00 00 00	r7 = r8
    2337	07 07 00 00 10 00 00 00	r7 += 0x10
    2338	bf 71 00 00 00 00 00 00	r1 = r7
    2339	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2340	85 10 00 00 7d 16 00 00	call 0x167d ; <core::cell::Cell<T>::replace>
    2341	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    2342	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    2343	bf a1 00 00 00 00 00 00	r1 = r10
    2344	07 01 00 00 70 fe ff ff	r1 += -0x190
    2345	bf a2 00 00 00 00 00 00	r2 = r10
    2346	07 02 00 00 20 ff ff ff	r2 += -0xe0
    2347	85 10 00 00 bf 16 00 00	call 0x16bf ; <solana_program::program_pack::Pack::pack>
    2348	79 a1 74 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x18c)
    2349	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2350	79 a1 7c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x184)
    2351	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2352	79 a1 84 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17c)
    2353	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2354	61 a1 8c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x174)
    2355	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2356	61 a1 70 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x190)
    2357	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB6_79>
    2358	05 00 07 00 00 00 00 00	goto +0x7 <LBB6_81>

00000000000049b8 <LBB6_79>
    2359	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    2360	07 02 00 00 01 00 00 00	r2 += 0x1
    2361	bf 71 00 00 00 00 00 00	r1 = r7
    2362	85 10 00 00 67 16 00 00	call 0x1667 ; <core::cell::Cell<T>::replace>

00000000000049d8 <LBB6_80>
    2363	b7 01 00 00 10 00 00 00	r1 = 0x10
    2364	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    2365	05 00 e7 fc 00 00 00 00	goto -0x319 <LBB6_12>

00000000000049f0 <LBB6_81>
    2366	63 1a 20 ff 00 00 00 00	*(u32 *)(r10 - 0xe0) = r1
    2367	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    2368	7b 1a 24 ff 00 00 00 00	*(u64 *)(r10 - 0xdc) = r1
    2369	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    2370	7b 1a 2c ff 00 00 00 00	*(u64 *)(r10 - 0xd4) = r1
    2371	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    2372	7b 1a 34 ff 00 00 00 00	*(u64 *)(r10 - 0xcc) = r1
    2373	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    2374	63 1a 3c ff 00 00 00 00	*(u32 *)(r10 - 0xc4) = r1
    2375	05 00 5f fe 00 00 00 00	goto -0x1a1 <LBB6_38>

0000000000004a40 <spl_token::processor::Processor::process_approve>
    2376	bf 58 00 00 00 00 00 00	r8 = r5
    2377	bf 29 00 00 00 00 00 00	r9 = r2
    2378	bf 16 00 00 00 00 00 00	r6 = r1
    2379	7b 3a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r3
    2380	27 04 00 00 30 00 00 00	r4 *= 0x30
    2381	0f 43 00 00 00 00 00 00	r3 += r4
    2382	7b 3a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r3
    2383	bf a1 00 00 00 00 00 00	r1 = r10
    2384	07 01 00 00 00 ff ff ff	r1 += -0x100
    2385	bf a2 00 00 00 00 00 00	r2 = r10
    2386	07 02 00 00 90 fd ff ff	r2 += -0x270
    2387	85 10 00 00 0f 20 00 00	call 0x200f ; <solana_program::account_info::next_account_info>
    2388	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2389	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2390	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2391	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2392	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2393	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2394	79 a7 08 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0xf8)
    2395	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2396	15 01 45 00 01 00 00 00	if r1 == 0x1 goto +0x45 <LBB7_2>
    2397	7b 9a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r9
    2398	79 81 10 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff0)
    2399	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    2400	79 81 08 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff8)
    2401	79 89 00 f0 00 00 00 00	r9 = *(u64 *)(r8 - 0x1000)
    2402	b7 08 00 00 00 00 00 00	r8 = 0x0
    2403	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB7_4>
    2404	05 00 0e 00 00 00 00 00	goto +0xe <LBB7_5>

0000000000004b28 <LBB7_4>
    2405	bf a1 00 00 00 00 00 00	r1 = r10
    2406	07 01 00 00 00 ff ff ff	r1 += -0x100
    2407	bf a2 00 00 00 00 00 00	r2 = r10
    2408	07 02 00 00 90 fd ff ff	r2 += -0x270
    2409	85 10 00 00 f9 1f 00 00	call 0x1ff9 ; <solana_program::account_info::next_account_info>
    2410	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2411	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2412	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2413	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2414	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2415	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2416	79 a8 08 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0xf8)
    2417	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2418	15 01 33 00 01 00 00 00	if r1 == 0x1 goto +0x33 <LBB7_32>

0000000000004b98 <LBB7_5>
    2419	bf a1 00 00 00 00 00 00	r1 = r10
    2420	07 01 00 00 00 ff ff ff	r1 += -0x100
    2421	bf a2 00 00 00 00 00 00	r2 = r10
    2422	07 02 00 00 90 fd ff ff	r2 += -0x270
    2423	85 10 00 00 eb 1f 00 00	call 0x1feb ; <solana_program::account_info::next_account_info>
    2424	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2425	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2426	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2427	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2428	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2429	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2430	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    2431	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2432	15 01 23 00 01 00 00 00	if r1 == 0x1 goto +0x23 <LBB7_10>
    2433	7b 2a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r2
    2434	bf a1 00 00 00 00 00 00	r1 = r10
    2435	07 01 00 00 00 ff ff ff	r1 += -0x100
    2436	bf a2 00 00 00 00 00 00	r2 = r10
    2437	07 02 00 00 90 fd ff ff	r2 += -0x270
    2438	85 10 00 00 dc 1f 00 00	call 0x1fdc ; <solana_program::account_info::next_account_info>
    2439	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2440	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2441	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2442	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2443	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2444	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2445	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    2446	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2447	15 01 14 00 01 00 00 00	if r1 == 0x1 goto +0x14 <LBB7_10>
    2448	7b 2a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r2
    2449	7b 9a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r9
    2450	7b 6a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r6
    2451	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
    2452	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    2453	07 02 00 00 01 00 00 00	r2 += 0x1
    2454	65 02 1b 00 00 00 00 00	if r2 s> 0x0 goto +0x1b <LBB7_9>
    2455	bf a3 00 00 00 00 00 00	r3 = r10
    2456	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2457	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    2459	b7 02 00 00 18 00 00 00	r2 = 0x18
    2460	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    2462	18 05 00 00 48 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a48 ll
    2464	85 10 00 00 38 2c 00 00	call 0x2c38 ; <core::result::unwrap_failed>
    2465	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000004d10 <LBB7_2>
    2466	7b 7a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r7
    2467	05 00 03 00 00 00 00 00	goto +0x3 <LBB7_3>

0000000000004d20 <LBB7_10>
    2468	7b 2a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r2
    2469	05 00 01 00 00 00 00 00	goto +0x1 <LBB7_3>

0000000000004d30 <LBB7_32>
    2470	7b 8a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r8

0000000000004d38 <LBB7_3>
    2471	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2472	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    2473	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2474	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    2475	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2476	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    2477	bf a2 00 00 00 00 00 00	r2 = r10
    2478	07 02 00 00 00 ff ff ff	r2 += -0x100
    2479	bf 61 00 00 00 00 00 00	r1 = r6
    2480	85 10 00 00 ff 15 00 00	call 0x15ff ; <<T as core::convert::From<T>>::from>

0000000000004d88 <LBB7_31>
    2481	95 00 00 00 00 00 00 00	exit

0000000000004d90 <LBB7_9>
    2482	bf 96 00 00 00 00 00 00	r6 = r9
    2483	07 06 00 00 10 00 00 00	r6 += 0x10
    2484	bf 61 00 00 00 00 00 00	r1 = r6
    2485	85 10 00 00 ec 15 00 00	call 0x15ec ; <core::cell::Cell<T>::replace>
    2486	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    2487	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    2488	bf a1 00 00 00 00 00 00	r1 = r10
    2489	07 01 00 00 00 ff ff ff	r1 += -0x100
    2490	85 10 00 00 58 18 00 00	call 0x1858 ; <solana_program::program_pack::Pack::unpack>
    2491	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    2492	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2493	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2494	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2495	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2496	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2497	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2498	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    2499	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    2500	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    2501	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    2502	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    2503	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    2504	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    2505	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    2506	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    2507	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    2508	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    2509	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    2510	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    2511	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    2512	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    2513	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    2514	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    2515	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    2516	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    2517	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    2518	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    2519	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    2520	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    2521	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    2522	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    2523	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    2524	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    2525	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    2526	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    2527	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    2528	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    2529	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    2530	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    2531	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    2532	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    2533	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    2534	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    2535	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2536	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB7_12>
    2537	05 00 11 00 00 00 00 00	goto +0x11 <LBB7_11>

0000000000004f50 <LBB7_12>
    2538	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2539	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    2540	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2541	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    2542	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2543	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    2544	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2545	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    2546	bf a2 00 00 00 00 00 00	r2 = r10
    2547	07 02 00 00 00 ff ff ff	r2 += -0x100
    2548	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    2549	85 10 00 00 ba 15 00 00	call 0x15ba ; <<T as core::convert::From<T>>::from>
    2550	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
    2551	07 02 00 00 ff ff ff ff	r2 += -0x1
    2552	bf 61 00 00 00 00 00 00	r1 = r6

0000000000004fc8 <LBB7_30>
    2553	85 10 00 00 a8 15 00 00	call 0x15a8 ; <core::cell::Cell<T>::replace>
    2554	05 00 b6 ff 00 00 00 00	goto -0x4a <LBB7_31>

0000000000004fd8 <LBB7_11>
    2555	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    2556	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    2557	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    2558	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    2559	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    2560	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    2561	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    2562	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    2563	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    2564	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    2565	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    2566	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    2567	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    2568	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    2569	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    2570	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    2571	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    2572	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    2573	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    2574	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    2575	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    2576	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    2577	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    2578	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    2579	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    2580	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    2581	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    2582	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    2583	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    2584	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    2585	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    2586	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    2587	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    2588	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    2589	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    2590	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    2591	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2592	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    2593	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2594	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    2595	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2596	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    2597	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2598	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    2599	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
    2600	07 02 00 00 ff ff ff ff	r2 += -0x1
    2601	bf 61 00 00 00 00 00 00	r1 = r6
    2602	85 10 00 00 77 15 00 00	call 0x1577 ; <core::cell::Cell<T>::replace>
    2603	bf a1 00 00 00 00 00 00	r1 = r10
    2604	07 01 00 00 a0 fd ff ff	r1 += -0x260
    2605	85 10 00 00 8f 19 00 00	call 0x198f ; <spl_token::state::Account::is_frozen>
    2606	79 a9 68 fd 00 00 00 00	r9 = *(u64 *)(r10 - 0x298)
    2607	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB7_14>
    2608	05 00 04 00 00 00 00 00	goto +0x4 <LBB7_13>

0000000000005188 <LBB7_14>
    2609	bf 91 00 00 00 00 00 00	r1 = r9
    2610	b7 02 00 00 11 00 00 00	r2 = 0x11
    2611	85 10 00 00 37 1d 00 00	call 0x1d37 ; <<T as core::convert::Into<U>>::into>
    2612	05 00 7c ff 00 00 00 00	goto -0x84 <LBB7_31>

00000000000051a8 <LBB7_13>
    2613	15 08 49 00 00 00 00 00	if r8 == 0x0 goto +0x49 <LBB7_23>
    2614	79 83 00 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x0)
    2615	bf a1 00 00 00 00 00 00	r1 = r10
    2616	07 01 00 00 a0 fd ff ff	r1 += -0x260
    2617	b7 02 00 00 20 00 00 00	r2 = 0x20
    2618	b7 04 00 00 20 00 00 00	r4 = 0x20
    2619	85 10 00 00 ff 13 00 00	call 0x13ff ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    2620	55 00 0e 00 00 00 00 00	if r0 != 0x0 goto +0xe <LBB7_19>
    2621	79 86 10 00 00 00 00 00	r6 = *(u64 *)(r8 + 0x10)
    2622	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    2623	15 01 0f 00 00 00 00 00	if r1 == 0x0 goto +0xf <LBB7_18>
    2624	bf a3 00 00 00 00 00 00	r3 = r10
    2625	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2626	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2628	b7 02 00 00 10 00 00 00	r2 = 0x10
    2629	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2631	18 05 00 00 60 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a60 ll
    2633	85 10 00 00 8f 2b 00 00	call 0x2b8f ; <core::result::unwrap_failed>
    2634	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000005258 <LBB7_19>
    2635	bf 91 00 00 00 00 00 00	r1 = r9
    2636	b7 02 00 00 03 00 00 00	r2 = 0x3
    2637	85 10 00 00 1d 1d 00 00	call 0x1d1d ; <<T as core::convert::Into<U>>::into>
    2638	05 00 62 ff 00 00 00 00	goto -0x9e <LBB7_31>

0000000000005278 <LBB7_18>
    2639	bf 69 00 00 00 00 00 00	r9 = r6
    2640	07 09 00 00 10 00 00 00	r9 += 0x10
    2641	bf 91 00 00 00 00 00 00	r1 = r9
    2642	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2643	85 10 00 00 4e 15 00 00	call 0x154e ; <core::cell::Cell<T>::replace>
    2644	79 62 18 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x18)
    2645	79 63 20 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x20)
    2646	bf a1 00 00 00 00 00 00	r1 = r10
    2647	07 01 00 00 00 ff ff ff	r1 += -0x100
    2648	85 10 00 00 b0 15 00 00	call 0x15b0 ; <solana_program::program_pack::Pack::unpack>
    2649	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    2650	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2651	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2652	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2653	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2654	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2655	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2656	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    2657	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2658	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB7_21>
    2659	05 00 10 00 00 00 00 00	goto +0x10 <LBB7_20>

0000000000005320 <LBB7_21>
    2660	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2661	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    2662	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2663	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    2664	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2665	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    2666	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2667	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    2668	bf a2 00 00 00 00 00 00	r2 = r10
    2669	07 02 00 00 00 ff ff ff	r2 += -0x100
    2670	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    2671	85 10 00 00 40 15 00 00	call 0x1540 ; <<T as core::convert::From<T>>::from>
    2672	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    2673	07 02 00 00 01 00 00 00	r2 += 0x1
    2674	bf 91 00 00 00 00 00 00	r1 = r9
    2675	05 00 85 ff 00 00 00 00	goto -0x7b <LBB7_30>

00000000000053a0 <LBB7_20>
    2676	71 a6 38 ff 00 00 00 00	r6 = *(u8 *)(r10 - 0xc8)
    2677	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    2678	07 02 00 00 01 00 00 00	r2 += 0x1
    2679	bf 91 00 00 00 00 00 00	r1 = r9
    2680	85 10 00 00 29 15 00 00	call 0x1529 ; <core::cell::Cell<T>::replace>
    2681	79 a2 70 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x290)
    2682	57 02 00 00 ff 00 00 00	r2 &= 0xff
    2683	bf 61 00 00 00 00 00 00	r1 = r6
    2684	79 a9 68 fd 00 00 00 00	r9 = *(u64 *)(r10 - 0x298)
    2685	1d 21 01 00 00 00 00 00	if r1 == r2 goto +0x1 <LBB7_23>
    2686	05 00 b1 00 00 00 00 00	goto +0xb1 <LBB7_22>

00000000000053f8 <LBB7_23>
    2687	bf a1 00 00 00 00 00 00	r1 = r10
    2688	07 01 00 00 80 fd ff ff	r1 += -0x280
    2689	bf a2 00 00 00 00 00 00	r2 = r10
    2690	07 02 00 00 90 fd ff ff	r2 += -0x270
    2691	85 10 00 00 12 21 00 00	call 0x2112 ; <core::slice::iter::Iter<T>::as_slice>
    2692	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    2693	79 a2 80 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x280)
    2694	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    2695	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    2696	bf a5 00 00 00 00 00 00	r5 = r10
    2697	bf a1 00 00 00 00 00 00	r1 = r10
    2698	07 01 00 00 00 ff ff ff	r1 += -0x100
    2699	bf a3 00 00 00 00 00 00	r3 = r10
    2700	07 03 00 00 c0 fd ff ff	r3 += -0x240
    2701	79 a2 78 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x288)
    2702	79 a4 58 fd 00 00 00 00	r4 = *(u64 *)(r10 - 0x2a8)
    2703	85 10 00 00 9b 0f 00 00	call 0xf9b ; <spl_token::processor::Processor::validate_owner>
    2704	79 a1 04 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xfc)
    2705	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2706	79 a1 0c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf4)
    2707	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2708	79 a1 14 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xec)
    2709	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2710	61 a1 1c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe4)
    2711	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2712	61 a1 00 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x100)
    2713	55 01 47 00 10 00 00 00	if r1 != 0x10 goto +0x47 <LBB7_27>
    2714	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    2715	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    2716	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
    2717	79 13 10 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x10)
    2718	79 14 08 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x8)
    2719	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    2720	b7 05 00 00 01 00 00 00	r5 = 0x1
    2721	63 5a e8 fd 00 00 00 00	*(u32 *)(r10 - 0x218) = r5
    2722	7b 1a ec fd 00 00 00 00	*(u64 *)(r10 - 0x214) = r1
    2723	7b 4a f4 fd 00 00 00 00	*(u64 *)(r10 - 0x20c) = r4
    2724	7b 3a fc fd 00 00 00 00	*(u64 *)(r10 - 0x204) = r3
    2725	7b 2a 04 fe 00 00 00 00	*(u64 *)(r10 - 0x1fc) = r2
    2726	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    2727	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    2728	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    2729	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    2730	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    2731	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    2732	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    2733	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    2734	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    2735	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    2736	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    2737	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    2738	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    2739	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    2740	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    2741	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    2742	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    2743	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    2744	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    2745	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    2746	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    2747	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    2748	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    2749	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    2750	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    2751	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    2752	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    2753	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    2754	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    2755	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    2756	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    2757	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    2758	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    2759	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    2760	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    2761	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    2762	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    2763	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    2764	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    2765	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    2766	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    2767	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    2768	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    2769	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    2770	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    2771	79 76 10 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x10)
    2772	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    2773	15 01 22 00 00 00 00 00	if r1 == 0x0 goto +0x22 <LBB7_26>
    2774	bf a3 00 00 00 00 00 00	r3 = r10
    2775	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2776	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    2778	b7 02 00 00 10 00 00 00	r2 = 0x10
    2779	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    2781	18 05 00 00 78 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a78 ll
    2783	85 10 00 00 f9 2a 00 00	call 0x2af9 ; <core::result::unwrap_failed>
    2784	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000005708 <LBB7_27>
    2785	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    2786	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    2787	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    2788	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    2789	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    2790	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    2791	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    2792	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    2793	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    2794	bf a1 00 00 00 00 00 00	r1 = r10
    2795	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    2796	bf a2 00 00 00 00 00 00	r2 = r10
    2797	07 02 00 00 00 ff ff ff	r2 += -0x100
    2798	85 10 00 00 c1 14 00 00	call 0x14c1 ; <<T as core::convert::From<T>>::from>
    2799	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2800	7b 19 18 00 00 00 00 00	*(u64 *)(r9 + 0x18) = r1
    2801	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2802	7b 19 10 00 00 00 00 00	*(u64 *)(r9 + 0x10) = r1
    2803	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2804	7b 19 08 00 00 00 00 00	*(u64 *)(r9 + 0x8) = r1
    2805	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2806	7b 19 00 00 00 00 00 00	*(u64 *)(r9 + 0x0) = r1
    2807	05 00 b9 fe 00 00 00 00	goto -0x147 <LBB7_31>

00000000000057c0 <LBB7_26>
    2808	bf 67 00 00 00 00 00 00	r7 = r6
    2809	07 07 00 00 10 00 00 00	r7 += 0x10
    2810	bf 71 00 00 00 00 00 00	r1 = r7
    2811	b7 02 00 00 ff ff ff ff	r2 = -0x1
    2812	85 10 00 00 a5 14 00 00	call 0x14a5 ; <core::cell::Cell<T>::replace>
    2813	79 63 18 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x18)
    2814	79 64 20 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x20)
    2815	bf a1 00 00 00 00 00 00	r1 = r10
    2816	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    2817	bf a2 00 00 00 00 00 00	r2 = r10
    2818	07 02 00 00 00 ff ff ff	r2 += -0x100
    2819	85 10 00 00 e7 14 00 00	call 0x14e7 ; <solana_program::program_pack::Pack::pack>
    2820	79 a1 54 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ac)
    2821	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    2822	79 a1 5c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a4)
    2823	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    2824	79 a1 64 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x19c)
    2825	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    2826	61 a1 6c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x194)
    2827	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    2828	61 a1 50 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1b0)
    2829	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB7_28>
    2830	05 00 07 00 00 00 00 00	goto +0x7 <LBB7_29>

0000000000005878 <LBB7_28>
    2831	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    2832	07 02 00 00 01 00 00 00	r2 += 0x1
    2833	bf 71 00 00 00 00 00 00	r1 = r7
    2834	85 10 00 00 8f 14 00 00	call 0x148f ; <core::cell::Cell<T>::replace>
    2835	b7 01 00 00 10 00 00 00	r1 = 0x10
    2836	63 19 00 00 00 00 00 00	*(u32 *)(r9 + 0x0) = r1
    2837	05 00 9b fe 00 00 00 00	goto -0x165 <LBB7_31>

00000000000058b0 <LBB7_29>
    2838	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    2839	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    2840	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    2841	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    2842	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    2843	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    2844	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    2845	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    2846	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    2847	bf a1 00 00 00 00 00 00	r1 = r10
    2848	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    2849	bf a2 00 00 00 00 00 00	r2 = r10
    2850	07 02 00 00 00 ff ff ff	r2 += -0x100
    2851	85 10 00 00 8c 14 00 00	call 0x148c ; <<T as core::convert::From<T>>::from>
    2852	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    2853	7b 19 18 00 00 00 00 00	*(u64 *)(r9 + 0x18) = r1
    2854	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    2855	7b 19 10 00 00 00 00 00	*(u64 *)(r9 + 0x10) = r1
    2856	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    2857	7b 19 08 00 00 00 00 00	*(u64 *)(r9 + 0x8) = r1
    2858	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    2859	7b 19 00 00 00 00 00 00	*(u64 *)(r9 + 0x0) = r1
    2860	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    2861	07 02 00 00 01 00 00 00	r2 += 0x1
    2862	bf 71 00 00 00 00 00 00	r1 = r7
    2863	05 00 c9 fe 00 00 00 00	goto -0x137 <LBB7_30>

0000000000005980 <LBB7_22>
    2864	bf 91 00 00 00 00 00 00	r1 = r9
    2865	b7 02 00 00 12 00 00 00	r2 = 0x12
    2866	85 10 00 00 38 1c 00 00	call 0x1c38 ; <<T as core::convert::Into<U>>::into>
    2867	05 00 7d fe 00 00 00 00	goto -0x183 <LBB7_31>

00000000000059a0 <spl_token::processor::Processor::process_revoke>
    2868	bf 27 00 00 00 00 00 00	r7 = r2
    2869	bf 16 00 00 00 00 00 00	r6 = r1
    2870	7b 3a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r3
    2871	27 04 00 00 30 00 00 00	r4 *= 0x30
    2872	0f 43 00 00 00 00 00 00	r3 += r4
    2873	7b 3a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r3
    2874	bf a1 00 00 00 00 00 00	r1 = r10
    2875	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2876	bf a2 00 00 00 00 00 00	r2 = r10
    2877	07 02 00 00 b0 fd ff ff	r2 += -0x250
    2878	85 10 00 00 24 1e 00 00	call 0x1e24 ; <solana_program::account_info::next_account_info>
    2879	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    2880	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    2881	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    2882	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    2883	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    2884	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    2885	79 a9 28 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0xd8)
    2886	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2887	15 01 10 00 01 00 00 00	if r1 == 0x1 goto +0x10 <LBB8_4>
    2888	7b 7a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r7
    2889	79 98 10 00 00 00 00 00	r8 = *(u64 *)(r9 + 0x10)
    2890	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    2891	07 02 00 00 01 00 00 00	r2 += 0x1
    2892	65 02 17 00 00 00 00 00	if r2 s> 0x0 goto +0x17 <LBB8_3>
    2893	bf a3 00 00 00 00 00 00	r3 = r10
    2894	07 03 00 00 f8 ff ff ff	r3 += -0x8
    2895	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    2897	b7 02 00 00 18 00 00 00	r2 = 0x18
    2898	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    2900	18 05 00 00 90 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24a90 ll
    2902	85 10 00 00 82 2a 00 00	call 0x2a82 ; <core::result::unwrap_failed>
    2903	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000005ac0 <LBB8_4>
    2904	7b 9a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r9

0000000000005ac8 <LBB8_9>
    2905	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    2906	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    2907	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    2908	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    2909	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    2910	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1

0000000000005af8 <LBB8_10>
    2911	bf a2 00 00 00 00 00 00	r2 = r10
    2912	07 02 00 00 20 ff ff ff	r2 += -0xe0
    2913	bf 61 00 00 00 00 00 00	r1 = r6
    2914	85 10 00 00 4d 14 00 00	call 0x144d ; <<T as core::convert::From<T>>::from>
    2915	05 00 48 00 00 00 00 00	goto +0x48 <LBB8_20>

0000000000005b20 <LBB8_3>
    2916	bf 87 00 00 00 00 00 00	r7 = r8
    2917	07 07 00 00 10 00 00 00	r7 += 0x10
    2918	bf 71 00 00 00 00 00 00	r1 = r7
    2919	85 10 00 00 3a 14 00 00	call 0x143a ; <core::cell::Cell<T>::replace>
    2920	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    2921	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    2922	bf a1 00 00 00 00 00 00	r1 = r10
    2923	07 01 00 00 20 ff ff ff	r1 += -0xe0
    2924	85 10 00 00 a6 16 00 00	call 0x16a6 ; <solana_program::program_pack::Pack::unpack>
    2925	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    2926	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    2927	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    2928	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    2929	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    2930	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    2931	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    2932	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    2933	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    2934	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    2935	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    2936	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    2937	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    2938	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    2939	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    2940	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    2941	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    2942	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    2943	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    2944	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    2945	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    2946	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    2947	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    2948	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    2949	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    2950	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    2951	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    2952	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    2953	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    2954	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    2955	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    2956	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    2957	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    2958	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    2959	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    2960	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    2961	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    2962	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    2963	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    2964	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    2965	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    2966	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    2967	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    2968	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    2969	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    2970	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB8_6>
    2971	05 00 11 00 00 00 00 00	goto +0x11 <LBB8_5>

0000000000005ce0 <LBB8_6>
    2972	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    2973	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    2974	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    2975	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    2976	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    2977	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    2978	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    2979	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    2980	bf a2 00 00 00 00 00 00	r2 = r10
    2981	07 02 00 00 20 ff ff ff	r2 += -0xe0
    2982	bf 61 00 00 00 00 00 00	r1 = r6
    2983	85 10 00 00 08 14 00 00	call 0x1408 ; <<T as core::convert::From<T>>::from>
    2984	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    2985	07 02 00 00 ff ff ff ff	r2 += -0x1

0000000000005d50 <LBB8_19>
    2986	bf 71 00 00 00 00 00 00	r1 = r7
    2987	85 10 00 00 f6 13 00 00	call 0x13f6 ; <core::cell::Cell<T>::replace>

0000000000005d60 <LBB8_20>
    2988	95 00 00 00 00 00 00 00	exit

0000000000005d68 <LBB8_5>
    2989	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    2990	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    2991	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    2992	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    2993	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    2994	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    2995	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    2996	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    2997	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    2998	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    2999	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    3000	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    3001	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    3002	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    3003	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    3004	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    3005	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    3006	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    3007	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    3008	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    3009	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3010	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3011	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3012	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3013	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3014	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3015	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3016	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3017	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    3018	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    3019	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    3020	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    3021	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    3022	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    3023	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    3024	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    3025	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    3026	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    3027	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    3028	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    3029	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    3030	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    3031	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    3032	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    3033	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    3034	07 02 00 00 ff ff ff ff	r2 += -0x1
    3035	bf 71 00 00 00 00 00 00	r1 = r7
    3036	85 10 00 00 c5 13 00 00	call 0x13c5 ; <core::cell::Cell<T>::replace>
    3037	bf a1 00 00 00 00 00 00	r1 = r10
    3038	07 01 00 00 20 ff ff ff	r1 += -0xe0
    3039	bf a2 00 00 00 00 00 00	r2 = r10
    3040	07 02 00 00 b0 fd ff ff	r2 += -0x250
    3041	85 10 00 00 81 1d 00 00	call 0x1d81 ; <solana_program::account_info::next_account_info>
    3042	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    3043	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    3044	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    3045	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    3046	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    3047	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    3048	79 a8 28 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0xd8)
    3049	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    3050	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB8_8>
    3051	05 00 02 00 00 00 00 00	goto +0x2 <LBB8_7>

0000000000005f60 <LBB8_8>
    3052	7b 8a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r8
    3053	05 00 6b ff 00 00 00 00	goto -0x95 <LBB8_9>

0000000000005f70 <LBB8_7>
    3054	bf a1 00 00 00 00 00 00	r1 = r10
    3055	07 01 00 00 c0 fd ff ff	r1 += -0x240
    3056	85 10 00 00 cc 17 00 00	call 0x17cc ; <spl_token::state::Account::is_frozen>
    3057	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB8_12>
    3058	05 00 04 00 00 00 00 00	goto +0x4 <LBB8_11>

0000000000005f98 <LBB8_12>
    3059	bf 61 00 00 00 00 00 00	r1 = r6
    3060	b7 02 00 00 11 00 00 00	r2 = 0x11
    3061	85 10 00 00 75 1b 00 00	call 0x1b75 ; <<T as core::convert::Into<U>>::into>
    3062	05 00 b5 ff 00 00 00 00	goto -0x4b <LBB8_20>

0000000000005fb8 <LBB8_11>
    3063	bf a1 00 00 00 00 00 00	r1 = r10
    3064	07 01 00 00 a0 fd ff ff	r1 += -0x260
    3065	bf a2 00 00 00 00 00 00	r2 = r10
    3066	07 02 00 00 b0 fd ff ff	r2 += -0x250
    3067	85 10 00 00 9a 1f 00 00	call 0x1f9a ; <core::slice::iter::Iter<T>::as_slice>
    3068	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    3069	79 a2 a0 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x260)
    3070	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    3071	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    3072	bf a5 00 00 00 00 00 00	r5 = r10
    3073	bf a1 00 00 00 00 00 00	r1 = r10
    3074	07 01 00 00 20 ff ff ff	r1 += -0xe0
    3075	bf a3 00 00 00 00 00 00	r3 = r10
    3076	07 03 00 00 e0 fd ff ff	r3 += -0x220
    3077	79 a2 98 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x268)
    3078	bf 84 00 00 00 00 00 00	r4 = r8
    3079	85 10 00 00 23 0e 00 00	call 0xe23 ; <spl_token::processor::Processor::validate_owner>
    3080	79 a1 24 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdc)
    3081	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    3082	79 a1 2c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd4)
    3083	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    3084	79 a1 34 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcc)
    3085	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    3086	61 a1 3c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xc4)
    3087	63 1a 88 fe 00 00 00 00	*(u32 *)(r10 - 0x178) = r1
    3088	61 a1 20 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe0)
    3089	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB8_13>
    3090	05 00 3c 00 00 00 00 00	goto +0x3c <LBB8_16>

0000000000006098 <LBB8_13>
    3091	b7 01 00 00 00 00 00 00	r1 = 0x0
    3092	63 1a 08 fe 00 00 00 00	*(u32 *)(r10 - 0x1f8) = r1
    3093	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    3094	79 a2 68 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x198)
    3095	7b 2a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r2
    3096	79 a2 60 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x1a0)
    3097	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r2
    3098	79 a2 58 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x1a8)
    3099	7b 2a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r2
    3100	79 a2 50 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x1b0)
    3101	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r2
    3102	79 a2 48 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x1b8)
    3103	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
    3104	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    3105	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    3106	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    3107	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    3108	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    3109	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    3110	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    3111	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    3112	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    3113	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3114	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    3115	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3116	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    3117	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3118	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    3119	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    3120	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    3121	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    3122	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    3123	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    3124	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    3125	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    3126	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    3127	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    3128	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    3129	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    3130	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    3131	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    3132	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    3133	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    3134	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    3135	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    3136	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    3137	79 98 10 00 00 00 00 00	r8 = *(u64 *)(r9 + 0x10)
    3138	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    3139	15 01 15 00 00 00 00 00	if r1 == 0x0 goto +0x15 <LBB8_15>
    3140	bf a3 00 00 00 00 00 00	r3 = r10
    3141	07 03 00 00 f8 ff ff ff	r3 += -0x8
    3142	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    3144	b7 02 00 00 10 00 00 00	r2 = 0x10
    3145	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    3147	18 05 00 00 a8 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24aa8 ll
    3149	85 10 00 00 8b 29 00 00	call 0x298b ; <core::result::unwrap_failed>
    3150	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000006278 <LBB8_16>
    3151	63 1a 20 ff 00 00 00 00	*(u32 *)(r10 - 0xe0) = r1
    3152	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    3153	7b 1a 24 ff 00 00 00 00	*(u64 *)(r10 - 0xdc) = r1
    3154	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    3155	7b 1a 2c ff 00 00 00 00	*(u64 *)(r10 - 0xd4) = r1
    3156	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    3157	7b 1a 34 ff 00 00 00 00	*(u64 *)(r10 - 0xcc) = r1
    3158	61 a1 88 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x178)
    3159	63 1a 3c ff 00 00 00 00	*(u32 *)(r10 - 0xc4) = r1
    3160	05 00 06 ff 00 00 00 00	goto -0xfa <LBB8_10>

00000000000062c8 <LBB8_15>
    3161	bf 87 00 00 00 00 00 00	r7 = r8
    3162	07 07 00 00 10 00 00 00	r7 += 0x10
    3163	bf 71 00 00 00 00 00 00	r1 = r7
    3164	b7 02 00 00 ff ff ff ff	r2 = -0x1
    3165	85 10 00 00 44 13 00 00	call 0x1344 ; <core::cell::Cell<T>::replace>
    3166	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    3167	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    3168	bf a1 00 00 00 00 00 00	r1 = r10
    3169	07 01 00 00 70 fe ff ff	r1 += -0x190
    3170	bf a2 00 00 00 00 00 00	r2 = r10
    3171	07 02 00 00 20 ff ff ff	r2 += -0xe0
    3172	85 10 00 00 86 13 00 00	call 0x1386 ; <solana_program::program_pack::Pack::pack>
    3173	79 a1 74 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x18c)
    3174	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3175	79 a1 7c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x184)
    3176	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3177	79 a1 84 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17c)
    3178	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3179	61 a1 8c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x174)
    3180	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    3181	61 a1 70 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x190)
    3182	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB8_17>
    3183	05 00 07 00 00 00 00 00	goto +0x7 <LBB8_18>

0000000000006380 <LBB8_17>
    3184	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    3185	07 02 00 00 01 00 00 00	r2 += 0x1
    3186	bf 71 00 00 00 00 00 00	r1 = r7
    3187	85 10 00 00 2e 13 00 00	call 0x132e ; <core::cell::Cell<T>::replace>
    3188	b7 01 00 00 10 00 00 00	r1 = 0x10
    3189	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    3190	05 00 35 ff 00 00 00 00	goto -0xcb <LBB8_20>

00000000000063b8 <LBB8_18>
    3191	63 1a 20 ff 00 00 00 00	*(u32 *)(r10 - 0xe0) = r1
    3192	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3193	7b 1a 24 ff 00 00 00 00	*(u64 *)(r10 - 0xdc) = r1
    3194	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3195	7b 1a 2c ff 00 00 00 00	*(u64 *)(r10 - 0xd4) = r1
    3196	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3197	7b 1a 34 ff 00 00 00 00	*(u64 *)(r10 - 0xcc) = r1
    3198	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    3199	63 1a 3c ff 00 00 00 00	*(u32 *)(r10 - 0xc4) = r1
    3200	bf a2 00 00 00 00 00 00	r2 = r10
    3201	07 02 00 00 20 ff ff ff	r2 += -0xe0
    3202	bf 61 00 00 00 00 00 00	r1 = r6
    3203	85 10 00 00 2c 13 00 00	call 0x132c ; <<T as core::convert::From<T>>::from>
    3204	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    3205	07 02 00 00 01 00 00 00	r2 += 0x1
    3206	05 00 23 ff 00 00 00 00	goto -0xdd <LBB8_19>

0000000000006438 <spl_token::processor::Processor::process_set_authority>
    3207	bf 59 00 00 00 00 00 00	r9 = r5
    3208	bf 28 00 00 00 00 00 00	r8 = r2
    3209	bf 16 00 00 00 00 00 00	r6 = r1
    3210	7b 3a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r3
    3211	27 04 00 00 30 00 00 00	r4 *= 0x30
    3212	0f 43 00 00 00 00 00 00	r3 += r4
    3213	7b 3a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r3
    3214	bf a1 00 00 00 00 00 00	r1 = r10
    3215	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3216	bf a2 00 00 00 00 00 00	r2 = r10
    3217	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3218	85 10 00 00 d0 1c 00 00	call 0x1cd0 ; <solana_program::account_info::next_account_info>
    3219	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3220	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3221	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3222	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3223	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    3224	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3225	79 a7 b8 fe 00 00 00 00	r7 = *(u64 *)(r10 - 0x148)
    3226	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3227	15 01 15 00 01 00 00 00	if r1 == 0x1 goto +0x15 <LBB9_2>
    3228	7b 8a f8 fc 00 00 00 00	*(u64 *)(r10 - 0x308) = r8
    3229	79 91 08 f0 00 00 00 00	r1 = *(u64 *)(r9 - 0xff8)
    3230	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1
    3231	79 98 00 f0 00 00 00 00	r8 = *(u64 *)(r9 - 0x1000)
    3232	bf a1 00 00 00 00 00 00	r1 = r10
    3233	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3234	bf a2 00 00 00 00 00 00	r2 = r10
    3235	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3236	85 10 00 00 be 1c 00 00	call 0x1cbe ; <solana_program::account_info::next_account_info>
    3237	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3238	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3239	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3240	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3241	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    3242	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3243	79 a2 b8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x148)
    3244	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3245	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB9_5>
    3246	05 00 0e 00 00 00 00 00	goto +0xe <LBB9_4>

0000000000006578 <LBB9_5>
    3247	7b 2a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r2
    3248	05 00 01 00 00 00 00 00	goto +0x1 <LBB9_3>

0000000000006588 <LBB9_2>
    3249	7b 7a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r7

0000000000006590 <LBB9_3>
    3250	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    3251	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3252	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3253	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3254	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3255	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3256	bf a2 00 00 00 00 00 00	r2 = r10
    3257	07 02 00 00 b0 fe ff ff	r2 += -0x150
    3258	bf 61 00 00 00 00 00 00	r1 = r6
    3259	85 10 00 00 f4 12 00 00	call 0x12f4 ; <<T as core::convert::From<T>>::from>

00000000000065e0 <LBB9_60>
    3260	95 00 00 00 00 00 00 00	exit

00000000000065e8 <LBB9_4>
    3261	7b 2a e0 fc 00 00 00 00	*(u64 *)(r10 - 0x320) = r2
    3262	bf 71 00 00 00 00 00 00	r1 = r7
    3263	85 10 00 00 63 1f 00 00	call 0x1f63 ; <solana_program::account_info::AccountInfo::data_len>
    3264	bf 09 00 00 00 00 00 00	r9 = r0
    3265	85 10 00 00 08 13 00 00	call 0x1308 ; <solana_program::program_pack::Pack::get_packed_len>
    3266	1d 09 01 00 00 00 00 00	if r9 == r0 goto +0x1 <LBB9_7>
    3267	05 00 10 00 00 00 00 00	goto +0x10 <LBB9_6>

0000000000006620 <LBB9_7>
    3268	7b 6a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r6
    3269	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
    3270	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    3271	07 02 00 00 01 00 00 00	r2 += 0x1
    3272	65 02 21 00 00 00 00 00	if r2 s> 0x0 goto +0x21 <LBB9_9>
    3273	bf a3 00 00 00 00 00 00	r3 = r10
    3274	07 03 00 00 f8 ff ff ff	r3 += -0x8
    3275	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    3277	b7 02 00 00 18 00 00 00	r2 = 0x18
    3278	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    3280	18 05 00 00 c0 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24ac0 ll
    3282	85 10 00 00 06 29 00 00	call 0x2906 ; <core::result::unwrap_failed>
    3283	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000066a0 <LBB9_6>
    3284	bf 71 00 00 00 00 00 00	r1 = r7
    3285	85 10 00 00 4d 1f 00 00	call 0x1f4d ; <solana_program::account_info::AccountInfo::data_len>
    3286	bf 09 00 00 00 00 00 00	r9 = r0
    3287	85 10 00 00 f6 12 00 00	call 0x12f6 ; <solana_program::program_pack::Pack::get_packed_len>
    3288	1d 09 01 00 00 00 00 00	if r9 == r0 goto +0x1 <LBB9_35>
    3289	05 00 9a 00 00 00 00 00	goto +0x9a <LBB9_34>

00000000000066d0 <LBB9_35>
    3290	7b 6a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r6
    3291	79 76 10 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x10)
    3292	79 62 10 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x10)
    3293	07 02 00 00 01 00 00 00	r2 += 0x1
    3294	65 02 98 00 00 00 00 00	if r2 s> 0x0 goto +0x98 <LBB9_37>
    3295	bf a3 00 00 00 00 00 00	r3 = r10
    3296	07 03 00 00 f8 ff ff ff	r3 += -0x8
    3297	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    3299	b7 02 00 00 18 00 00 00	r2 = 0x18
    3300	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    3302	18 05 00 00 f0 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24af0 ll
    3304	85 10 00 00 f0 28 00 00	call 0x28f0 ; <core::result::unwrap_failed>
    3305	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000006750 <LBB9_9>
    3306	bf 96 00 00 00 00 00 00	r6 = r9
    3307	07 06 00 00 10 00 00 00	r6 += 0x10
    3308	bf 61 00 00 00 00 00 00	r1 = r6
    3309	85 10 00 00 b4 12 00 00	call 0x12b4 ; <core::cell::Cell<T>::replace>
    3310	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    3311	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    3312	bf a1 00 00 00 00 00 00	r1 = r10
    3313	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3314	85 10 00 00 20 15 00 00	call 0x1520 ; <solana_program::program_pack::Pack::unpack>
    3315	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3316	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3317	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3318	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3319	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3320	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3321	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    3322	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3323	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    3324	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    3325	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    3326	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    3327	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    3328	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    3329	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    3330	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    3331	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    3332	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    3333	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    3334	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    3335	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    3336	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    3337	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    3338	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    3339	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    3340	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    3341	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    3342	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    3343	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    3344	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    3345	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    3346	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    3347	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    3348	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    3349	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    3350	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    3351	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    3352	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    3353	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    3354	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    3355	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    3356	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    3357	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    3358	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    3359	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3360	15 01 a5 00 01 00 00 00	if r1 == 0x1 goto +0xa5 <LBB9_58>
    3361	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    3362	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    3363	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    3364	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    3365	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    3366	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    3367	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    3368	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    3369	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    3370	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    3371	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    3372	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    3373	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    3374	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    3375	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    3376	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    3377	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    3378	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    3379	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    3380	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    3381	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    3382	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    3383	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    3384	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    3385	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    3386	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    3387	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    3388	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    3389	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    3390	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    3391	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    3392	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    3393	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    3394	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    3395	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    3396	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    3397	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3398	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    3399	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3400	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    3401	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3402	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    3403	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    3404	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    3405	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
    3406	07 02 00 00 ff ff ff ff	r2 += -0x1
    3407	bf 61 00 00 00 00 00 00	r1 = r6
    3408	85 10 00 00 51 12 00 00	call 0x1251 ; <core::cell::Cell<T>::replace>
    3409	bf a1 00 00 00 00 00 00	r1 = r10
    3410	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    3411	85 10 00 00 69 16 00 00	call 0x1669 ; <spl_token::state::Account::is_frozen>
    3412	55 00 8b 00 00 00 00 00	if r0 != 0x0 goto +0x8b <LBB9_13>
    3413	57 08 00 00 ff 00 00 00	r8 &= 0xff
    3414	79 a6 e8 fc 00 00 00 00	r6 = *(u64 *)(r10 - 0x318)
    3415	15 08 bf 00 02 00 00 00	if r8 == 0x2 goto +0xbf <LBB9_16>
    3416	15 08 01 00 03 00 00 00	if r8 == 0x3 goto +0x1 <LBB9_21>
    3417	05 00 b0 00 00 00 00 00	goto +0xb0 <LBB9_14>

0000000000006ad0 <LBB9_21>
    3418	79 a1 dc fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x224)
    3419	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3420	79 a1 e4 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x21c)
    3421	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3422	79 a1 ec fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x214)
    3423	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3424	79 a1 f4 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x20c)
    3425	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3426	61 a1 d8 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x228)
    3427	79 a2 88 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x278)
    3428	7b 2a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r2
    3429	79 a2 80 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x280)
    3430	7b 2a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r2
    3431	79 a2 78 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x288)
    3432	7b 2a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r2
    3433	79 a2 70 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x290)
    3434	7b 2a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r2
    3435	15 01 08 01 01 00 00 00	if r1 == 0x1 goto +0x108 <LBB9_23>
    3436	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3437	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    3438	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3439	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3440	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3441	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3442	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3443	05 00 07 01 00 00 00 00	goto +0x107 <LBB9_24>

0000000000006ba0 <LBB9_34>
    3444	b7 01 00 00 01 00 00 00	r1 = 0x1
    3445	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    3446	05 00 45 ff 00 00 00 00	goto -0xbb <LBB9_60>

0000000000006bb8 <LBB9_37>
    3447	bf 69 00 00 00 00 00 00	r9 = r6
    3448	07 09 00 00 10 00 00 00	r9 += 0x10
    3449	bf 91 00 00 00 00 00 00	r1 = r9
    3450	85 10 00 00 27 12 00 00	call 0x1227 ; <core::cell::Cell<T>::replace>
    3451	79 62 18 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x18)
    3452	79 63 20 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x20)
    3453	bf a1 00 00 00 00 00 00	r1 = r10
    3454	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3455	85 10 00 00 89 12 00 00	call 0x1289 ; <solana_program::program_pack::Pack::unpack>
    3456	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    3457	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    3458	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    3459	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    3460	79 a1 cc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x134)
    3461	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    3462	79 a1 d4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12c)
    3463	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    3464	79 a1 dc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x124)
    3465	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    3466	79 a1 e4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x11c)
    3467	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    3468	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    3469	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3470	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    3471	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3472	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    3473	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3474	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    3475	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    3476	61 a2 b8 fe 00 00 00 00	r2 = *(u32 *)(r10 - 0x148)
    3477	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3478	15 01 57 00 01 00 00 00	if r1 == 0x1 goto +0x57 <LBB9_40>
    3479	7b 2a d0 fc 00 00 00 00	*(u64 *)(r10 - 0x330) = r2
    3480	61 a1 ec fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x114)
    3481	7b 1a d8 fc 00 00 00 00	*(u64 *)(r10 - 0x328) = r1
    3482	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    3483	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    3484	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    3485	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    3486	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    3487	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    3488	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3489	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    3490	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3491	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    3492	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    3493	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    3494	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3495	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    3496	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3497	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    3498	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3499	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    3500	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    3501	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    3502	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    3503	07 02 00 00 ff ff ff ff	r2 += -0x1
    3504	bf 91 00 00 00 00 00 00	r1 = r9
    3505	85 10 00 00 f0 11 00 00	call 0x11f0 ; <core::cell::Cell<T>::replace>
    3506	57 08 00 00 ff 00 00 00	r8 &= 0xff
    3507	79 a6 e8 fc 00 00 00 00	r6 = *(u64 *)(r10 - 0x318)
    3508	15 08 8a 00 00 00 00 00	if r8 == 0x0 goto +0x8a <LBB9_41>
    3509	15 08 01 00 01 00 00 00	if r8 == 0x1 goto +0x1 <LBB9_47>
    3510	05 00 53 00 00 00 00 00	goto +0x53 <LBB9_14>

0000000000006db8 <LBB9_47>
    3511	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    3512	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    3513	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    3514	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3515	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    3516	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3517	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    3518	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3519	bf a1 00 00 00 00 00 00	r1 = r10
    3520	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    3521	b7 02 00 00 10 00 00 00	r2 = 0x10
    3522	85 10 00 00 a8 19 00 00	call 0x19a8 ; <<T as core::convert::Into<U>>::into>
    3523	79 a1 d8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x328)
    3524	15 01 1a 01 01 00 00 00	if r1 == 0x1 goto +0x11a <LBB9_49>
    3525	05 00 87 00 00 00 00 00	goto +0x87 <LBB9_42>

0000000000006e30 <LBB9_58>
    3526	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3527	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3528	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3529	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3530	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3531	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3532	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    3533	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    3534	bf a1 00 00 00 00 00 00	r1 = r10
    3535	07 01 00 00 d8 ff ff ff	r1 += -0x28
    3536	bf a2 00 00 00 00 00 00	r2 = r10
    3537	07 02 00 00 b0 fe ff ff	r2 += -0x150
    3538	85 10 00 00 dd 11 00 00	call 0x11dd ; <<T as core::convert::From<T>>::from>
    3539	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    3540	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    3541	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    3542	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3543	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    3544	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3545	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    3546	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3547	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    3548	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
    3549	07 02 00 00 ff ff ff ff	r2 += -0x1
    3550	bf 61 00 00 00 00 00 00	r1 = r6
    3551	05 00 28 00 00 00 00 00	goto +0x28 <LBB9_59>

0000000000006f00 <LBB9_13>
    3552	bf a1 00 00 00 00 00 00	r1 = r10
    3553	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3554	b7 02 00 00 11 00 00 00	r2 = 0x11
    3555	85 10 00 00 87 19 00 00	call 0x1987 ; <<T as core::convert::Into<U>>::into>
    3556	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3557	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    3558	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    3559	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3560	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    3561	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3562	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    3563	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3564	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    3565	05 00 ce fe 00 00 00 00	goto -0x132 <LBB9_60>

0000000000006f70 <LBB9_40>
    3566	63 2a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r2
    3567	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3568	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    3569	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3570	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    3571	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    3572	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    3573	61 a1 68 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x298)
    3574	63 1a cc fe 00 00 00 00	*(u32 *)(r10 - 0x134) = r1
    3575	bf a1 00 00 00 00 00 00	r1 = r10
    3576	07 01 00 00 00 fe ff ff	r1 += -0x200
    3577	bf a2 00 00 00 00 00 00	r2 = r10
    3578	07 02 00 00 b0 fe ff ff	r2 += -0x150
    3579	85 10 00 00 b4 11 00 00	call 0x11b4 ; <<T as core::convert::From<T>>::from>
    3580	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3581	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    3582	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    3583	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3584	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    3585	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3586	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    3587	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    3588	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    3589	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    3590	07 02 00 00 ff ff ff ff	r2 += -0x1
    3591	bf 91 00 00 00 00 00 00	r1 = r9

0000000000007040 <LBB9_59>
    3592	85 10 00 00 99 11 00 00	call 0x1199 ; <core::cell::Cell<T>::replace>
    3593	05 00 b2 fe 00 00 00 00	goto -0x14e <LBB9_60>

0000000000007050 <LBB9_14>
    3594	bf a1 00 00 00 00 00 00	r1 = r10
    3595	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3596	b7 02 00 00 0f 00 00 00	r2 = 0xf

0000000000007068 <LBB9_15>
    3597	85 10 00 00 5d 19 00 00	call 0x195d ; <<T as core::convert::Into<U>>::into>
    3598	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3599	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    3600	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3601	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    3602	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3603	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    3604	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3605	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    3606	05 00 a5 fe 00 00 00 00	goto -0x15b <LBB9_60>

00000000000070b8 <LBB9_16>
    3607	bf a1 00 00 00 00 00 00	r1 = r10
    3608	07 01 00 00 00 fd ff ff	r1 += -0x300
    3609	bf a2 00 00 00 00 00 00	r2 = r10
    3610	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3611	85 10 00 00 7a 1d 00 00	call 0x1d7a ; <core::slice::iter::Iter<T>::as_slice>
    3612	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
    3613	79 a2 00 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x300)
    3614	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    3615	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    3616	bf a5 00 00 00 00 00 00	r5 = r10
    3617	bf a1 00 00 00 00 00 00	r1 = r10
    3618	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3619	bf a3 00 00 00 00 00 00	r3 = r10
    3620	07 03 00 00 70 fd ff ff	r3 += -0x290
    3621	79 a2 f8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x308)
    3622	79 a4 e0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x320)
    3623	85 10 00 00 03 0c 00 00	call 0xc03 ; <spl_token::processor::Processor::validate_owner>
    3624	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    3625	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3626	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    3627	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3628	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    3629	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3630	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    3631	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    3632	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    3633	55 01 f9 00 10 00 00 00	if r1 != 0x10 goto +0xf9 <LBB9_18>
    3634	79 a2 f0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x310)
    3635	61 21 00 00 00 00 00 00	r1 = *(u32 *)(r2 + 0x0)
    3636	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB9_27>
    3637	05 00 b9 01 00 00 00 00	goto +0x1b9 <LBB9_20>

00000000000071b0 <LBB9_27>
    3638	79 21 1c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x1c)
    3639	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    3640	79 21 14 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x14)
    3641	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    3642	79 21 0c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0xc)
    3643	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    3644	79 21 04 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x4)
    3645	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    3646	05 00 66 00 00 00 00 00	goto +0x66 <LBB9_28>

00000000000071f8 <LBB9_41>
    3647	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    3648	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    3649	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    3650	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3651	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    3652	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3653	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    3654	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3655	bf a1 00 00 00 00 00 00	r1 = r10
    3656	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    3657	b7 02 00 00 05 00 00 00	r2 = 0x5
    3658	85 10 00 00 20 19 00 00	call 0x1920 ; <<T as core::convert::Into<U>>::into>
    3659	79 a1 d0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x330)
    3660	15 01 e7 00 01 00 00 00	if r1 == 0x1 goto +0xe7 <LBB9_43>

0000000000007268 <LBB9_42>
    3661	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3662	7b 1a b7 fe 00 00 00 00	*(u64 *)(r10 - 0x149) = r1
    3663	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3664	7b 1a bf fe 00 00 00 00	*(u64 *)(r10 - 0x141) = r1
    3665	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    3666	7b 1a c7 fe 00 00 00 00	*(u64 *)(r10 - 0x139) = r1
    3667	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    3668	7b 1a cf fe 00 00 00 00	*(u64 *)(r10 - 0x131) = r1
    3669	7b 1a 1f fe 00 00 00 00	*(u64 *)(r10 - 0x1e1) = r1
    3670	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3671	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    3672	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3673	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    3674	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3675	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    3676	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3677	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3678	79 a1 1f fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e1)
    3679	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3680	79 a1 17 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e9)
    3681	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3682	79 a1 0f fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f1)
    3683	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3684	79 a1 07 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f9)
    3685	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    3686	bf a1 00 00 00 00 00 00	r1 = r10
    3687	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    3688	bf a2 00 00 00 00 00 00	r2 = r10
    3689	07 02 00 00 b0 fe ff ff	r2 += -0x150
    3690	85 10 00 00 45 11 00 00	call 0x1145 ; <<T as core::convert::From<T>>::from>
    3691	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    3692	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    3693	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    3694	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    3695	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3696	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    3697	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3698	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    3699	05 00 48 fe 00 00 00 00	goto -0x1b8 <LBB9_60>

00000000000073a0 <LBB9_23>
    3700	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3701	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    3702	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    3703	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    3704	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    3705	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    3706	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)

00000000000073d8 <LBB9_24>
    3707	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    3708	79 a8 f8 fc 00 00 00 00	r8 = *(u64 *)(r10 - 0x308)
    3709	bf a1 00 00 00 00 00 00	r1 = r10
    3710	07 01 00 00 10 fd ff ff	r1 += -0x2f0
    3711	bf a2 00 00 00 00 00 00	r2 = r10
    3712	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3713	85 10 00 00 14 1d 00 00	call 0x1d14 ; <core::slice::iter::Iter<T>::as_slice>
    3714	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    3715	79 a2 10 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2f0)
    3716	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    3717	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    3718	bf a5 00 00 00 00 00 00	r5 = r10
    3719	bf a1 00 00 00 00 00 00	r1 = r10
    3720	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3721	bf a3 00 00 00 00 00 00	r3 = r10
    3722	07 03 00 00 d8 ff ff ff	r3 += -0x28
    3723	bf 82 00 00 00 00 00 00	r2 = r8
    3724	79 a4 e0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x320)
    3725	85 10 00 00 9d 0b 00 00	call 0xb9d ; <spl_token::processor::Processor::validate_owner>
    3726	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    3727	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    3728	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    3729	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    3730	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    3731	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    3732	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    3733	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    3734	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    3735	55 01 8a 00 10 00 00 00	if r1 != 0x10 goto +0x8a <LBB9_26>
    3736	bf a1 00 00 00 00 00 00	r1 = r10
    3737	07 01 00 00 d8 fd ff ff	r1 += -0x228
    3738	79 a3 f0 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x310)
    3739	61 32 20 00 00 00 00 00	r2 = *(u32 *)(r3 + 0x20)
    3740	63 21 20 00 00 00 00 00	*(u32 *)(r1 + 0x20) = r2
    3741	79 32 18 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x18)
    3742	7b 21 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r2
    3743	79 32 10 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x10)
    3744	7b 21 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r2
    3745	79 32 08 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x8)
    3746	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
    3747	79 32 00 00 00 00 00 00	r2 = *(u64 *)(r3 + 0x0)
    3748	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2

0000000000007528 <LBB9_28>
    3749	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    3750	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    3751	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    3752	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    3753	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    3754	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    3755	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    3756	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    3757	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    3758	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    3759	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    3760	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    3761	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    3762	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    3763	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    3764	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    3765	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    3766	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    3767	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    3768	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    3769	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    3770	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    3771	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    3772	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    3773	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    3774	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    3775	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    3776	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    3777	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    3778	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    3779	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    3780	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    3781	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    3782	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    3783	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    3784	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    3785	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    3786	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3787	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    3788	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3789	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3790	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3791	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3792	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    3793	79 76 10 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x10)
    3794	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    3795	15 01 f4 00 00 00 00 00	if r1 == 0x0 goto +0xf4 <LBB9_30>
    3796	bf a3 00 00 00 00 00 00	r3 = r10
    3797	07 03 00 00 f8 ff ff ff	r3 += -0x8
    3798	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    3800	b7 02 00 00 10 00 00 00	r2 = 0x10
    3801	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    3803	18 05 00 00 d8 4a 02 00 00 00 00 00 00 00 00 00	r5 = 0x24ad8 ll
    3805	85 10 00 00 fb 26 00 00	call 0x26fb ; <core::result::unwrap_failed>
    3806	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000076f8 <LBB9_49>
    3807	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    3808	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3809	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3810	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3811	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3812	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3813	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3814	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    3815	61 a1 50 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x2b0)
    3816	55 01 06 00 0e 00 00 00	if r1 != 0xe goto +0x6 <LBB9_51>
    3817	bf a9 00 00 00 00 00 00	r9 = r10
    3818	07 09 00 00 58 fd ff ff	r9 += -0x2a8
    3819	bf 91 00 00 00 00 00 00	r1 = r9
    3820	85 10 00 00 8b 0f 00 00	call 0xf8b ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
    3821	bf 91 00 00 00 00 00 00	r1 = r9
    3822	85 10 00 00 91 19 00 00	call 0x1991 ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>

0000000000007778 <LBB9_51>
    3823	79 a1 cf fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x131)
    3824	7b 1a 1f fe 00 00 00 00	*(u64 *)(r10 - 0x1e1) = r1
    3825	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3826	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3827	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3828	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    3829	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3830	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    3831	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3832	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    3833	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3834	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    3835	bf a1 00 00 00 00 00 00	r1 = r10
    3836	07 01 00 00 30 fd ff ff	r1 += -0x2d0
    3837	bf a2 00 00 00 00 00 00	r2 = r10
    3838	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3839	85 10 00 00 96 1c 00 00	call 0x1c96 ; <core::slice::iter::Iter<T>::as_slice>
    3840	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    3841	79 a2 30 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2d0)
    3842	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    3843	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    3844	bf a5 00 00 00 00 00 00	r5 = r10
    3845	bf a1 00 00 00 00 00 00	r1 = r10
    3846	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3847	bf a3 00 00 00 00 00 00	r3 = r10
    3848	07 03 00 00 b8 ff ff ff	r3 += -0x48
    3849	79 a2 f8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x308)
    3850	79 a4 e0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x320)
    3851	85 10 00 00 1f 0b 00 00	call 0xb1f ; <spl_token::processor::Processor::validate_owner>
    3852	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    3853	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    3854	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    3855	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    3856	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    3857	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    3858	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    3859	63 1a 68 fd 00 00 00 00	*(u32 *)(r10 - 0x298) = r1
    3860	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    3861	55 01 84 00 10 00 00 00	if r1 != 0x10 goto +0x84 <LBB9_61>
    3862	79 a2 f0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x310)
    3863	61 23 00 00 00 00 00 00	r3 = *(u32 *)(r2 + 0x0)
    3864	79 21 1c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x1c)
    3865	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    3866	79 21 14 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x14)
    3867	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    3868	79 21 0c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0xc)
    3869	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    3870	79 21 04 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x4)
    3871	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    3872	79 a4 d0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x330)
    3873	05 00 54 00 00 00 00 00	goto +0x54 <LBB9_53>

0000000000007910 <LBB9_26>
    3874	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    3875	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    3876	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    3877	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    3878	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    3879	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    3880	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    3881	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    3882	05 00 77 00 00 00 00 00	goto +0x77 <LBB9_19>

0000000000007958 <LBB9_18>
    3883	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    3884	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3885	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    3886	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3887	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    3888	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3889	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    3890	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    3891	05 00 6e 00 00 00 00 00	goto +0x6e <LBB9_19>

00000000000079a0 <LBB9_43>
    3892	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    3893	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    3894	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    3895	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    3896	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    3897	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    3898	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    3899	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    3900	61 a1 50 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x2b0)
    3901	55 01 06 00 0e 00 00 00	if r1 != 0xe goto +0x6 <LBB9_45>
    3902	bf a9 00 00 00 00 00 00	r9 = r10
    3903	07 09 00 00 58 fd ff ff	r9 += -0x2a8
    3904	bf 91 00 00 00 00 00 00	r1 = r9
    3905	85 10 00 00 36 0f 00 00	call 0xf36 ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
    3906	bf 91 00 00 00 00 00 00	r1 = r9
    3907	85 10 00 00 3c 19 00 00	call 0x193c ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>

0000000000007a20 <LBB9_45>
    3908	79 a1 cf fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x131)
    3909	7b 1a 1f fe 00 00 00 00	*(u64 *)(r10 - 0x1e1) = r1
    3910	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    3911	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    3912	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    3913	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    3914	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    3915	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    3916	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    3917	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    3918	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    3919	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    3920	bf a1 00 00 00 00 00 00	r1 = r10
    3921	07 01 00 00 20 fd ff ff	r1 += -0x2e0
    3922	bf a2 00 00 00 00 00 00	r2 = r10
    3923	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    3924	85 10 00 00 41 1c 00 00	call 0x1c41 ; <core::slice::iter::Iter<T>::as_slice>
    3925	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    3926	79 a2 20 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e0)
    3927	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    3928	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    3929	bf a5 00 00 00 00 00 00	r5 = r10
    3930	bf a1 00 00 00 00 00 00	r1 = r10
    3931	07 01 00 00 b0 fe ff ff	r1 += -0x150
    3932	bf a3 00 00 00 00 00 00	r3 = r10
    3933	07 03 00 00 b8 ff ff ff	r3 += -0x48
    3934	79 a2 f8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x308)
    3935	79 a4 e0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x320)
    3936	85 10 00 00 ca 0a 00 00	call 0xaca ; <spl_token::processor::Processor::validate_owner>
    3937	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    3938	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    3939	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    3940	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    3941	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    3942	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    3943	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    3944	63 1a 68 fd 00 00 00 00	*(u32 *)(r10 - 0x298) = r1
    3945	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    3946	55 01 2f 00 10 00 00 00	if r1 != 0x10 goto +0x2f <LBB9_61>
    3947	79 a2 f0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x310)
    3948	61 24 00 00 00 00 00 00	r4 = *(u32 *)(r2 + 0x0)
    3949	79 21 1c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x1c)
    3950	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    3951	79 21 14 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x14)
    3952	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    3953	79 21 0c 00 00 00 00 00	r1 = *(u64 *)(r2 + 0xc)
    3954	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    3955	79 21 04 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x4)
    3956	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    3957	79 a3 d8 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x328)

0000000000007bb0 <LBB9_53>
    3958	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    3959	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    3960	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    3961	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    3962	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    3963	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    3964	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    3965	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    3966	63 4a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r4
    3967	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    3968	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    3969	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    3970	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    3971	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    3972	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    3973	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    3974	7b 1a cc fe 00 00 00 00	*(u64 *)(r10 - 0x134) = r1
    3975	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    3976	7b 1a d4 fe 00 00 00 00	*(u64 *)(r10 - 0x12c) = r1
    3977	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    3978	7b 1a dc fe 00 00 00 00	*(u64 *)(r10 - 0x124) = r1
    3979	63 3a e4 fe 00 00 00 00	*(u32 *)(r10 - 0x11c) = r3
    3980	79 76 10 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x10)
    3981	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    3982	15 01 22 00 00 00 00 00	if r1 == 0x0 goto +0x22 <LBB9_55>
    3983	bf a3 00 00 00 00 00 00	r3 = r10
    3984	07 03 00 00 f8 ff ff ff	r3 += -0x8
    3985	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    3987	b7 02 00 00 10 00 00 00	r2 = 0x10
    3988	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    3990	18 05 00 00 08 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b08 ll
    3992	85 10 00 00 40 26 00 00	call 0x2640 ; <core::result::unwrap_failed>
    3993	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000007cd0 <LBB9_61>
    3994	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    3995	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    3996	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    3997	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    3998	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    3999	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    4000	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4001	61 a1 68 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x298)

0000000000007d10 <LBB9_19>
    4002	63 1a cc fe 00 00 00 00	*(u32 *)(r10 - 0x134) = r1
    4003	bf a1 00 00 00 00 00 00	r1 = r10
    4004	07 01 00 00 00 fe ff ff	r1 += -0x200
    4005	bf a2 00 00 00 00 00 00	r2 = r10
    4006	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4007	85 10 00 00 08 10 00 00	call 0x1008 ; <<T as core::convert::From<T>>::from>
    4008	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4009	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    4010	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4011	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    4012	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4013	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    4014	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4015	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    4016	05 00 0b fd 00 00 00 00	goto -0x2f5 <LBB9_60>

0000000000007d88 <LBB9_55>
    4017	bf 67 00 00 00 00 00 00	r7 = r6
    4018	07 07 00 00 10 00 00 00	r7 += 0x10
    4019	bf 71 00 00 00 00 00 00	r1 = r7
    4020	b7 02 00 00 ff ff ff ff	r2 = -0x1
    4021	85 10 00 00 ec 0f 00 00	call 0xfec ; <core::cell::Cell<T>::replace>
    4022	79 63 18 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x18)
    4023	79 64 20 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x20)
    4024	bf a1 00 00 00 00 00 00	r1 = r10
    4025	07 01 00 00 00 fe ff ff	r1 += -0x200
    4026	bf a2 00 00 00 00 00 00	r2 = r10
    4027	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4028	85 10 00 00 42 10 00 00	call 0x1042 ; <solana_program::program_pack::Pack::pack>
    4029	79 a1 04 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1fc)
    4030	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    4031	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    4032	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    4033	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    4034	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    4035	61 a1 1c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1e4)
    4036	63 1a 68 fd 00 00 00 00	*(u32 *)(r10 - 0x298) = r1
    4037	61 a1 00 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x200)
    4038	55 01 2c 00 10 00 00 00	if r1 != 0x10 goto +0x2c <LBB9_57>
    4039	05 00 16 00 00 00 00 00	goto +0x16 <LBB9_31>

0000000000007e40 <LBB9_30>
    4040	bf 67 00 00 00 00 00 00	r7 = r6
    4041	07 07 00 00 10 00 00 00	r7 += 0x10
    4042	bf 71 00 00 00 00 00 00	r1 = r7
    4043	b7 02 00 00 ff ff ff ff	r2 = -0x1
    4044	85 10 00 00 d5 0f 00 00	call 0xfd5 ; <core::cell::Cell<T>::replace>
    4045	79 63 18 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x18)
    4046	79 64 20 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x20)
    4047	bf a1 00 00 00 00 00 00	r1 = r10
    4048	07 01 00 00 00 fe ff ff	r1 += -0x200
    4049	bf a2 00 00 00 00 00 00	r2 = r10
    4050	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4051	85 10 00 00 17 10 00 00	call 0x1017 ; <solana_program::program_pack::Pack::pack>
    4052	79 a1 04 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1fc)
    4053	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    4054	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    4055	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    4056	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    4057	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    4058	61 a1 1c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1e4)
    4059	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    4060	61 a1 00 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x200)
    4061	55 01 08 00 10 00 00 00	if r1 != 0x10 goto +0x8 <LBB9_32>

0000000000007ef0 <LBB9_31>
    4062	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    4063	07 02 00 00 01 00 00 00	r2 += 0x1
    4064	bf 71 00 00 00 00 00 00	r1 = r7
    4065	85 10 00 00 c0 0f 00 00	call 0xfc0 ; <core::cell::Cell<T>::replace>
    4066	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    4067	b7 01 00 00 10 00 00 00	r1 = 0x10
    4068	63 12 00 00 00 00 00 00	*(u32 *)(r2 + 0x0) = r1
    4069	05 00 d6 fc 00 00 00 00	goto -0x32a <LBB9_60>

0000000000007f30 <LBB9_32>
    4070	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    4071	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    4072	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    4073	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    4074	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4075	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    4076	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4077	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    4078	05 00 0c 00 00 00 00 00	goto +0xc <LBB9_33>

0000000000007f78 <LBB9_20>
    4079	bf a1 00 00 00 00 00 00	r1 = r10
    4080	07 01 00 00 b0 fe ff ff	r1 += -0x150
    4081	b7 02 00 00 0c 00 00 00	r2 = 0xc
    4082	05 00 1a fe 00 00 00 00	goto -0x1e6 <LBB9_15>

0000000000007f98 <LBB9_57>
    4083	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    4084	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    4085	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    4086	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    4087	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4088	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    4089	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4090	61 a1 68 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x298)

0000000000007fd8 <LBB9_33>
    4091	63 1a cc fe 00 00 00 00	*(u32 *)(r10 - 0x134) = r1
    4092	bf a1 00 00 00 00 00 00	r1 = r10
    4093	07 01 00 00 00 fe ff ff	r1 += -0x200
    4094	bf a2 00 00 00 00 00 00	r2 = r10
    4095	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4096	85 10 00 00 af 0f 00 00	call 0xfaf ; <<T as core::convert::From<T>>::from>
    4097	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4098	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    4099	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    4100	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4101	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    4102	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4103	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    4104	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4105	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    4106	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    4107	07 02 00 00 01 00 00 00	r2 += 0x1
    4108	bf 71 00 00 00 00 00 00	r1 = r7
    4109	05 00 fa fd 00 00 00 00	goto -0x206 <LBB9_59>

0000000000008070 <spl_token::processor::Processor::process_mint_to>
    4110	bf 58 00 00 00 00 00 00	r8 = r5
    4111	bf 27 00 00 00 00 00 00	r7 = r2
    4112	bf 19 00 00 00 00 00 00	r9 = r1
    4113	7b 3a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r3
    4114	27 04 00 00 30 00 00 00	r4 *= 0x30
    4115	0f 43 00 00 00 00 00 00	r3 += r4
    4116	7b 3a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r3
    4117	bf a1 00 00 00 00 00 00	r1 = r10
    4118	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4119	bf a2 00 00 00 00 00 00	r2 = r10
    4120	07 02 00 00 48 fd ff ff	r2 += -0x2b8
    4121	85 10 00 00 49 19 00 00	call 0x1949 ; <solana_program::account_info::next_account_info>
    4122	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4123	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4124	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4125	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4126	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    4127	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4128	79 a6 c0 fe 00 00 00 00	r6 = *(u64 *)(r10 - 0x140)
    4129	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4130	15 01 17 00 01 00 00 00	if r1 == 0x1 goto +0x17 <LBB10_2>
    4131	79 81 10 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff0)
    4132	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    4133	79 81 08 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff8)
    4134	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    4135	79 81 00 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0x1000)
    4136	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    4137	bf a1 00 00 00 00 00 00	r1 = r10
    4138	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4139	bf a2 00 00 00 00 00 00	r2 = r10
    4140	07 02 00 00 48 fd ff ff	r2 += -0x2b8
    4141	85 10 00 00 35 19 00 00	call 0x1935 ; <solana_program::account_info::next_account_info>
    4142	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4143	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4144	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4145	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4146	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    4147	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4148	79 a8 c0 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x140)
    4149	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4150	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB10_5>
    4151	05 00 0e 00 00 00 00 00	goto +0xe <LBB10_4>

00000000000081c0 <LBB10_5>
    4152	7b 8a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r8
    4153	05 00 01 00 00 00 00 00	goto +0x1 <LBB10_3>

00000000000081d0 <LBB10_2>
    4154	7b 6a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r6

00000000000081d8 <LBB10_3>
    4155	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4156	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    4157	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4158	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    4159	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4160	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    4161	bf a2 00 00 00 00 00 00	r2 = r10
    4162	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4163	bf 91 00 00 00 00 00 00	r1 = r9
    4164	85 10 00 00 6b 0f 00 00	call 0xf6b ; <<T as core::convert::From<T>>::from>

0000000000008228 <LBB10_48>
    4165	95 00 00 00 00 00 00 00	exit

0000000000008230 <LBB10_4>
    4166	bf a1 00 00 00 00 00 00	r1 = r10
    4167	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4168	bf a2 00 00 00 00 00 00	r2 = r10
    4169	07 02 00 00 48 fd ff ff	r2 += -0x2b8
    4170	85 10 00 00 18 19 00 00	call 0x1918 ; <solana_program::account_info::next_account_info>
    4171	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4172	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4173	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4174	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4175	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    4176	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4177	79 a2 c0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x140)
    4178	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4179	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB10_9>
    4180	05 00 02 00 00 00 00 00	goto +0x2 <LBB10_6>

00000000000082a8 <LBB10_9>
    4181	7b 2a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r2
    4182	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB10_3>

00000000000082b8 <LBB10_6>
    4183	7b 2a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r2
    4184	7b 9a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r9
    4185	7b 8a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r8
    4186	79 89 10 00 00 00 00 00	r9 = *(u64 *)(r8 + 0x10)
    4187	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    4188	07 02 00 00 01 00 00 00	r2 += 0x1
    4189	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB10_8>
    4190	bf a3 00 00 00 00 00 00	r3 = r10
    4191	07 03 00 00 f8 ff ff ff	r3 += -0x8
    4192	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    4194	b7 02 00 00 18 00 00 00	r2 = 0x18
    4195	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    4197	18 05 00 00 20 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b20 ll
    4199	85 10 00 00 71 25 00 00	call 0x2571 ; <core::result::unwrap_failed>
    4200	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000008348 <LBB10_8>
    4201	bf 98 00 00 00 00 00 00	r8 = r9
    4202	07 08 00 00 10 00 00 00	r8 += 0x10
    4203	bf 81 00 00 00 00 00 00	r1 = r8
    4204	85 10 00 00 35 0f 00 00	call 0xf35 ; <core::cell::Cell<T>::replace>
    4205	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    4206	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    4207	bf a1 00 00 00 00 00 00	r1 = r10
    4208	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4209	85 10 00 00 a1 11 00 00	call 0x11a1 ; <solana_program::program_pack::Pack::unpack>
    4210	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4211	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4212	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4213	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4214	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4215	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4216	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    4217	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    4218	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    4219	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    4220	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    4221	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    4222	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    4223	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    4224	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    4225	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    4226	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    4227	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    4228	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    4229	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    4230	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    4231	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    4232	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    4233	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    4234	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    4235	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    4236	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    4237	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    4238	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    4239	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    4240	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    4241	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    4242	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    4243	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    4244	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    4245	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    4246	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    4247	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    4248	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    4249	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    4250	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    4251	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    4252	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    4253	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    4254	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4255	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB10_11>
    4256	05 00 11 00 00 00 00 00	goto +0x11 <LBB10_10>

0000000000008508 <LBB10_11>
    4257	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4258	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    4259	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4260	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    4261	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4262	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    4263	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4264	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    4265	bf a2 00 00 00 00 00 00	r2 = r10
    4266	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4267	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    4268	85 10 00 00 03 0f 00 00	call 0xf03 ; <<T as core::convert::From<T>>::from>
    4269	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    4270	07 02 00 00 ff ff ff ff	r2 += -0x1
    4271	bf 81 00 00 00 00 00 00	r1 = r8

0000000000008580 <LBB10_47>
    4272	85 10 00 00 f1 0e 00 00	call 0xef1 ; <core::cell::Cell<T>::replace>
    4273	05 00 93 ff 00 00 00 00	goto -0x6d <LBB10_48>

0000000000008590 <LBB10_10>
    4274	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    4275	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    4276	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    4277	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    4278	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    4279	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    4280	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    4281	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    4282	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    4283	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    4284	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    4285	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    4286	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    4287	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    4288	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    4289	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    4290	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    4291	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    4292	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    4293	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    4294	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    4295	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    4296	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    4297	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    4298	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    4299	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    4300	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    4301	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    4302	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    4303	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    4304	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    4305	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    4306	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    4307	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    4308	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    4309	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    4310	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4311	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    4312	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4313	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    4314	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4315	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    4316	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4317	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    4318	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    4319	07 02 00 00 ff ff ff ff	r2 += -0x1
    4320	bf 81 00 00 00 00 00 00	r1 = r8
    4321	85 10 00 00 c0 0e 00 00	call 0xec0 ; <core::cell::Cell<T>::replace>
    4322	bf a1 00 00 00 00 00 00	r1 = r10
    4323	07 01 00 00 58 fd ff ff	r1 += -0x2a8
    4324	85 10 00 00 d8 12 00 00	call 0x12d8 ; <spl_token::state::Account::is_frozen>
    4325	79 a8 18 fd 00 00 00 00	r8 = *(u64 *)(r10 - 0x2e8)
    4326	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB10_13>
    4327	05 00 04 00 00 00 00 00	goto +0x4 <LBB10_12>

0000000000008740 <LBB10_13>
    4328	bf 81 00 00 00 00 00 00	r1 = r8
    4329	b7 02 00 00 11 00 00 00	r2 = 0x11
    4330	85 10 00 00 80 16 00 00	call 0x1680 ; <<T as core::convert::Into<U>>::into>
    4331	05 00 59 ff 00 00 00 00	goto -0xa7 <LBB10_48>

0000000000008760 <LBB10_12>
    4332	bf a1 00 00 00 00 00 00	r1 = r10
    4333	07 01 00 00 58 fd ff ff	r1 += -0x2a8
    4334	85 10 00 00 d3 12 00 00	call 0x12d3 ; <spl_token::state::Account::is_native>
    4335	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB10_15>
    4336	05 00 04 00 00 00 00 00	goto +0x4 <LBB10_14>

0000000000008788 <LBB10_15>
    4337	bf a1 00 00 00 00 00 00	r1 = r10
    4338	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4339	b7 02 00 00 0a 00 00 00	r2 = 0xa
    4340	05 00 0b 00 00 00 00 00	goto +0xb <LBB10_27>

00000000000087a8 <LBB10_14>
    4341	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    4342	bf a3 00 00 00 00 00 00	r3 = r10
    4343	07 03 00 00 58 fd ff ff	r3 += -0x2a8
    4344	b7 02 00 00 20 00 00 00	r2 = 0x20
    4345	b7 04 00 00 20 00 00 00	r4 = 0x20
    4346	85 10 00 00 40 0d 00 00	call 0xd40 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    4347	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB10_19>
    4348	05 00 0d 00 00 00 00 00	goto +0xd <LBB10_16>

00000000000087e8 <LBB10_19>
    4349	bf a1 00 00 00 00 00 00	r1 = r10
    4350	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4351	b7 02 00 00 03 00 00 00	r2 = 0x3

0000000000008800 <LBB10_27>
    4352	85 10 00 00 6a 16 00 00	call 0x166a ; <<T as core::convert::Into<U>>::into>

0000000000008808 <LBB10_28>
    4353	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4354	7b 18 18 00 00 00 00 00	*(u64 *)(r8 + 0x18) = r1
    4355	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4356	7b 18 10 00 00 00 00 00	*(u64 *)(r8 + 0x10) = r1
    4357	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4358	7b 18 08 00 00 00 00 00	*(u64 *)(r8 + 0x8) = r1
    4359	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4360	7b 18 00 00 00 00 00 00	*(u64 *)(r8 + 0x0) = r1
    4361	05 00 3b ff 00 00 00 00	goto -0xc5 <LBB10_48>

0000000000008850 <LBB10_16>
    4362	79 68 10 00 00 00 00 00	r8 = *(u64 *)(r6 + 0x10)
    4363	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    4364	07 02 00 00 01 00 00 00	r2 += 0x1
    4365	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB10_18>
    4366	bf a3 00 00 00 00 00 00	r3 = r10
    4367	07 03 00 00 f8 ff ff ff	r3 += -0x8
    4368	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    4370	b7 02 00 00 18 00 00 00	r2 = 0x18
    4371	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    4373	18 05 00 00 38 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b38 ll
    4375	85 10 00 00 c1 24 00 00	call 0x24c1 ; <core::result::unwrap_failed>
    4376	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000088c8 <LBB10_18>
    4377	bf 89 00 00 00 00 00 00	r9 = r8
    4378	07 09 00 00 10 00 00 00	r9 += 0x10
    4379	bf 91 00 00 00 00 00 00	r1 = r9
    4380	85 10 00 00 85 0e 00 00	call 0xe85 ; <core::cell::Cell<T>::replace>
    4381	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    4382	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    4383	bf a1 00 00 00 00 00 00	r1 = r10
    4384	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4385	85 10 00 00 e7 0e 00 00	call 0xee7 ; <solana_program::program_pack::Pack::unpack>
    4386	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    4387	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    4388	79 a1 cc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x134)
    4389	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    4390	79 a1 d4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12c)
    4391	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    4392	79 a1 dc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x124)
    4393	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    4394	79 a1 f1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10f)
    4395	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4396	79 a1 f9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x107)
    4397	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4398	79 a1 01 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xff)
    4399	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4400	79 a1 09 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf7)
    4401	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    4402	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    4403	7b 1a 27 fe 00 00 00 00	*(u64 *)(r10 - 0x1d9) = r1
    4404	61 a2 c0 fe 00 00 00 00	r2 = *(u32 *)(r10 - 0x140)
    4405	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4406	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB10_22>
    4407	05 00 1b 00 00 00 00 00	goto +0x1b <LBB10_20>

00000000000089c0 <LBB10_22>
    4408	63 2a b8 fe 00 00 00 00	*(u32 *)(r10 - 0x148) = r2
    4409	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    4410	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4411	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    4412	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4413	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    4414	7b 1a cc fe 00 00 00 00	*(u64 *)(r10 - 0x134) = r1
    4415	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    4416	63 1a d4 fe 00 00 00 00	*(u32 *)(r10 - 0x12c) = r1
    4417	bf a1 00 00 00 00 00 00	r1 = r10
    4418	07 01 00 00 d8 ff ff ff	r1 += -0x28
    4419	bf a2 00 00 00 00 00 00	r2 = r10
    4420	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4421	85 10 00 00 6a 0e 00 00	call 0xe6a ; <<T as core::convert::From<T>>::from>
    4422	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    4423	79 a2 18 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e8)
    4424	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    4425	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    4426	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    4427	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    4428	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    4429	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    4430	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    4431	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    4432	07 02 00 00 ff ff ff ff	r2 += -0x1
    4433	bf 91 00 00 00 00 00 00	r1 = r9
    4434	05 00 5d ff 00 00 00 00	goto -0xa3 <LBB10_47>

0000000000008a98 <LBB10_20>
    4435	7b 2a f8 fc 00 00 00 00	*(u64 *)(r10 - 0x308) = r2
    4436	71 a8 f0 fe 00 00 00 00	r8 = *(u8 *)(r10 - 0x110)
    4437	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    4438	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1
    4439	61 a1 e4 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x11c)
    4440	7b 1a 00 fd 00 00 00 00	*(u64 *)(r10 - 0x300) = r1
    4441	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4442	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    4443	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    4444	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    4445	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    4446	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    4447	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    4448	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    4449	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    4450	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    4451	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4452	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    4453	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4454	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    4455	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4456	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    4457	79 a1 27 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d9)
    4458	7b 1a 8f ff 00 00 00 00	*(u64 *)(r10 - 0x71) = r1
    4459	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    4460	07 02 00 00 ff ff ff ff	r2 += -0x1
    4461	bf 91 00 00 00 00 00 00	r1 = r9
    4462	85 10 00 00 33 0e 00 00	call 0xe33 ; <core::cell::Cell<T>::replace>
    4463	79 a2 30 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2d0)
    4464	57 02 00 00 ff 00 00 00	r2 &= 0xff
    4465	bf 89 00 00 00 00 00 00	r9 = r8
    4466	bf 81 00 00 00 00 00 00	r1 = r8
    4467	1d 21 10 00 00 00 00 00	if r1 == r2 goto +0x10 <LBB10_25>
    4468	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    4469	15 01 0e 00 00 00 00 00	if r1 == 0x0 goto +0xe <LBB10_25>
    4470	bf a1 00 00 00 00 00 00	r1 = r10
    4471	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4472	b7 02 00 00 12 00 00 00	r2 = 0x12
    4473	85 10 00 00 f1 15 00 00	call 0x15f1 ; <<T as core::convert::Into<U>>::into>

0000000000008bd0 <LBB10_24>
    4474	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4475	79 a2 18 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e8)
    4476	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    4477	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4478	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    4479	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4480	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    4481	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4482	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    4483	05 00 c1 fe 00 00 00 00	goto -0x13f <LBB10_48>

0000000000008c20 <LBB10_25>
    4484	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    4485	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    4486	79 a8 18 fd 00 00 00 00	r8 = *(u64 *)(r10 - 0x2e8)
    4487	55 01 04 00 00 00 00 00	if r1 != 0x0 goto +0x4 <LBB10_29>
    4488	bf a1 00 00 00 00 00 00	r1 = r10
    4489	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4490	b7 02 00 00 05 00 00 00	r2 = 0x5
    4491	05 00 74 ff 00 00 00 00	goto -0x8c <LBB10_27>

0000000000008c60 <LBB10_29>
    4492	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    4493	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    4494	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    4495	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    4496	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    4497	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    4498	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    4499	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    4500	bf a1 00 00 00 00 00 00	r1 = r10
    4501	07 01 00 00 38 fd ff ff	r1 += -0x2c8
    4502	bf a2 00 00 00 00 00 00	r2 = r10
    4503	07 02 00 00 48 fd ff ff	r2 += -0x2b8
    4504	85 10 00 00 fd 19 00 00	call 0x19fd ; <core::slice::iter::Iter<T>::as_slice>
    4505	79 a1 40 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c0)
    4506	79 a2 38 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2c8)
    4507	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    4508	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    4509	bf a5 00 00 00 00 00 00	r5 = r10
    4510	bf a1 00 00 00 00 00 00	r1 = r10
    4511	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4512	bf a3 00 00 00 00 00 00	r3 = r10
    4513	07 03 00 00 d8 ff ff ff	r3 += -0x28
    4514	bf 72 00 00 00 00 00 00	r2 = r7
    4515	79 a4 10 fd 00 00 00 00	r4 = *(u64 *)(r10 - 0x2f0)
    4516	85 10 00 00 86 08 00 00	call 0x886 ; <spl_token::processor::Processor::validate_owner>
    4517	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    4518	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    4519	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    4520	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    4521	79 a1 cc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x134)
    4522	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    4523	61 a1 d4 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x12c)
    4524	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    4525	61 a1 b8 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x148)
    4526	55 01 0f 00 10 00 00 00	if r1 != 0x10 goto +0xf <LBB10_33>
    4527	79 a3 98 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x268)
    4528	bf 31 00 00 00 00 00 00	r1 = r3
    4529	79 a4 20 fd 00 00 00 00	r4 = *(u64 *)(r10 - 0x2e0)
    4530	0f 41 00 00 00 00 00 00	r1 += r4
    4531	b7 02 00 00 01 00 00 00	r2 = 0x1
    4532	2d 13 01 00 00 00 00 00	if r3 > r1 goto +0x1 <LBB10_32>
    4533	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000008db0 <LBB10_32>
    4534	57 02 00 00 01 00 00 00	r2 &= 0x1
    4535	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB10_37>
    4536	05 00 1c 00 00 00 00 00	goto +0x1c <LBB10_34>

0000000000008dc8 <LBB10_37>
    4537	bf a1 00 00 00 00 00 00	r1 = r10
    4538	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4539	b7 02 00 00 0e 00 00 00	r2 = 0xe
    4540	85 10 00 00 08 0e 00 00	call 0xe08 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    4541	05 00 43 ff 00 00 00 00	goto -0xbd <LBB10_28>

0000000000008df0 <LBB10_33>
    4542	63 1a b8 fe 00 00 00 00	*(u32 *)(r10 - 0x148) = r1
    4543	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    4544	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4545	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    4546	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4547	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    4548	7b 1a cc fe 00 00 00 00	*(u64 *)(r10 - 0x134) = r1
    4549	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    4550	63 1a d4 fe 00 00 00 00	*(u32 *)(r10 - 0x12c) = r1
    4551	bf a1 00 00 00 00 00 00	r1 = r10
    4552	07 01 00 00 08 fe ff ff	r1 += -0x1f8
    4553	bf a2 00 00 00 00 00 00	r2 = r10
    4554	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4555	85 10 00 00 e4 0d 00 00	call 0xde4 ; <<T as core::convert::From<T>>::from>
    4556	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4557	7b 18 18 00 00 00 00 00	*(u64 *)(r8 + 0x18) = r1
    4558	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4559	7b 18 10 00 00 00 00 00	*(u64 *)(r8 + 0x10) = r1
    4560	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4561	7b 18 08 00 00 00 00 00	*(u64 *)(r8 + 0x8) = r1
    4562	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4563	7b 18 00 00 00 00 00 00	*(u64 *)(r8 + 0x0) = r1
    4564	05 00 70 fe 00 00 00 00	goto -0x190 <LBB10_48>

0000000000008ea8 <LBB10_34>
    4565	79 a3 f0 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x310)
    4566	bf 35 00 00 00 00 00 00	r5 = r3
    4567	0f 45 00 00 00 00 00 00	r5 += r4
    4568	b7 02 00 00 01 00 00 00	r2 = 0x1
    4569	2d 53 01 00 00 00 00 00	if r3 > r5 goto +0x1 <LBB10_36>
    4570	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000008ed8 <LBB10_36>
    4571	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    4572	57 02 00 00 01 00 00 00	r2 &= 0x1
    4573	79 a3 08 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2f8)
    4574	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB10_41>
    4575	05 00 05 00 00 00 00 00	goto +0x5 <LBB10_38>

0000000000008f00 <LBB10_41>
    4576	bf a1 00 00 00 00 00 00	r1 = r10
    4577	07 01 00 00 b8 fe ff ff	r1 += -0x148
    4578	b7 02 00 00 0e 00 00 00	r2 = 0xe
    4579	85 10 00 00 e1 0d 00 00	call 0xde1 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    4580	05 00 95 ff 00 00 00 00	goto -0x6b <LBB10_24>

0000000000008f28 <LBB10_38>
    4581	7b 5a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r5
    4582	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4583	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    4584	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    4585	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    4586	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    4587	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    4588	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    4589	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    4590	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    4591	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    4592	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    4593	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    4594	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    4595	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    4596	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    4597	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    4598	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    4599	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    4600	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    4601	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    4602	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    4603	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    4604	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    4605	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    4606	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    4607	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    4608	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    4609	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    4610	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    4611	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    4612	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    4613	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    4614	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    4615	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    4616	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    4617	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    4618	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    4619	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    4620	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    4621	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    4622	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    4623	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    4624	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    4625	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    4626	79 38 10 00 00 00 00 00	r8 = *(u64 *)(r3 + 0x10)
    4627	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    4628	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB10_40>
    4629	bf a3 00 00 00 00 00 00	r3 = r10
    4630	07 03 00 00 f8 ff ff ff	r3 += -0x8
    4631	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    4633	b7 02 00 00 10 00 00 00	r2 = 0x10
    4634	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    4636	18 05 00 00 50 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b50 ll
    4638	85 10 00 00 ba 23 00 00	call 0x23ba ; <core::result::unwrap_failed>
    4639	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000009100 <LBB10_40>
    4640	bf 87 00 00 00 00 00 00	r7 = r8
    4641	07 07 00 00 10 00 00 00	r7 += 0x10
    4642	bf 71 00 00 00 00 00 00	r1 = r7
    4643	b7 02 00 00 ff ff ff ff	r2 = -0x1
    4644	85 10 00 00 7d 0d 00 00	call 0xd7d ; <core::cell::Cell<T>::replace>
    4645	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    4646	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    4647	bf a1 00 00 00 00 00 00	r1 = r10
    4648	07 01 00 00 08 fe ff ff	r1 += -0x1f8
    4649	bf a2 00 00 00 00 00 00	r2 = r10
    4650	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4651	85 10 00 00 bf 0d 00 00	call 0xdbf ; <solana_program::program_pack::Pack::pack>
    4652	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    4653	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    4654	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    4655	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    4656	79 a1 1c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e4)
    4657	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    4658	61 a1 24 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1dc)
    4659	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    4660	61 a1 08 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1f8)
    4661	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB10_42>
    4662	05 00 4a 00 00 00 00 00	goto +0x4a <LBB10_46>

00000000000091b8 <LBB10_42>
    4663	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    4664	07 02 00 00 01 00 00 00	r2 += 0x1
    4665	bf 71 00 00 00 00 00 00	r1 = r7
    4666	85 10 00 00 67 0d 00 00	call 0xd67 ; <core::cell::Cell<T>::replace>
    4667	79 a1 8f ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x71)
    4668	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    4669	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    4670	7b 1a 01 ff 00 00 00 00	*(u64 *)(r10 - 0xff) = r1
    4671	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    4672	7b 1a f9 fe 00 00 00 00	*(u64 *)(r10 - 0x107) = r1
    4673	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    4674	7b 1a f1 fe 00 00 00 00	*(u64 *)(r10 - 0x10f) = r1
    4675	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    4676	7b 1a e9 fe 00 00 00 00	*(u64 *)(r10 - 0x117) = r1
    4677	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    4678	63 1a b8 fe 00 00 00 00	*(u32 *)(r10 - 0x148) = r1
    4679	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    4680	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4681	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    4682	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4683	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    4684	7b 1a cc fe 00 00 00 00	*(u64 *)(r10 - 0x134) = r1
    4685	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    4686	7b 1a d4 fe 00 00 00 00	*(u64 *)(r10 - 0x12c) = r1
    4687	73 9a e8 fe 00 00 00 00	*(u8 *)(r10 - 0x118) = r9
    4688	79 a1 30 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d0)
    4689	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    4690	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    4691	63 1a dc fe 00 00 00 00	*(u32 *)(r10 - 0x124) = r1
    4692	79 66 10 00 00 00 00 00	r6 = *(u64 *)(r6 + 0x10)
    4693	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    4694	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB10_44>
    4695	bf a3 00 00 00 00 00 00	r3 = r10
    4696	07 03 00 00 f8 ff ff ff	r3 += -0x8
    4697	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    4699	b7 02 00 00 10 00 00 00	r2 = 0x10
    4700	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    4702	18 05 00 00 68 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b68 ll
    4704	85 10 00 00 78 23 00 00	call 0x2378 ; <core::result::unwrap_failed>
    4705	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000009310 <LBB10_44>
    4706	bf 67 00 00 00 00 00 00	r7 = r6
    4707	07 07 00 00 10 00 00 00	r7 += 0x10
    4708	bf 71 00 00 00 00 00 00	r1 = r7
    4709	b7 02 00 00 ff ff ff ff	r2 = -0x1
    4710	85 10 00 00 3b 0d 00 00	call 0xd3b ; <core::cell::Cell<T>::replace>
    4711	79 63 18 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x18)
    4712	79 64 20 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x20)
    4713	bf a1 00 00 00 00 00 00	r1 = r10
    4714	07 01 00 00 08 fe ff ff	r1 += -0x1f8
    4715	bf a2 00 00 00 00 00 00	r2 = r10
    4716	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4717	85 10 00 00 91 0d 00 00	call 0xd91 ; <solana_program::program_pack::Pack::pack>
    4718	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    4719	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    4720	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    4721	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    4722	79 a1 1c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e4)
    4723	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    4724	61 a1 24 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1dc)
    4725	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    4726	61 a1 08 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1f8)
    4727	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB10_45>
    4728	05 00 08 00 00 00 00 00	goto +0x8 <LBB10_46>

00000000000093c8 <LBB10_45>
    4729	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    4730	07 02 00 00 01 00 00 00	r2 += 0x1
    4731	bf 71 00 00 00 00 00 00	r1 = r7
    4732	85 10 00 00 25 0d 00 00	call 0xd25 ; <core::cell::Cell<T>::replace>
    4733	b7 01 00 00 10 00 00 00	r1 = 0x10
    4734	79 a2 18 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e8)
    4735	63 12 00 00 00 00 00 00	*(u32 *)(r2 + 0x0) = r1
    4736	05 00 c4 fd 00 00 00 00	goto -0x23c <LBB10_48>

0000000000009408 <LBB10_46>
    4737	63 1a b8 fe 00 00 00 00	*(u32 *)(r10 - 0x148) = r1
    4738	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    4739	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    4740	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    4741	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    4742	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    4743	7b 1a cc fe 00 00 00 00	*(u64 *)(r10 - 0x134) = r1
    4744	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    4745	63 1a d4 fe 00 00 00 00	*(u32 *)(r10 - 0x12c) = r1
    4746	bf a1 00 00 00 00 00 00	r1 = r10
    4747	07 01 00 00 08 fe ff ff	r1 += -0x1f8
    4748	bf a2 00 00 00 00 00 00	r2 = r10
    4749	07 02 00 00 b8 fe ff ff	r2 += -0x148
    4750	85 10 00 00 21 0d 00 00	call 0xd21 ; <<T as core::convert::From<T>>::from>
    4751	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4752	79 a2 18 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e8)
    4753	7b 12 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r1
    4754	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4755	7b 12 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r1
    4756	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4757	7b 12 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r1
    4758	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4759	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
    4760	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    4761	07 02 00 00 01 00 00 00	r2 += 0x1
    4762	bf 71 00 00 00 00 00 00	r1 = r7
    4763	05 00 14 fe 00 00 00 00	goto -0x1ec <LBB10_47>

00000000000094e0 <spl_token::processor::Processor::process_burn>
    4764	bf 58 00 00 00 00 00 00	r8 = r5
    4765	bf 29 00 00 00 00 00 00	r9 = r2
    4766	bf 16 00 00 00 00 00 00	r6 = r1
    4767	7b 3a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r3
    4768	27 04 00 00 30 00 00 00	r4 *= 0x30
    4769	0f 43 00 00 00 00 00 00	r3 += r4
    4770	7b 3a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r3
    4771	bf a1 00 00 00 00 00 00	r1 = r10
    4772	07 01 00 00 b0 fe ff ff	r1 += -0x150
    4773	bf a2 00 00 00 00 00 00	r2 = r10
    4774	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    4775	85 10 00 00 bb 16 00 00	call 0x16bb ; <solana_program::account_info::next_account_info>
    4776	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4777	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    4778	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4779	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4780	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4781	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4782	79 a7 b8 fe 00 00 00 00	r7 = *(u64 *)(r10 - 0x148)
    4783	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    4784	15 01 17 00 01 00 00 00	if r1 == 0x1 goto +0x17 <LBB11_2>
    4785	7b 9a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r9
    4786	79 81 10 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff0)
    4787	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
    4788	79 81 08 f0 00 00 00 00	r1 = *(u64 *)(r8 - 0xff8)
    4789	7b 1a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r1
    4790	79 89 00 f0 00 00 00 00	r9 = *(u64 *)(r8 - 0x1000)
    4791	bf a1 00 00 00 00 00 00	r1 = r10
    4792	07 01 00 00 b0 fe ff ff	r1 += -0x150
    4793	bf a2 00 00 00 00 00 00	r2 = r10
    4794	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    4795	85 10 00 00 a7 16 00 00	call 0x16a7 ; <solana_program::account_info::next_account_info>
    4796	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4797	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    4798	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4799	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4800	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4801	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4802	79 a8 b8 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x148)
    4803	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    4804	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB11_5>
    4805	05 00 0e 00 00 00 00 00	goto +0xe <LBB11_4>

0000000000009630 <LBB11_5>
    4806	7b 8a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r8
    4807	05 00 01 00 00 00 00 00	goto +0x1 <LBB11_3>

0000000000009640 <LBB11_2>
    4808	7b 7a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r7

0000000000009648 <LBB11_3>
    4809	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4810	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    4811	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4812	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    4813	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4814	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    4815	bf a2 00 00 00 00 00 00	r2 = r10
    4816	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4817	bf 61 00 00 00 00 00 00	r1 = r6
    4818	85 10 00 00 dd 0c 00 00	call 0xcdd ; <<T as core::convert::From<T>>::from>

0000000000009698 <LBB11_52>
    4819	95 00 00 00 00 00 00 00	exit

00000000000096a0 <LBB11_4>
    4820	bf a1 00 00 00 00 00 00	r1 = r10
    4821	07 01 00 00 b0 fe ff ff	r1 += -0x150
    4822	bf a2 00 00 00 00 00 00	r2 = r10
    4823	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    4824	85 10 00 00 8a 16 00 00	call 0x168a ; <solana_program::account_info::next_account_info>
    4825	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4826	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    4827	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4828	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4829	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4830	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4831	79 a2 b8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x148)
    4832	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    4833	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB11_9>
    4834	05 00 02 00 00 00 00 00	goto +0x2 <LBB11_6>

0000000000009718 <LBB11_9>
    4835	7b 2a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r2
    4836	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB11_3>

0000000000009728 <LBB11_6>
    4837	7b 2a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r2
    4838	7b 9a f8 fc 00 00 00 00	*(u64 *)(r10 - 0x308) = r9
    4839	7b 8a 00 fd 00 00 00 00	*(u64 *)(r10 - 0x300) = r8
    4840	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
    4841	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    4842	07 02 00 00 01 00 00 00	r2 += 0x1
    4843	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB11_8>
    4844	bf a3 00 00 00 00 00 00	r3 = r10
    4845	07 03 00 00 e0 ff ff ff	r3 += -0x20
    4846	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    4848	b7 02 00 00 18 00 00 00	r2 = 0x18
    4849	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    4851	18 05 00 00 80 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b80 ll
    4853	85 10 00 00 e3 22 00 00	call 0x22e3 ; <core::result::unwrap_failed>
    4854	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000097b8 <LBB11_8>
    4855	bf 98 00 00 00 00 00 00	r8 = r9
    4856	07 08 00 00 10 00 00 00	r8 += 0x10
    4857	bf 81 00 00 00 00 00 00	r1 = r8
    4858	85 10 00 00 a7 0c 00 00	call 0xca7 ; <core::cell::Cell<T>::replace>
    4859	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    4860	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    4861	bf a1 00 00 00 00 00 00	r1 = r10
    4862	07 01 00 00 b0 fe ff ff	r1 += -0x150
    4863	85 10 00 00 13 0f 00 00	call 0xf13 ; <solana_program::program_pack::Pack::unpack>
    4864	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    4865	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    4866	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    4867	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    4868	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    4869	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    4870	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    4871	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    4872	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    4873	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    4874	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    4875	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    4876	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    4877	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    4878	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    4879	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    4880	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    4881	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    4882	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    4883	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    4884	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    4885	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    4886	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    4887	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    4888	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    4889	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    4890	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    4891	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    4892	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    4893	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    4894	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    4895	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    4896	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    4897	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    4898	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    4899	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    4900	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    4901	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    4902	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    4903	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    4904	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    4905	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    4906	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    4907	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    4908	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    4909	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB11_13>
    4910	05 00 19 00 00 00 00 00	goto +0x19 <LBB11_10>

0000000000009978 <LBB11_13>
    4911	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4912	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    4913	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4914	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    4915	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4916	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    4917	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4918	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    4919	bf a1 00 00 00 00 00 00	r1 = r10
    4920	07 01 00 00 90 ff ff ff	r1 += -0x70
    4921	bf a2 00 00 00 00 00 00	r2 = r10
    4922	07 02 00 00 b0 fe ff ff	r2 += -0x150
    4923	85 10 00 00 74 0c 00 00	call 0xc74 ; <<T as core::convert::From<T>>::from>
    4924	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    4925	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    4926	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    4927	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    4928	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    4929	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    4930	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    4931	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    4932	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    4933	07 02 00 00 ff ff ff ff	r2 += -0x1
    4934	bf 81 00 00 00 00 00 00	r1 = r8
    4935	05 00 78 00 00 00 00 00	goto +0x78 <LBB11_51>

0000000000009a40 <LBB11_10>
    4936	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    4937	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    4938	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    4939	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    4940	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    4941	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    4942	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    4943	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    4944	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    4945	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    4946	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    4947	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    4948	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    4949	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    4950	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    4951	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    4952	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    4953	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    4954	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    4955	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    4956	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    4957	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    4958	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    4959	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    4960	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    4961	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    4962	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    4963	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    4964	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    4965	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    4966	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    4967	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    4968	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    4969	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    4970	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    4971	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    4972	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    4973	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    4974	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    4975	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    4976	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    4977	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    4978	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    4979	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    4980	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    4981	07 02 00 00 ff ff ff ff	r2 += -0x1
    4982	bf 81 00 00 00 00 00 00	r1 = r8
    4983	85 10 00 00 2a 0c 00 00	call 0xc2a ; <core::cell::Cell<T>::replace>
    4984	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    4985	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
    4986	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    4987	07 02 00 00 01 00 00 00	r2 += 0x1
    4988	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB11_12>
    4989	bf a3 00 00 00 00 00 00	r3 = r10
    4990	07 03 00 00 e0 ff ff ff	r3 += -0x20
    4991	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    4993	b7 02 00 00 18 00 00 00	r2 = 0x18
    4994	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    4996	18 05 00 00 98 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24b98 ll
    4998	85 10 00 00 52 22 00 00	call 0x2252 ; <core::result::unwrap_failed>
    4999	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000009c40 <LBB11_12>
    5000	bf 89 00 00 00 00 00 00	r9 = r8
    5001	07 09 00 00 10 00 00 00	r9 += 0x10
    5002	bf 91 00 00 00 00 00 00	r1 = r9
    5003	85 10 00 00 16 0c 00 00	call 0xc16 ; <core::cell::Cell<T>::replace>
    5004	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    5005	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    5006	bf a1 00 00 00 00 00 00	r1 = r10
    5007	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5008	85 10 00 00 78 0c 00 00	call 0xc78 ; <solana_program::program_pack::Pack::unpack>
    5009	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    5010	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    5011	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    5012	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    5013	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    5014	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    5015	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    5016	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    5017	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    5018	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    5019	79 a1 e9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x117)
    5020	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5021	79 a1 f1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10f)
    5022	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5023	79 a1 f9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x107)
    5024	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5025	79 a1 01 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xff)
    5026	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    5027	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    5028	7b 1a d7 ff 00 00 00 00	*(u64 *)(r10 - 0x29) = r1
    5029	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    5030	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB11_15>
    5031	05 00 1a 00 00 00 00 00	goto +0x1a <LBB11_14>

0000000000009d40 <LBB11_15>
    5032	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    5033	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    5034	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    5035	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    5036	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    5037	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    5038	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    5039	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    5040	bf a1 00 00 00 00 00 00	r1 = r10
    5041	07 01 00 00 e0 ff ff ff	r1 += -0x20
    5042	bf a2 00 00 00 00 00 00	r2 = r10
    5043	07 02 00 00 b0 fe ff ff	r2 += -0x150
    5044	85 10 00 00 fb 0b 00 00	call 0xbfb ; <<T as core::convert::From<T>>::from>
    5045	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    5046	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    5047	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    5048	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    5049	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    5050	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    5051	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    5052	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    5053	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    5054	07 02 00 00 ff ff ff ff	r2 += -0x1
    5055	bf 91 00 00 00 00 00 00	r1 = r9

0000000000009e00 <LBB11_51>
    5056	85 10 00 00 e1 0b 00 00	call 0xbe1 ; <core::cell::Cell<T>::replace>
    5057	05 00 11 ff 00 00 00 00	goto -0xef <LBB11_52>

0000000000009e10 <LBB11_14>
    5058	71 a8 e8 fe 00 00 00 00	r8 = *(u8 *)(r10 - 0x118)
    5059	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    5060	7b 1a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r1
    5061	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    5062	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    5063	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    5064	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    5065	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    5066	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    5067	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    5068	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    5069	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    5070	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    5071	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    5072	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    5073	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    5074	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    5075	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    5076	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    5077	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    5078	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    5079	79 a1 d7 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x29)
    5080	7b 1a 87 ff 00 00 00 00	*(u64 *)(r10 - 0x79) = r1
    5081	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    5082	07 02 00 00 ff ff ff ff	r2 += -0x1
    5083	bf 91 00 00 00 00 00 00	r1 = r9
    5084	85 10 00 00 c5 0b 00 00	call 0xbc5 ; <core::cell::Cell<T>::replace>
    5085	bf a1 00 00 00 00 00 00	r1 = r10
    5086	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    5087	85 10 00 00 dd 0f 00 00	call 0xfdd ; <spl_token::state::Account::is_frozen>
    5088	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB11_17>
    5089	05 00 04 00 00 00 00 00	goto +0x4 <LBB11_16>

0000000000009f10 <LBB11_17>
    5090	bf a1 00 00 00 00 00 00	r1 = r10
    5091	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5092	b7 02 00 00 11 00 00 00	r2 = 0x11
    5093	05 00 26 00 00 00 00 00	goto +0x26 <LBB11_18>

0000000000009f30 <LBB11_16>
    5094	bf a1 00 00 00 00 00 00	r1 = r10
    5095	07 01 00 00 50 fd ff ff	r1 += -0x2b0
    5096	85 10 00 00 d9 0f 00 00	call 0xfd9 ; <spl_token::state::Account::is_native>
    5097	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB11_21>
    5098	05 00 04 00 00 00 00 00	goto +0x4 <LBB11_20>

0000000000009f58 <LBB11_21>
    5099	bf a1 00 00 00 00 00 00	r1 = r10
    5100	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5101	b7 02 00 00 0a 00 00 00	r2 = 0xa
    5102	05 00 1d 00 00 00 00 00	goto +0x1d <LBB11_18>

0000000000009f78 <LBB11_20>
    5103	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    5104	79 a2 f8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x308)
    5105	2d 12 01 00 00 00 00 00	if r2 > r1 goto +0x1 <LBB11_33>
    5106	05 00 04 00 00 00 00 00	goto +0x4 <LBB11_22>

0000000000009f98 <LBB11_33>
    5107	bf a1 00 00 00 00 00 00	r1 = r10
    5108	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5109	b7 02 00 00 01 00 00 00	r2 = 0x1
    5110	05 00 15 00 00 00 00 00	goto +0x15 <LBB11_18>

0000000000009fb8 <LBB11_22>
    5111	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    5112	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    5113	bf a3 00 00 00 00 00 00	r3 = r10
    5114	07 03 00 00 50 fd ff ff	r3 += -0x2b0
    5115	b7 02 00 00 20 00 00 00	r2 = 0x20
    5116	b7 04 00 00 20 00 00 00	r4 = 0x20
    5117	85 10 00 00 3d 0a 00 00	call 0xa3d ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    5118	55 00 0a 00 00 00 00 00	if r0 != 0x0 goto +0xa <LBB11_25>
    5119	79 a2 18 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e8)
    5120	57 02 00 00 ff 00 00 00	r2 &= 0xff
    5121	bf 81 00 00 00 00 00 00	r1 = r8
    5122	1d 21 13 00 00 00 00 00	if r1 == r2 goto +0x13 <LBB11_27>
    5123	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    5124	15 01 11 00 00 00 00 00	if r1 == 0x0 goto +0x11 <LBB11_27>
    5125	bf a1 00 00 00 00 00 00	r1 = r10
    5126	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5127	b7 02 00 00 12 00 00 00	r2 = 0x12
    5128	05 00 03 00 00 00 00 00	goto +0x3 <LBB11_18>

000000000000a048 <LBB11_25>
    5129	bf a1 00 00 00 00 00 00	r1 = r10
    5130	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5131	b7 02 00 00 03 00 00 00	r2 = 0x3

000000000000a060 <LBB11_18>
    5132	85 10 00 00 5e 13 00 00	call 0x135e ; <<T as core::convert::Into<U>>::into>

000000000000a068 <LBB11_19>
    5133	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    5134	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    5135	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    5136	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    5137	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    5138	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    5139	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    5140	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    5141	05 00 bd fe 00 00 00 00	goto -0x143 <LBB11_52>

000000000000a0b0 <LBB11_27>
    5142	61 a1 98 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x268)
    5143	15 01 69 00 01 00 00 00	if r1 == 0x1 goto +0x69 <LBB11_29>

000000000000a0c0 <LBB11_28>
    5144	bf a1 00 00 00 00 00 00	r1 = r10
    5145	07 01 00 00 30 fd ff ff	r1 += -0x2d0
    5146	bf a2 00 00 00 00 00 00	r2 = r10
    5147	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    5148	85 10 00 00 79 17 00 00	call 0x1779 ; <core::slice::iter::Iter<T>::as_slice>
    5149	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    5150	79 a2 30 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2d0)
    5151	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    5152	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    5153	bf a5 00 00 00 00 00 00	r5 = r10
    5154	bf a1 00 00 00 00 00 00	r1 = r10
    5155	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5156	bf a3 00 00 00 00 00 00	r3 = r10
    5157	07 03 00 00 70 fd ff ff	r3 += -0x290
    5158	79 a2 08 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2f8)
    5159	79 a4 f0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x310)
    5160	85 10 00 00 02 06 00 00	call 0x602 ; <spl_token::processor::Processor::validate_owner>
    5161	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    5162	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5163	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    5164	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5165	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    5166	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5167	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    5168	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    5169	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    5170	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB11_36>
    5171	05 00 7a 00 00 00 00 00	goto +0x7a <LBB11_34>

000000000000a1a0 <LBB11_36>
    5172	79 a3 90 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x270)
    5173	bf 31 00 00 00 00 00 00	r1 = r3
    5174	79 a4 f8 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x308)
    5175	1f 41 00 00 00 00 00 00	r1 -= r4
    5176	b7 02 00 00 01 00 00 00	r2 = 0x1
    5177	2d 31 01 00 00 00 00 00	if r1 > r3 goto +0x1 <LBB11_38>
    5178	b7 02 00 00 00 00 00 00	r2 = 0x0

000000000000a1d8 <LBB11_38>
    5179	57 02 00 00 01 00 00 00	r2 &= 0x1
    5180	55 02 88 00 00 00 00 00	if r2 != 0x0 goto +0x88 <LBB11_45>
    5181	79 a3 e8 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x318)
    5182	bf 39 00 00 00 00 00 00	r9 = r3
    5183	1f 49 00 00 00 00 00 00	r9 -= r4
    5184	b7 02 00 00 01 00 00 00	r2 = 0x1
    5185	2d 39 01 00 00 00 00 00	if r9 > r3 goto +0x1 <LBB11_41>
    5186	b7 02 00 00 00 00 00 00	r2 = 0x0

000000000000a218 <LBB11_41>
    5187	7b 8a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r8
    5188	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    5189	57 02 00 00 01 00 00 00	r2 &= 0x1
    5190	55 02 7e 00 00 00 00 00	if r2 != 0x0 goto +0x7e <LBB11_45>
    5191	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    5192	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    5193	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    5194	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    5195	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    5196	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    5197	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    5198	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    5199	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    5200	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    5201	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    5202	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    5203	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    5204	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    5205	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    5206	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    5207	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    5208	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    5209	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    5210	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    5211	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    5212	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    5213	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    5214	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    5215	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    5216	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    5217	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    5218	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    5219	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    5220	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    5221	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    5222	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    5223	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    5224	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    5225	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    5226	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    5227	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    5228	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    5229	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    5230	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    5231	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    5232	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    5233	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    5234	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    5235	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
    5236	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    5237	15 01 54 00 00 00 00 00	if r1 == 0x0 goto +0x54 <LBB11_44>
    5238	bf a3 00 00 00 00 00 00	r3 = r10
    5239	07 03 00 00 e0 ff ff ff	r3 += -0x20
    5240	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    5242	b7 02 00 00 10 00 00 00	r2 = 0x10
    5243	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    5245	18 05 00 00 b0 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24bb0 ll
    5247	85 10 00 00 59 21 00 00	call 0x2159 ; <core::result::unwrap_failed>
    5248	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000a408 <LBB11_29>
    5249	79 a1 f0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x310)
    5250	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    5251	bf a9 00 00 00 00 00 00	r9 = r10
    5252	07 09 00 00 9c fd ff ff	r9 += -0x264
    5253	b7 02 00 00 20 00 00 00	r2 = 0x20
    5254	bf 93 00 00 00 00 00 00	r3 = r9
    5255	b7 04 00 00 20 00 00 00	r4 = 0x20
    5256	85 10 00 00 a4 09 00 00	call 0x9a4 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    5257	15 00 8e ff 00 00 00 00	if r0 == 0x0 goto -0x72 <LBB11_28>
    5258	bf a1 00 00 00 00 00 00	r1 = r10
    5259	07 01 00 00 20 fd ff ff	r1 += -0x2e0
    5260	bf a2 00 00 00 00 00 00	r2 = r10
    5261	07 02 00 00 40 fd ff ff	r2 += -0x2c0
    5262	85 10 00 00 07 17 00 00	call 0x1707 ; <core::slice::iter::Iter<T>::as_slice>
    5263	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    5264	79 a2 20 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2e0)
    5265	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    5266	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    5267	bf a5 00 00 00 00 00 00	r5 = r10
    5268	bf a1 00 00 00 00 00 00	r1 = r10
    5269	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5270	79 a2 08 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x2f8)
    5271	bf 93 00 00 00 00 00 00	r3 = r9
    5272	79 a4 f0 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x310)
    5273	85 10 00 00 91 05 00 00	call 0x591 ; <spl_token::processor::Processor::validate_owner>
    5274	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    5275	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5276	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    5277	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5278	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    5279	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5280	61 a1 cc fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x134)
    5281	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    5282	61 a1 b0 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x150)
    5283	55 01 0a 00 10 00 00 00	if r1 != 0x10 goto +0xa <LBB11_34>
    5284	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    5285	79 a2 f8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x308)
    5286	2d 12 4c ff 00 00 00 00	if r2 > r1 goto -0xb4 <LBB11_33>
    5287	1f 21 00 00 00 00 00 00	r1 -= r2
    5288	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    5289	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB11_35>
    5290	05 00 89 ff 00 00 00 00	goto -0x77 <LBB11_36>

000000000000a558 <LBB11_35>
    5291	b7 01 00 00 00 00 00 00	r1 = 0x0
    5292	63 1a 98 fd 00 00 00 00	*(u32 *)(r10 - 0x268) = r1
    5293	05 00 86 ff 00 00 00 00	goto -0x7a <LBB11_36>

000000000000a570 <LBB11_34>
    5294	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    5295	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    5296	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    5297	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    5298	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    5299	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    5300	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    5301	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    5302	63 1a cc fe 00 00 00 00	*(u32 *)(r10 - 0x134) = r1
    5303	bf a1 00 00 00 00 00 00	r1 = r10
    5304	07 01 00 00 00 fe ff ff	r1 += -0x200
    5305	bf a2 00 00 00 00 00 00	r2 = r10
    5306	07 02 00 00 b0 fe ff ff	r2 += -0x150
    5307	85 10 00 00 f4 0a 00 00	call 0xaf4 ; <<T as core::convert::From<T>>::from>
    5308	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    5309	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    5310	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    5311	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    5312	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    5313	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    5314	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    5315	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    5316	05 00 0e fe 00 00 00 00	goto -0x1f2 <LBB11_52>

000000000000a628 <LBB11_45>
    5317	bf a1 00 00 00 00 00 00	r1 = r10
    5318	07 01 00 00 b0 fe ff ff	r1 += -0x150
    5319	b7 02 00 00 0e 00 00 00	r2 = 0xe
    5320	85 10 00 00 fc 0a 00 00	call 0xafc ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    5321	05 00 43 ff 00 00 00 00	goto -0xbd <LBB11_19>

000000000000a650 <LBB11_44>
    5322	bf 87 00 00 00 00 00 00	r7 = r8
    5323	07 07 00 00 10 00 00 00	r7 += 0x10
    5324	bf 71 00 00 00 00 00 00	r1 = r7
    5325	b7 02 00 00 ff ff ff ff	r2 = -0x1
    5326	85 10 00 00 d3 0a 00 00	call 0xad3 ; <core::cell::Cell<T>::replace>
    5327	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    5328	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    5329	bf a1 00 00 00 00 00 00	r1 = r10
    5330	07 01 00 00 00 fe ff ff	r1 += -0x200
    5331	bf a2 00 00 00 00 00 00	r2 = r10
    5332	07 02 00 00 b0 fe ff ff	r2 += -0x150
    5333	85 10 00 00 15 0b 00 00	call 0xb15 ; <solana_program::program_pack::Pack::pack>
    5334	79 a1 04 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1fc)
    5335	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5336	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    5337	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5338	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    5339	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5340	61 a1 1c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1e4)
    5341	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    5342	61 a1 00 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x200)
    5343	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB11_46>
    5344	05 00 48 00 00 00 00 00	goto +0x48 <LBB11_50>

000000000000a708 <LBB11_46>
    5345	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    5346	07 02 00 00 01 00 00 00	r2 += 0x1
    5347	bf 71 00 00 00 00 00 00	r1 = r7
    5348	85 10 00 00 bd 0a 00 00	call 0xabd ; <core::cell::Cell<T>::replace>
    5349	79 a1 87 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x79)
    5350	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    5351	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    5352	7b 1a f9 fe 00 00 00 00	*(u64 *)(r10 - 0x107) = r1
    5353	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    5354	7b 1a f1 fe 00 00 00 00	*(u64 *)(r10 - 0x10f) = r1
    5355	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    5356	7b 1a e9 fe 00 00 00 00	*(u64 *)(r10 - 0x117) = r1
    5357	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    5358	7b 1a e1 fe 00 00 00 00	*(u64 *)(r10 - 0x11f) = r1
    5359	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    5360	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    5361	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    5362	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    5363	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    5364	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    5365	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    5366	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    5367	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    5368	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    5369	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    5370	73 1a e0 fe 00 00 00 00	*(u8 *)(r10 - 0x120) = r1
    5371	7b 9a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r9
    5372	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    5373	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
    5374	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    5375	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB11_48>
    5376	bf a3 00 00 00 00 00 00	r3 = r10
    5377	07 03 00 00 e0 ff ff ff	r3 += -0x20
    5378	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    5380	b7 02 00 00 10 00 00 00	r2 = 0x10
    5381	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    5383	18 05 00 00 c8 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24bc8 ll
    5385	85 10 00 00 cf 20 00 00	call 0x20cf ; <core::result::unwrap_failed>
    5386	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000a858 <LBB11_48>
    5387	bf 87 00 00 00 00 00 00	r7 = r8
    5388	07 07 00 00 10 00 00 00	r7 += 0x10
    5389	bf 71 00 00 00 00 00 00	r1 = r7
    5390	b7 02 00 00 ff ff ff ff	r2 = -0x1
    5391	85 10 00 00 92 0a 00 00	call 0xa92 ; <core::cell::Cell<T>::replace>
    5392	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    5393	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    5394	bf a1 00 00 00 00 00 00	r1 = r10
    5395	07 01 00 00 00 fe ff ff	r1 += -0x200
    5396	bf a2 00 00 00 00 00 00	r2 = r10
    5397	07 02 00 00 b0 fe ff ff	r2 += -0x150
    5398	85 10 00 00 e8 0a 00 00	call 0xae8 ; <solana_program::program_pack::Pack::pack>
    5399	79 a1 04 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1fc)
    5400	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5401	79 a1 0c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f4)
    5402	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5403	79 a1 14 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ec)
    5404	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5405	61 a1 1c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1e4)
    5406	63 1a d0 ff 00 00 00 00	*(u32 *)(r10 - 0x30) = r1
    5407	61 a1 00 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x200)
    5408	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB11_49>
    5409	05 00 07 00 00 00 00 00	goto +0x7 <LBB11_50>

000000000000a910 <LBB11_49>
    5410	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    5411	07 02 00 00 01 00 00 00	r2 += 0x1
    5412	bf 71 00 00 00 00 00 00	r1 = r7
    5413	85 10 00 00 7c 0a 00 00	call 0xa7c ; <core::cell::Cell<T>::replace>
    5414	b7 01 00 00 10 00 00 00	r1 = 0x10
    5415	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    5416	05 00 aa fd 00 00 00 00	goto -0x256 <LBB11_52>

000000000000a948 <LBB11_50>
    5417	63 1a b0 fe 00 00 00 00	*(u32 *)(r10 - 0x150) = r1
    5418	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    5419	7b 1a b4 fe 00 00 00 00	*(u64 *)(r10 - 0x14c) = r1
    5420	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    5421	7b 1a bc fe 00 00 00 00	*(u64 *)(r10 - 0x144) = r1
    5422	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    5423	7b 1a c4 fe 00 00 00 00	*(u64 *)(r10 - 0x13c) = r1
    5424	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    5425	63 1a cc fe 00 00 00 00	*(u32 *)(r10 - 0x134) = r1
    5426	bf a1 00 00 00 00 00 00	r1 = r10
    5427	07 01 00 00 00 fe ff ff	r1 += -0x200
    5428	bf a2 00 00 00 00 00 00	r2 = r10
    5429	07 02 00 00 b0 fe ff ff	r2 += -0x150
    5430	85 10 00 00 79 0a 00 00	call 0xa79 ; <<T as core::convert::From<T>>::from>
    5431	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    5432	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    5433	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    5434	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    5435	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    5436	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    5437	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    5438	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    5439	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    5440	07 02 00 00 01 00 00 00	r2 += 0x1
    5441	bf 71 00 00 00 00 00 00	r1 = r7
    5442	05 00 7d fe 00 00 00 00	goto -0x183 <LBB11_51>

000000000000aa18 <spl_token::processor::Processor::process_close_account>
    5443	bf 29 00 00 00 00 00 00	r9 = r2
    5444	bf 16 00 00 00 00 00 00	r6 = r1
    5445	7b 3a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r3
    5446	27 04 00 00 30 00 00 00	r4 *= 0x30
    5447	0f 43 00 00 00 00 00 00	r3 += r4
    5448	7b 3a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r3
    5449	bf a1 00 00 00 00 00 00	r1 = r10
    5450	07 01 00 00 00 ff ff ff	r1 += -0x100
    5451	bf a2 00 00 00 00 00 00	r2 = r10
    5452	07 02 00 00 90 fd ff ff	r2 += -0x270
    5453	85 10 00 00 15 14 00 00	call 0x1415 ; <solana_program::account_info::next_account_info>
    5454	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5455	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5456	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5457	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5458	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5459	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5460	79 a7 08 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0xf8)
    5461	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5462	15 01 11 00 01 00 00 00	if r1 == 0x1 goto +0x11 <LBB12_2>
    5463	bf a1 00 00 00 00 00 00	r1 = r10
    5464	07 01 00 00 00 ff ff ff	r1 += -0x100
    5465	bf a2 00 00 00 00 00 00	r2 = r10
    5466	07 02 00 00 90 fd ff ff	r2 += -0x270
    5467	85 10 00 00 07 14 00 00	call 0x1407 ; <solana_program::account_info::next_account_info>
    5468	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5469	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5470	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5471	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5472	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5473	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5474	79 a8 08 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0xf8)
    5475	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5476	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB12_6>
    5477	05 00 0e 00 00 00 00 00	goto +0xe <LBB12_5>

000000000000ab30 <LBB12_6>
    5478	7b 8a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r8
    5479	05 00 01 00 00 00 00 00	goto +0x1 <LBB12_3>

000000000000ab40 <LBB12_2>
    5480	7b 7a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r7

000000000000ab48 <LBB12_3>
    5481	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    5482	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    5483	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5484	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    5485	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5486	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1

000000000000ab78 <LBB12_4>
    5487	bf a2 00 00 00 00 00 00	r2 = r10
    5488	07 02 00 00 00 ff ff ff	r2 += -0x100
    5489	bf 61 00 00 00 00 00 00	r1 = r6
    5490	85 10 00 00 3d 0a 00 00	call 0xa3d ; <<T as core::convert::From<T>>::from>

000000000000ab98 <LBB12_34>
    5491	95 00 00 00 00 00 00 00	exit

000000000000aba0 <LBB12_5>
    5492	bf a1 00 00 00 00 00 00	r1 = r10
    5493	07 01 00 00 00 ff ff ff	r1 += -0x100
    5494	bf a2 00 00 00 00 00 00	r2 = r10
    5495	07 02 00 00 90 fd ff ff	r2 += -0x270
    5496	85 10 00 00 ea 13 00 00	call 0x13ea ; <solana_program::account_info::next_account_info>
    5497	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5498	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5499	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5500	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5501	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5502	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5503	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    5504	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5505	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB12_10>
    5506	05 00 02 00 00 00 00 00	goto +0x2 <LBB12_7>

000000000000ac18 <LBB12_10>
    5507	7b 2a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r2
    5508	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB12_3>

000000000000ac28 <LBB12_7>
    5509	7b 2a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r2
    5510	7b 9a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r9
    5511	7b 8a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r8
    5512	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
    5513	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
    5514	07 02 00 00 01 00 00 00	r2 += 0x1
    5515	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB12_9>
    5516	bf a3 00 00 00 00 00 00	r3 = r10
    5517	07 03 00 00 f8 ff ff ff	r3 += -0x8
    5518	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    5520	b7 02 00 00 18 00 00 00	r2 = 0x18
    5521	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    5523	18 05 00 00 e0 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24be0 ll
    5525	85 10 00 00 43 20 00 00	call 0x2043 ; <core::result::unwrap_failed>
    5526	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000acb8 <LBB12_9>
    5527	bf 89 00 00 00 00 00 00	r9 = r8
    5528	07 09 00 00 10 00 00 00	r9 += 0x10
    5529	bf 91 00 00 00 00 00 00	r1 = r9
    5530	85 10 00 00 07 0a 00 00	call 0xa07 ; <core::cell::Cell<T>::replace>
    5531	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    5532	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    5533	bf a1 00 00 00 00 00 00	r1 = r10
    5534	07 01 00 00 00 ff ff ff	r1 += -0x100
    5535	85 10 00 00 73 0c 00 00	call 0xc73 ; <solana_program::program_pack::Pack::unpack>
    5536	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    5537	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5538	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5539	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5540	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5541	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5542	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5543	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    5544	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    5545	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    5546	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    5547	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    5548	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    5549	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    5550	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    5551	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    5552	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    5553	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    5554	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    5555	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    5556	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    5557	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    5558	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    5559	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    5560	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    5561	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    5562	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    5563	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    5564	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    5565	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    5566	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    5567	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    5568	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    5569	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    5570	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    5571	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    5572	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    5573	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    5574	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    5575	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    5576	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    5577	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    5578	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    5579	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    5580	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5581	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB12_12>
    5582	05 00 11 00 00 00 00 00	goto +0x11 <LBB12_11>

000000000000ae78 <LBB12_12>
    5583	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    5584	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    5585	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5586	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    5587	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5588	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    5589	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    5590	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    5591	bf a2 00 00 00 00 00 00	r2 = r10
    5592	07 02 00 00 00 ff ff ff	r2 += -0x100
    5593	bf 61 00 00 00 00 00 00	r1 = r6
    5594	85 10 00 00 d5 09 00 00	call 0x9d5 ; <<T as core::convert::From<T>>::from>
    5595	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    5596	07 02 00 00 ff ff ff ff	r2 += -0x1
    5597	bf 91 00 00 00 00 00 00	r1 = r9

000000000000aef0 <LBB12_33>
    5598	85 10 00 00 c3 09 00 00	call 0x9c3 ; <core::cell::Cell<T>::replace>
    5599	05 00 93 ff 00 00 00 00	goto -0x6d <LBB12_34>

000000000000af00 <LBB12_11>
    5600	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    5601	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    5602	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    5603	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    5604	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    5605	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    5606	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    5607	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    5608	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    5609	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    5610	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    5611	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    5612	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    5613	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    5614	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    5615	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    5616	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    5617	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    5618	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    5619	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    5620	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    5621	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    5622	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    5623	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    5624	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    5625	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    5626	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    5627	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    5628	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    5629	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    5630	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    5631	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    5632	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    5633	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    5634	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    5635	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    5636	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    5637	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    5638	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5639	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    5640	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5641	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    5642	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    5643	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    5644	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    5645	07 02 00 00 ff ff ff ff	r2 += -0x1
    5646	bf 91 00 00 00 00 00 00	r1 = r9
    5647	85 10 00 00 92 09 00 00	call 0x992 ; <core::cell::Cell<T>::replace>
    5648	bf a1 00 00 00 00 00 00	r1 = r10
    5649	07 01 00 00 a0 fd ff ff	r1 += -0x260
    5650	85 10 00 00 af 0d 00 00	call 0xdaf ; <spl_token::state::Account::is_native>
    5651	55 00 02 00 00 00 00 00	if r0 != 0x0 goto +0x2 <LBB12_14>
    5652	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    5653	55 01 5b 00 00 00 00 00	if r1 != 0x0 goto +0x5b <LBB12_18>

000000000000b0b0 <LBB12_14>
    5654	79 a1 2c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d4)
    5655	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5656	79 a1 34 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1cc)
    5657	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5658	79 a1 3c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c4)
    5659	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5660	79 a1 44 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1bc)
    5661	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    5662	61 a1 28 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1d8)
    5663	79 a2 d8 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x228)
    5664	7b 2a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r2
    5665	79 a2 d0 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x230)
    5666	7b 2a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r2
    5667	79 a2 c8 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x238)
    5668	7b 2a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r2
    5669	79 a2 c0 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x240)
    5670	7b 2a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r2
    5671	15 01 08 00 01 00 00 00	if r1 == 0x1 goto +0x8 <LBB12_16>
    5672	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5673	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    5674	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5675	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5676	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    5677	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5678	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5679	05 00 07 00 00 00 00 00	goto +0x7 <LBB12_17>

000000000000b180 <LBB12_16>
    5680	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    5681	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    5682	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5683	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    5684	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5685	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    5686	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)

000000000000b1b8 <LBB12_17>
    5687	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    5688	79 a8 78 fd 00 00 00 00	r8 = *(u64 *)(r10 - 0x288)
    5689	79 a9 70 fd 00 00 00 00	r9 = *(u64 *)(r10 - 0x290)
    5690	bf a1 00 00 00 00 00 00	r1 = r10
    5691	07 01 00 00 80 fd ff ff	r1 += -0x280
    5692	bf a2 00 00 00 00 00 00	r2 = r10
    5693	07 02 00 00 90 fd ff ff	r2 += -0x270
    5694	85 10 00 00 57 15 00 00	call 0x1557 ; <core::slice::iter::Iter<T>::as_slice>
    5695	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    5696	79 a2 80 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x280)
    5697	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    5698	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    5699	bf a5 00 00 00 00 00 00	r5 = r10
    5700	bf a1 00 00 00 00 00 00	r1 = r10
    5701	07 01 00 00 00 ff ff ff	r1 += -0x100
    5702	bf a3 00 00 00 00 00 00	r3 = r10
    5703	07 03 00 00 b8 ff ff ff	r3 += -0x48
    5704	bf 92 00 00 00 00 00 00	r2 = r9
    5705	79 a4 68 fd 00 00 00 00	r4 = *(u64 *)(r10 - 0x298)
    5706	85 10 00 00 e0 03 00 00	call 0x3e0 ; <spl_token::processor::Processor::validate_owner>
    5707	79 a1 04 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xfc)
    5708	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5709	79 a1 0c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf4)
    5710	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5711	79 a1 14 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xec)
    5712	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5713	61 a1 1c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xe4)
    5714	63 1a 68 fe 00 00 00 00	*(u32 *)(r10 - 0x198) = r1
    5715	61 a1 00 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x100)
    5716	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB12_19>
    5717	05 00 11 00 00 00 00 00	goto +0x11 <LBB12_22>

000000000000b2b0 <LBB12_19>
    5718	bf 81 00 00 00 00 00 00	r1 = r8
    5719	85 10 00 00 b0 15 00 00	call 0x15b0 ; <solana_program::account_info::AccountInfo::lamports>
    5720	bf 08 00 00 00 00 00 00	r8 = r0
    5721	bf 71 00 00 00 00 00 00	r1 = r7
    5722	85 10 00 00 ad 15 00 00	call 0x15ad ; <solana_program::account_info::AccountInfo::lamports>
    5723	bf 89 00 00 00 00 00 00	r9 = r8
    5724	0f 09 00 00 00 00 00 00	r9 += r0
    5725	b7 01 00 00 01 00 00 00	r1 = 0x1
    5726	2d 98 01 00 00 00 00 00	if r8 > r9 goto +0x1 <LBB12_21>
    5727	b7 01 00 00 00 00 00 00	r1 = 0x0

000000000000b300 <LBB12_21>
    5728	57 01 00 00 01 00 00 00	r1 &= 0x1
    5729	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB12_30>
    5730	05 00 12 00 00 00 00 00	goto +0x12 <LBB12_23>

000000000000b318 <LBB12_30>
    5731	bf 61 00 00 00 00 00 00	r1 = r6
    5732	b7 02 00 00 0e 00 00 00	r2 = 0xe
    5733	85 10 00 00 5f 09 00 00	call 0x95f ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    5734	05 00 0c ff 00 00 00 00	goto -0xf4 <LBB12_34>

000000000000b338 <LBB12_22>
    5735	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    5736	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    5737	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    5738	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5739	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    5740	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5741	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    5742	61 a1 68 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x198)
    5743	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    5744	05 00 fe fe 00 00 00 00	goto -0x102 <LBB12_4>

000000000000b388 <LBB12_18>
    5745	bf 61 00 00 00 00 00 00	r1 = r6
    5746	b7 02 00 00 0b 00 00 00	r2 = 0xb
    5747	85 10 00 00 f7 10 00 00	call 0x10f7 ; <<T as core::convert::Into<U>>::into>
    5748	05 00 fe fe 00 00 00 00	goto -0x102 <LBB12_34>

000000000000b3a8 <LBB12_23>
    5749	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    5750	79 18 08 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x8)
    5751	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    5752	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB12_25>
    5753	bf a3 00 00 00 00 00 00	r3 = r10
    5754	07 03 00 00 f8 ff ff ff	r3 += -0x8
    5755	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    5757	b7 02 00 00 10 00 00 00	r2 = 0x10
    5758	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    5760	18 05 00 00 f8 4b 02 00 00 00 00 00 00 00 00 00	r5 = 0x24bf8 ll
    5762	85 10 00 00 56 1f 00 00	call 0x1f56 ; <core::result::unwrap_failed>
    5763	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000b420 <LBB12_25>
    5764	7b 8a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r8
    5765	07 08 00 00 10 00 00 00	r8 += 0x10
    5766	bf 81 00 00 00 00 00 00	r1 = r8
    5767	b7 02 00 00 ff ff ff ff	r2 = -0x1
    5768	85 10 00 00 19 09 00 00	call 0x919 ; <core::cell::Cell<T>::replace>
    5769	79 a2 78 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x288)
    5770	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
    5771	7b 91 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r9
    5772	79 22 10 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x10)
    5773	07 02 00 00 01 00 00 00	r2 += 0x1
    5774	bf 81 00 00 00 00 00 00	r1 = r8
    5775	85 10 00 00 12 09 00 00	call 0x912 ; <core::cell::Cell<T>::replace>
    5776	79 79 08 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x8)
    5777	79 91 10 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x10)
    5778	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB12_27>
    5779	bf a3 00 00 00 00 00 00	r3 = r10
    5780	07 03 00 00 f8 ff ff ff	r3 += -0x8
    5781	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    5783	b7 02 00 00 10 00 00 00	r2 = 0x10
    5784	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    5786	18 05 00 00 10 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c10 ll
    5788	85 10 00 00 3c 1f 00 00	call 0x1f3c ; <core::result::unwrap_failed>
    5789	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000b4f0 <LBB12_27>
    5790	bf 98 00 00 00 00 00 00	r8 = r9
    5791	07 08 00 00 10 00 00 00	r8 += 0x10
    5792	bf 81 00 00 00 00 00 00	r1 = r8
    5793	b7 02 00 00 ff ff ff ff	r2 = -0x1
    5794	85 10 00 00 ff 08 00 00	call 0x8ff ; <core::cell::Cell<T>::replace>
    5795	79 91 18 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x18)
    5796	b7 02 00 00 00 00 00 00	r2 = 0x0
    5797	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
    5798	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    5799	07 02 00 00 01 00 00 00	r2 += 0x1
    5800	bf 81 00 00 00 00 00 00	r1 = r8
    5801	85 10 00 00 f8 08 00 00	call 0x8f8 ; <core::cell::Cell<T>::replace>
    5802	b7 02 00 00 00 00 00 00	r2 = 0x0
    5803	7b 2a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r2
    5804	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    5805	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    5806	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    5807	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    5808	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    5809	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    5810	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    5811	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    5812	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    5813	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    5814	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    5815	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    5816	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    5817	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    5818	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    5819	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    5820	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    5821	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    5822	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    5823	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    5824	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    5825	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    5826	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    5827	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    5828	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    5829	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    5830	7b 2a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r2
    5831	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    5832	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    5833	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    5834	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    5835	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    5836	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    5837	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    5838	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    5839	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    5840	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    5841	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    5842	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    5843	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    5844	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    5845	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    5846	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    5847	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
    5848	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    5849	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB12_29>
    5850	bf a3 00 00 00 00 00 00	r3 = r10
    5851	07 03 00 00 f8 ff ff ff	r3 += -0x8
    5852	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    5854	b7 02 00 00 10 00 00 00	r2 = 0x10
    5855	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    5857	18 05 00 00 28 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c28 ll
    5859	85 10 00 00 f5 1e 00 00	call 0x1ef5 ; <core::result::unwrap_failed>
    5860	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000b728 <LBB12_29>
    5861	bf 87 00 00 00 00 00 00	r7 = r8
    5862	07 07 00 00 10 00 00 00	r7 += 0x10
    5863	bf 71 00 00 00 00 00 00	r1 = r7
    5864	b7 02 00 00 ff ff ff ff	r2 = -0x1
    5865	85 10 00 00 b8 08 00 00	call 0x8b8 ; <core::cell::Cell<T>::replace>
    5866	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    5867	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    5868	bf a1 00 00 00 00 00 00	r1 = r10
    5869	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    5870	bf a2 00 00 00 00 00 00	r2 = r10
    5871	07 02 00 00 00 ff ff ff	r2 += -0x100
    5872	85 10 00 00 fa 08 00 00	call 0x8fa ; <solana_program::program_pack::Pack::pack>
    5873	79 a1 54 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ac)
    5874	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    5875	79 a1 5c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a4)
    5876	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    5877	79 a1 64 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x19c)
    5878	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    5879	61 a1 6c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x194)
    5880	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    5881	61 a1 50 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1b0)
    5882	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB12_31>
    5883	05 00 07 00 00 00 00 00	goto +0x7 <LBB12_32>

000000000000b7e0 <LBB12_31>
    5884	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    5885	07 02 00 00 01 00 00 00	r2 += 0x1
    5886	bf 71 00 00 00 00 00 00	r1 = r7
    5887	85 10 00 00 a2 08 00 00	call 0x8a2 ; <core::cell::Cell<T>::replace>
    5888	b7 01 00 00 10 00 00 00	r1 = 0x10
    5889	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    5890	05 00 70 fe 00 00 00 00	goto -0x190 <LBB12_34>

000000000000b818 <LBB12_32>
    5891	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    5892	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    5893	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    5894	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    5895	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    5896	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    5897	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    5898	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    5899	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    5900	bf a2 00 00 00 00 00 00	r2 = r10
    5901	07 02 00 00 00 ff ff ff	r2 += -0x100
    5902	bf 61 00 00 00 00 00 00	r1 = r6
    5903	85 10 00 00 a0 08 00 00	call 0x8a0 ; <<T as core::convert::From<T>>::from>
    5904	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    5905	07 02 00 00 01 00 00 00	r2 += 0x1
    5906	bf 71 00 00 00 00 00 00	r1 = r7
    5907	05 00 ca fe 00 00 00 00	goto -0x136 <LBB12_33>

000000000000b8a0 <spl_token::processor::Processor::process_toggle_freeze_account>
    5908	bf 58 00 00 00 00 00 00	r8 = r5
    5909	bf 29 00 00 00 00 00 00	r9 = r2
    5910	bf 16 00 00 00 00 00 00	r6 = r1
    5911	7b 3a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r3
    5912	27 04 00 00 30 00 00 00	r4 *= 0x30
    5913	0f 43 00 00 00 00 00 00	r3 += r4
    5914	7b 3a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r3
    5915	bf a1 00 00 00 00 00 00	r1 = r10
    5916	07 01 00 00 00 ff ff ff	r1 += -0x100
    5917	bf a2 00 00 00 00 00 00	r2 = r10
    5918	07 02 00 00 90 fd ff ff	r2 += -0x270
    5919	85 10 00 00 43 12 00 00	call 0x1243 ; <solana_program::account_info::next_account_info>
    5920	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5921	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5922	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5923	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5924	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5925	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5926	79 a7 08 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0xf8)
    5927	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5928	15 01 11 00 01 00 00 00	if r1 == 0x1 goto +0x11 <LBB13_2>
    5929	bf a1 00 00 00 00 00 00	r1 = r10
    5930	07 01 00 00 00 ff ff ff	r1 += -0x100
    5931	bf a2 00 00 00 00 00 00	r2 = r10
    5932	07 02 00 00 90 fd ff ff	r2 += -0x270
    5933	85 10 00 00 35 12 00 00	call 0x1235 ; <solana_program::account_info::next_account_info>
    5934	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5935	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5936	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5937	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5938	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5939	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5940	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    5941	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5942	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB13_9>
    5943	05 00 0e 00 00 00 00 00	goto +0xe <LBB13_5>

000000000000b9c0 <LBB13_9>
    5944	7b 2a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r2
    5945	05 00 01 00 00 00 00 00	goto +0x1 <LBB13_3>

000000000000b9d0 <LBB13_2>
    5946	7b 7a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r7

000000000000b9d8 <LBB13_3>
    5947	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    5948	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    5949	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    5950	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    5951	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    5952	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1

000000000000ba08 <LBB13_4>
    5953	bf a2 00 00 00 00 00 00	r2 = r10
    5954	07 02 00 00 00 ff ff ff	r2 += -0x100
    5955	bf 61 00 00 00 00 00 00	r1 = r6
    5956	85 10 00 00 6b 08 00 00	call 0x86b ; <<T as core::convert::From<T>>::from>

000000000000ba28 <LBB13_36>
    5957	95 00 00 00 00 00 00 00	exit

000000000000ba30 <LBB13_5>
    5958	7b 2a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r2
    5959	bf a1 00 00 00 00 00 00	r1 = r10
    5960	07 01 00 00 00 ff ff ff	r1 += -0x100
    5961	bf a2 00 00 00 00 00 00	r2 = r10
    5962	07 02 00 00 90 fd ff ff	r2 += -0x270
    5963	85 10 00 00 17 12 00 00	call 0x1217 ; <solana_program::account_info::next_account_info>
    5964	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    5965	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    5966	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    5967	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    5968	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    5969	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    5970	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    5971	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    5972	15 01 e3 ff 01 00 00 00	if r1 == 0x1 goto -0x1d <LBB13_9>
    5973	7b 2a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r2
    5974	7b 9a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r9
    5975	7b 8a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r8
    5976	79 79 10 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x10)
    5977	79 92 10 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x10)
    5978	07 02 00 00 01 00 00 00	r2 += 0x1
    5979	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB13_8>
    5980	bf a3 00 00 00 00 00 00	r3 = r10
    5981	07 03 00 00 f8 ff ff ff	r3 += -0x8
    5982	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    5984	b7 02 00 00 18 00 00 00	r2 = 0x18
    5985	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    5987	18 05 00 00 40 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c40 ll
    5989	85 10 00 00 73 1e 00 00	call 0x1e73 ; <core::result::unwrap_failed>
    5990	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000bb38 <LBB13_8>
    5991	bf 98 00 00 00 00 00 00	r8 = r9
    5992	07 08 00 00 10 00 00 00	r8 += 0x10
    5993	bf 81 00 00 00 00 00 00	r1 = r8
    5994	85 10 00 00 37 08 00 00	call 0x837 ; <core::cell::Cell<T>::replace>
    5995	79 92 18 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x18)
    5996	79 93 20 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x20)
    5997	bf a1 00 00 00 00 00 00	r1 = r10
    5998	07 01 00 00 00 ff ff ff	r1 += -0x100
    5999	85 10 00 00 a3 0a 00 00	call 0xaa3 ; <solana_program::program_pack::Pack::unpack>
    6000	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    6001	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    6002	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    6003	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    6004	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    6005	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    6006	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    6007	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    6008	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    6009	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    6010	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    6011	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    6012	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    6013	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    6014	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    6015	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    6016	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    6017	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    6018	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    6019	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    6020	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    6021	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    6022	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    6023	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    6024	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    6025	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    6026	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    6027	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    6028	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    6029	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    6030	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    6031	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    6032	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    6033	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    6034	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    6035	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    6036	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    6037	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    6038	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    6039	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    6040	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    6041	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    6042	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    6043	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    6044	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    6045	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB13_11>
    6046	05 00 11 00 00 00 00 00	goto +0x11 <LBB13_10>

000000000000bcf8 <LBB13_11>
    6047	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    6048	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    6049	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    6050	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    6051	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    6052	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    6053	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    6054	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    6055	bf a2 00 00 00 00 00 00	r2 = r10
    6056	07 02 00 00 00 ff ff ff	r2 += -0x100
    6057	bf 61 00 00 00 00 00 00	r1 = r6
    6058	85 10 00 00 05 08 00 00	call 0x805 ; <<T as core::convert::From<T>>::from>
    6059	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    6060	07 02 00 00 ff ff ff ff	r2 += -0x1
    6061	bf 81 00 00 00 00 00 00	r1 = r8

000000000000bd70 <LBB13_35>
    6062	85 10 00 00 f3 07 00 00	call 0x7f3 ; <core::cell::Cell<T>::replace>
    6063	05 00 95 ff 00 00 00 00	goto -0x6b <LBB13_36>

000000000000bd80 <LBB13_10>
    6064	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    6065	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    6066	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    6067	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    6068	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    6069	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    6070	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    6071	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    6072	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    6073	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    6074	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    6075	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    6076	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    6077	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    6078	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    6079	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    6080	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    6081	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    6082	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    6083	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    6084	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    6085	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    6086	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    6087	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    6088	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    6089	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    6090	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    6091	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    6092	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    6093	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    6094	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    6095	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    6096	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    6097	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    6098	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    6099	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    6100	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    6101	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    6102	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    6103	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    6104	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    6105	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    6106	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    6107	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    6108	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    6109	07 02 00 00 ff ff ff ff	r2 += -0x1
    6110	bf 81 00 00 00 00 00 00	r1 = r8
    6111	85 10 00 00 c2 07 00 00	call 0x7c2 ; <core::cell::Cell<T>::replace>
    6112	bf a1 00 00 00 00 00 00	r1 = r10
    6113	07 01 00 00 a0 fd ff ff	r1 += -0x260
    6114	85 10 00 00 da 0b 00 00	call 0xbda ; <spl_token::state::Account::is_frozen>
    6115	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    6116	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB13_12>
    6117	05 00 0a 00 00 00 00 00	goto +0xa <LBB13_14>

000000000000bf30 <LBB13_12>
    6118	55 00 0a 00 00 00 00 00	if r0 != 0x0 goto +0xa <LBB13_15>

000000000000bf38 <LBB13_13>
    6119	bf a1 00 00 00 00 00 00	r1 = r10
    6120	07 01 00 00 a0 fd ff ff	r1 += -0x260
    6121	85 10 00 00 d8 0b 00 00	call 0xbd8 ; <spl_token::state::Account::is_native>
    6122	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB13_17>
    6123	05 00 09 00 00 00 00 00	goto +0x9 <LBB13_16>

000000000000bf60 <LBB13_17>
    6124	bf 61 00 00 00 00 00 00	r1 = r6
    6125	b7 02 00 00 0a 00 00 00	r2 = 0xa
    6126	85 10 00 00 7c 0f 00 00	call 0xf7c ; <<T as core::convert::Into<U>>::into>
    6127	05 00 55 ff 00 00 00 00	goto -0xab <LBB13_36>

000000000000bf80 <LBB13_14>
    6128	55 00 f6 ff 00 00 00 00	if r0 != 0x0 goto -0xa <LBB13_13>

000000000000bf88 <LBB13_15>
    6129	bf 61 00 00 00 00 00 00	r1 = r6
    6130	b7 02 00 00 0d 00 00 00	r2 = 0xd
    6131	85 10 00 00 77 0f 00 00	call 0xf77 ; <<T as core::convert::Into<U>>::into>
    6132	05 00 50 ff 00 00 00 00	goto -0xb0 <LBB13_36>

000000000000bfa8 <LBB13_16>
    6133	79 a8 78 fd 00 00 00 00	r8 = *(u64 *)(r10 - 0x288)
    6134	79 81 00 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x0)
    6135	bf a3 00 00 00 00 00 00	r3 = r10
    6136	07 03 00 00 a0 fd ff ff	r3 += -0x260
    6137	b7 02 00 00 20 00 00 00	r2 = 0x20
    6138	b7 04 00 00 20 00 00 00	r4 = 0x20
    6139	85 10 00 00 3f 06 00 00	call 0x63f ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    6140	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB13_21>
    6141	05 00 04 00 00 00 00 00	goto +0x4 <LBB13_18>

000000000000bff0 <LBB13_21>
    6142	bf 61 00 00 00 00 00 00	r1 = r6
    6143	b7 02 00 00 03 00 00 00	r2 = 0x3
    6144	85 10 00 00 6a 0f 00 00	call 0xf6a ; <<T as core::convert::Into<U>>::into>
    6145	05 00 43 ff 00 00 00 00	goto -0xbd <LBB13_36>

000000000000c010 <LBB13_18>
    6146	79 88 10 00 00 00 00 00	r8 = *(u64 *)(r8 + 0x10)
    6147	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    6148	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB13_20>
    6149	bf a3 00 00 00 00 00 00	r3 = r10
    6150	07 03 00 00 f8 ff ff ff	r3 += -0x8
    6151	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    6153	b7 02 00 00 10 00 00 00	r2 = 0x10
    6154	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    6156	18 05 00 00 58 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c58 ll
    6158	85 10 00 00 ca 1d 00 00	call 0x1dca ; <core::result::unwrap_failed>
    6159	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000c080 <LBB13_20>
    6160	bf 89 00 00 00 00 00 00	r9 = r8
    6161	07 09 00 00 10 00 00 00	r9 += 0x10
    6162	bf 91 00 00 00 00 00 00	r1 = r9
    6163	b7 02 00 00 ff ff ff ff	r2 = -0x1
    6164	85 10 00 00 8d 07 00 00	call 0x78d ; <core::cell::Cell<T>::replace>
    6165	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
    6166	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
    6167	bf a1 00 00 00 00 00 00	r1 = r10
    6168	07 01 00 00 00 ff ff ff	r1 += -0x100
    6169	85 10 00 00 ef 07 00 00	call 0x7ef ; <solana_program::program_pack::Pack::unpack>
    6170	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    6171	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    6172	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    6173	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    6174	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    6175	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    6176	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    6177	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    6178	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    6179	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    6180	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    6181	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    6182	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    6183	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    6184	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    6185	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    6186	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    6187	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB13_23>
    6188	05 00 10 00 00 00 00 00	goto +0x10 <LBB13_22>

000000000000c168 <LBB13_23>
    6189	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    6190	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    6191	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    6192	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    6193	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    6194	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    6195	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    6196	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    6197	bf a2 00 00 00 00 00 00	r2 = r10
    6198	07 02 00 00 00 ff ff ff	r2 += -0x100
    6199	bf 61 00 00 00 00 00 00	r1 = r6
    6200	85 10 00 00 77 07 00 00	call 0x777 ; <<T as core::convert::From<T>>::from>
    6201	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    6202	07 02 00 00 01 00 00 00	r2 += 0x1
    6203	bf 91 00 00 00 00 00 00	r1 = r9
    6204	05 00 71 ff 00 00 00 00	goto -0x8f <LBB13_35>

000000000000c1e8 <LBB13_22>
    6205	61 a8 3c ff 00 00 00 00	r8 = *(u32 *)(r10 - 0xc4)
    6206	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    6207	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    6208	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    6209	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    6210	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    6211	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    6212	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    6213	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    6214	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
    6215	07 02 00 00 01 00 00 00	r2 += 0x1
    6216	bf 91 00 00 00 00 00 00	r1 = r9
    6217	85 10 00 00 58 07 00 00	call 0x758 ; <core::cell::Cell<T>::replace>
    6218	bf 81 00 00 00 00 00 00	r1 = r8
    6219	15 01 1a 00 00 00 00 00	if r1 == 0x0 goto +0x1a <LBB13_24>
    6220	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    6221	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    6222	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    6223	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    6224	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    6225	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    6226	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    6227	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    6228	bf a1 00 00 00 00 00 00	r1 = r10
    6229	07 01 00 00 80 fd ff ff	r1 += -0x280
    6230	bf a2 00 00 00 00 00 00	r2 = r10
    6231	07 02 00 00 90 fd ff ff	r2 += -0x270
    6232	85 10 00 00 3d 13 00 00	call 0x133d ; <core::slice::iter::Iter<T>::as_slice>
    6233	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    6234	79 a2 80 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x280)
    6235	7b 2a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r2
    6236	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6237	bf a5 00 00 00 00 00 00	r5 = r10
    6238	bf a1 00 00 00 00 00 00	r1 = r10
    6239	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    6240	bf a3 00 00 00 00 00 00	r3 = r10
    6241	07 03 00 00 00 ff ff ff	r3 += -0x100
    6242	79 a2 68 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x298)
    6243	79 a4 60 fd 00 00 00 00	r4 = *(u64 *)(r10 - 0x2a0)
    6244	85 10 00 00 c6 01 00 00	call 0x1c6 ; <spl_token::processor::Processor::validate_owner>
    6245	05 00 04 00 00 00 00 00	goto +0x4 <LBB13_26>

000000000000c330 <LBB13_24>
    6246	bf a1 00 00 00 00 00 00	r1 = r10
    6247	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    6248	b7 02 00 00 10 00 00 00	r2 = 0x10
    6249	85 10 00 00 01 0f 00 00	call 0xf01 ; <<T as core::convert::Into<U>>::into>

000000000000c350 <LBB13_26>
    6250	79 a2 70 fd 00 00 00 00	r2 = *(u64 *)(r10 - 0x290)
    6251	79 a1 54 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ac)
    6252	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    6253	79 a1 5c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a4)
    6254	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    6255	79 a1 64 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x19c)
    6256	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    6257	61 a1 6c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x194)
    6258	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    6259	61 a1 50 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1b0)
    6260	55 01 3e 00 10 00 00 00	if r1 != 0x10 goto +0x3e <LBB13_32>
    6261	b7 01 00 00 02 00 00 00	r1 = 0x2
    6262	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB13_29>
    6263	b7 01 00 00 01 00 00 00	r1 = 0x1

000000000000c3c0 <LBB13_29>
    6264	73 1a 0c fe 00 00 00 00	*(u8 *)(r10 - 0x1f4) = r1
    6265	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    6266	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    6267	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    6268	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    6269	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    6270	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    6271	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    6272	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    6273	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    6274	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    6275	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    6276	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    6277	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    6278	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    6279	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    6280	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    6281	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    6282	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    6283	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    6284	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    6285	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    6286	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    6287	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    6288	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    6289	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    6290	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    6291	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    6292	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    6293	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    6294	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    6295	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    6296	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    6297	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    6298	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    6299	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    6300	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    6301	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    6302	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    6303	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    6304	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    6305	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    6306	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    6307	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    6308	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    6309	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
    6310	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
    6311	15 01 15 00 00 00 00 00	if r1 == 0x0 goto +0x15 <LBB13_31>
    6312	bf a3 00 00 00 00 00 00	r3 = r10
    6313	07 03 00 00 f8 ff ff ff	r3 += -0x8
    6314	18 01 00 00 30 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e30 ll
    6316	b7 02 00 00 10 00 00 00	r2 = 0x10
    6317	18 04 00 00 c0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248c0 ll
    6319	18 05 00 00 70 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c70 ll
    6321	85 10 00 00 27 1d 00 00	call 0x1d27 ; <core::result::unwrap_failed>
    6322	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000c598 <LBB13_32>
    6323	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    6324	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    6325	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    6326	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    6327	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    6328	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    6329	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    6330	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    6331	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    6332	05 00 84 fe 00 00 00 00	goto -0x17c <LBB13_4>

000000000000c5e8 <LBB13_31>
    6333	bf 87 00 00 00 00 00 00	r7 = r8
    6334	07 07 00 00 10 00 00 00	r7 += 0x10
    6335	bf 71 00 00 00 00 00 00	r1 = r7
    6336	b7 02 00 00 ff ff ff ff	r2 = -0x1
    6337	85 10 00 00 e0 06 00 00	call 0x6e0 ; <core::cell::Cell<T>::replace>
    6338	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    6339	79 84 20 00 00 00 00 00	r4 = *(u64 *)(r8 + 0x20)
    6340	bf a1 00 00 00 00 00 00	r1 = r10
    6341	07 01 00 00 50 fe ff ff	r1 += -0x1b0
    6342	bf a2 00 00 00 00 00 00	r2 = r10
    6343	07 02 00 00 00 ff ff ff	r2 += -0x100
    6344	85 10 00 00 22 07 00 00	call 0x722 ; <solana_program::program_pack::Pack::pack>
    6345	79 a1 54 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1ac)
    6346	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    6347	79 a1 5c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a4)
    6348	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    6349	79 a1 64 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x19c)
    6350	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    6351	61 a1 6c fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x194)
    6352	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
    6353	61 a1 50 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1b0)
    6354	15 01 01 00 10 00 00 00	if r1 == 0x10 goto +0x1 <LBB13_33>
    6355	05 00 07 00 00 00 00 00	goto +0x7 <LBB13_34>

000000000000c6a0 <LBB13_33>
    6356	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    6357	07 02 00 00 01 00 00 00	r2 += 0x1
    6358	bf 71 00 00 00 00 00 00	r1 = r7
    6359	85 10 00 00 ca 06 00 00	call 0x6ca ; <core::cell::Cell<T>::replace>
    6360	b7 01 00 00 10 00 00 00	r1 = 0x10
    6361	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    6362	05 00 6a fe 00 00 00 00	goto -0x196 <LBB13_36>

000000000000c6d8 <LBB13_34>
    6363	63 1a 00 ff 00 00 00 00	*(u32 *)(r10 - 0x100) = r1
    6364	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    6365	7b 1a 04 ff 00 00 00 00	*(u64 *)(r10 - 0xfc) = r1
    6366	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    6367	7b 1a 0c ff 00 00 00 00	*(u64 *)(r10 - 0xf4) = r1
    6368	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    6369	7b 1a 14 ff 00 00 00 00	*(u64 *)(r10 - 0xec) = r1
    6370	61 a1 f0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x10)
    6371	63 1a 1c ff 00 00 00 00	*(u32 *)(r10 - 0xe4) = r1
    6372	bf a2 00 00 00 00 00 00	r2 = r10
    6373	07 02 00 00 00 ff ff ff	r2 += -0x100
    6374	bf 61 00 00 00 00 00 00	r1 = r6
    6375	85 10 00 00 c8 06 00 00	call 0x6c8 ; <<T as core::convert::From<T>>::from>
    6376	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
    6377	07 02 00 00 01 00 00 00	r2 += 0x1
    6378	bf 71 00 00 00 00 00 00	r1 = r7
    6379	05 00 c2 fe 00 00 00 00	goto -0x13e <LBB13_35>

000000000000c760 <spl_token::processor::Processor::process>
    6380	7b 4a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r4
    6381	7b 3a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r3
    6382	bf 29 00 00 00 00 00 00	r9 = r2
    6383	bf 18 00 00 00 00 00 00	r8 = r1
    6384	79 52 00 f0 00 00 00 00	r2 = *(u64 *)(r5 - 0x1000)
    6385	79 53 08 f0 00 00 00 00	r3 = *(u64 *)(r5 - 0xff8)
    6386	bf a1 00 00 00 00 00 00	r1 = r10
    6387	07 01 00 00 a8 ff ff ff	r1 += -0x58
    6388	85 10 00 00 9d 02 00 00	call 0x29d ; <spl_token::instruction::TokenInstruction::unpack>
    6389	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    6390	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    6391	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    6392	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    6393	79 a1 d1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f)
    6394	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    6395	79 a1 d9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x27)
    6396	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    6397	79 a1 e1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f)
    6398	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    6399	79 a1 e9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x17)
    6400	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    6401	79 a1 f1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf)
    6402	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    6403	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    6404	7b 1a 9f ff 00 00 00 00	*(u64 *)(r10 - 0x61) = r1
    6405	71 a7 c0 ff 00 00 00 00	r7 = *(u8 *)(r10 - 0x40)
    6406	79 a6 b8 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x48)
    6407	61 a1 b0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x50)
    6408	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
    6409	15 02 1e 00 01 00 00 00	if r2 == 0x1 goto +0x1e <LBB14_25>
    6410	79 a2 9f ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x61)
    6411	7b 2a 5f ff 00 00 00 00	*(u64 *)(r10 - 0xa1) = r2
    6412	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
    6413	7b 2a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r2
    6414	79 a2 90 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x70)
    6415	7b 2a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r2
    6416	79 a2 88 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x78)
    6417	7b 2a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r2
    6418	79 a2 80 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x80)
    6419	7b 2a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r2
    6420	79 a2 78 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x88)
    6421	7b 2a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r2
    6422	79 a2 70 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x90)
    6423	7b 2a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r2
    6424	79 a2 68 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x98)
    6425	7b 2a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r2
    6426	65 01 1b 00 07 00 00 00	if r1 s> 0x7 goto +0x1b <LBB14_13>
    6427	65 01 32 00 03 00 00 00	if r1 s> 0x3 goto +0x32 <LBB14_8>
    6428	65 01 5e 00 01 00 00 00	if r1 s> 0x1 goto +0x5e <LBB14_6>
    6429	15 01 af 00 00 00 00 00	if r1 == 0x0 goto +0xaf <LBB14_27>
    6430	18 01 00 00 d9 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22fd9 ll
    6432	b7 02 00 00 1e 00 00 00	r2 = 0x1e
    6433	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6434	bf 81 00 00 00 00 00 00	r1 = r8
    6435	79 a2 18 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe8)
    6436	79 a3 20 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe0)
    6437	b7 04 00 00 00 00 00 00	r4 = 0x0
    6438	85 10 00 00 22 e8 ff ff	call -0x17de ; <spl_token::processor::Processor::_process_initialize_account>
    6439	05 00 0d 00 00 00 00 00	goto +0xd <LBB14_39>

000000000000c940 <LBB14_25>
    6440	61 a2 b4 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x4c)
    6441	73 7a b8 ff 00 00 00 00	*(u8 *)(r10 - 0x48) = r7
    6442	7b 6a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r6
    6443	63 2a ac ff 00 00 00 00	*(u32 *)(r10 - 0x54) = r2
    6444	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 0x58) = r1
    6445	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    6446	7b 1a b9 ff 00 00 00 00	*(u64 *)(r10 - 0x47) = r1
    6447	79 a1 6f ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x91)
    6448	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    6449	bf a2 00 00 00 00 00 00	r2 = r10
    6450	07 02 00 00 a8 ff ff ff	r2 += -0x58
    6451	bf 81 00 00 00 00 00 00	r1 = r8
    6452	85 10 00 00 7b 06 00 00	call 0x67b ; <<T as core::convert::From<T>>::from>

000000000000c9a8 <LBB14_39>
    6453	95 00 00 00 00 00 00 00	exit

000000000000c9b0 <LBB14_13>
    6454	65 01 0c 00 0b 00 00 00	if r1 s> 0xb goto +0xc <LBB14_19>
    6455	65 01 37 00 09 00 00 00	if r1 s> 0x9 goto +0x37 <LBB14_17>
    6456	15 01 54 00 08 00 00 00	if r1 == 0x8 goto +0x54 <LBB14_32>
    6457	18 01 00 00 28 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f28 ll
    6459	b7 02 00 00 19 00 00 00	r2 = 0x19
    6460	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6461	bf 81 00 00 00 00 00 00	r1 = r8
    6462	bf 92 00 00 00 00 00 00	r2 = r9
    6463	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6464	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6465	85 10 00 00 01 fc ff ff	call -0x3ff ; <spl_token::processor::Processor::process_close_account>
    6466	05 00 f2 ff 00 00 00 00	goto -0xe <LBB14_39>

000000000000ca18 <LBB14_19>
    6467	65 01 16 00 0d 00 00 00	if r1 s> 0xd goto +0x16 <LBB14_22>
    6468	15 01 50 00 0c 00 00 00	if r1 == 0xc goto +0x50 <LBB14_35>
    6469	18 01 00 00 d7 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22ed7 ll
    6471	b7 02 00 00 1b 00 00 00	r2 = 0x1b
    6472	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6473	b7 01 00 00 01 00 00 00	r1 = 0x1
    6474	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6475	7b 7a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r7
    6476	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6477	05 00 b1 00 00 00 00 00	goto +0xb1 <LBB14_30>

000000000000ca70 <LBB14_8>
    6478	65 01 35 00 05 00 00 00	if r1 s> 0x5 goto +0x35 <LBB14_11>
    6479	15 01 a8 00 04 00 00 00	if r1 == 0x4 goto +0xa8 <LBB14_29>
    6480	18 01 00 00 7e 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f7e ll
    6482	b7 02 00 00 13 00 00 00	r2 = 0x13
    6483	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6484	bf 81 00 00 00 00 00 00	r1 = r8
    6485	bf 92 00 00 00 00 00 00	r2 = r9
    6486	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6487	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6488	85 10 00 00 db f1 ff ff	call -0xe25 ; <spl_token::processor::Processor::process_revoke>
    6489	05 00 db ff 00 00 00 00	goto -0x25 <LBB14_39>

000000000000cad0 <LBB14_22>
    6490	15 01 49 00 0e 00 00 00	if r1 == 0xe goto +0x49 <LBB14_37>
    6491	15 01 57 00 0f 00 00 00	if r1 == 0xf goto +0x57 <LBB14_26>
    6492	18 01 00 00 86 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e86 ll
    6494	b7 02 00 00 1f 00 00 00	r2 = 0x1f
    6495	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6496	73 7a b0 ff 00 00 00 00	*(u8 *)(r10 - 0x50) = r7
    6497	7b 6a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r6
    6498	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    6499	7b 1a b1 ff 00 00 00 00	*(u64 *)(r10 - 0x4f) = r1
    6500	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    6501	7b 1a b9 ff 00 00 00 00	*(u64 *)(r10 - 0x47) = r1
    6502	79 a1 37 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc9)
    6503	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    6504	bf a4 00 00 00 00 00 00	r4 = r10
    6505	07 04 00 00 a8 ff ff ff	r4 += -0x58
    6506	bf 81 00 00 00 00 00 00	r1 = r8
    6507	79 a2 18 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe8)
    6508	79 a3 20 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe0)
    6509	85 10 00 00 db e7 ff ff	call -0x1825 ; <spl_token::processor::Processor::_process_initialize_account>
    6510	05 00 c6 ff 00 00 00 00	goto -0x3a <LBB14_39>

000000000000cb78 <LBB14_17>
    6511	15 01 52 00 0a 00 00 00	if r1 == 0xa goto +0x52 <LBB14_34>
    6512	18 01 00 00 0e 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f0e ll
    6514	b7 02 00 00 1a 00 00 00	r2 = 0x1a
    6515	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6516	bf 81 00 00 00 00 00 00	r1 = r8
    6517	bf 92 00 00 00 00 00 00	r2 = r9
    6518	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6519	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6520	b7 05 00 00 00 00 00 00	r5 = 0x0
    6521	85 10 00 00 9a fd ff ff	call -0x266 ; <spl_token::processor::Processor::process_toggle_freeze_account>
    6522	05 00 ba ff 00 00 00 00	goto -0x46 <LBB14_39>

000000000000cbd8 <LBB14_6>
    6523	15 01 8a 00 02 00 00 00	if r1 == 0x2 goto +0x8a <LBB14_28>
    6524	18 01 00 00 a5 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22fa5 ll
    6526	b7 02 00 00 15 00 00 00	r2 = 0x15
    6527	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6528	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6529	b7 01 00 00 00 00 00 00	r1 = 0x0
    6530	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6531	05 00 19 00 00 00 00 00	goto +0x19 <LBB14_36>

000000000000cc20 <LBB14_11>
    6532	15 01 8b 00 06 00 00 00	if r1 == 0x6 goto +0x8b <LBB14_31>
    6533	18 01 00 00 52 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f52 ll
    6535	b7 02 00 00 13 00 00 00	r2 = 0x13
    6536	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6537	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6538	b7 01 00 00 00 00 00 00	r1 = 0x0
    6539	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6540	05 00 1f 00 00 00 00 00	goto +0x1f <LBB14_38>

000000000000cc68 <LBB14_32>
    6541	18 01 00 00 41 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f41 ll
    6543	b7 02 00 00 11 00 00 00	r2 = 0x11
    6544	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6545	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6546	b7 01 00 00 00 00 00 00	r1 = 0x0
    6547	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6548	05 00 26 00 00 00 00 00	goto +0x26 <LBB14_33>

000000000000cca8 <LBB14_35>
    6549	18 01 00 00 f2 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22ef2 ll
    6551	b7 02 00 00 1c 00 00 00	r2 = 0x1c
    6552	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6553	b7 01 00 00 01 00 00 00	r1 = 0x1
    6554	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6555	7b 7a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r7
    6556	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6

000000000000cce8 <LBB14_36>
    6557	bf a5 00 00 00 00 00 00	r5 = r10
    6558	bf 81 00 00 00 00 00 00	r1 = r8
    6559	bf 92 00 00 00 00 00 00	r2 = r9
    6560	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6561	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6562	85 10 00 00 1f ec ff ff	call -0x13e1 ; <spl_token::processor::Processor::process_transfer>
    6563	05 00 91 ff 00 00 00 00	goto -0x6f <LBB14_39>

000000000000cd20 <LBB14_37>
    6564	18 01 00 00 bd 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22ebd ll
    6566	b7 02 00 00 1a 00 00 00	r2 = 0x1a
    6567	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6568	b7 01 00 00 01 00 00 00	r1 = 0x1
    6569	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6570	7b 7a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r7
    6571	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6

000000000000cd60 <LBB14_38>
    6572	bf a5 00 00 00 00 00 00	r5 = r10
    6573	bf 81 00 00 00 00 00 00	r1 = r8
    6574	bf 92 00 00 00 00 00 00	r2 = r9
    6575	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6576	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6577	85 10 00 00 5c f6 ff ff	call -0x9a4 ; <spl_token::processor::Processor::process_mint_to>
    6578	05 00 82 ff 00 00 00 00	goto -0x7e <LBB14_39>

000000000000cd98 <LBB14_26>
    6579	18 01 00 00 a5 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22ea5 ll
    6581	b7 02 00 00 18 00 00 00	r2 = 0x18
    6582	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6583	b7 01 00 00 01 00 00 00	r1 = 0x1
    6584	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6585	7b 7a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r7
    6586	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6

000000000000cdd8 <LBB14_33>
    6587	bf a5 00 00 00 00 00 00	r5 = r10
    6588	bf 81 00 00 00 00 00 00	r1 = r8
    6589	bf 92 00 00 00 00 00 00	r2 = r9
    6590	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6591	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6592	85 10 00 00 db f8 ff ff	call -0x725 ; <spl_token::processor::Processor::process_burn>
    6593	05 00 73 ff 00 00 00 00	goto -0x8d <LBB14_39>

000000000000ce10 <LBB14_34>
    6594	18 01 00 00 0e 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f0e ll
    6596	b7 02 00 00 1a 00 00 00	r2 = 0x1a
    6597	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6598	bf 81 00 00 00 00 00 00	r1 = r8
    6599	bf 92 00 00 00 00 00 00	r2 = r9
    6600	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6601	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6602	b7 05 00 00 01 00 00 00	r5 = 0x1
    6603	85 10 00 00 48 fd ff ff	call -0x2b8 ; <spl_token::processor::Processor::process_toggle_freeze_account>
    6604	05 00 68 ff 00 00 00 00	goto -0x98 <LBB14_39>

000000000000ce68 <LBB14_27>
    6605	18 01 00 00 f7 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22ff7 ll
    6607	b7 02 00 00 1b 00 00 00	r2 = 0x1b
    6608	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6609	bf 61 00 00 00 00 00 00	r1 = r6
    6610	77 01 00 00 38 00 00 00	r1 >>= 0x38
    6611	73 1a 6e ff 00 00 00 00	*(u8 *)(r10 - 0x92) = r1
    6612	bf 61 00 00 00 00 00 00	r1 = r6
    6613	77 01 00 00 28 00 00 00	r1 >>= 0x28
    6614	6b 1a 6c ff 00 00 00 00	*(u16 *)(r10 - 0x94) = r1
    6615	bf 61 00 00 00 00 00 00	r1 = r6
    6616	77 01 00 00 08 00 00 00	r1 >>= 0x8
    6617	63 1a 68 ff 00 00 00 00	*(u32 *)(r10 - 0x98) = r1
    6618	73 7a 6f ff 00 00 00 00	*(u8 *)(r10 - 0x91) = r7
    6619	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    6620	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    6621	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    6622	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    6623	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    6624	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    6625	61 a1 63 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x9d)
    6626	63 1a c8 ff 00 00 00 00	*(u32 *)(r10 - 0x38) = r1
    6627	79 a1 5b ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa5)
    6628	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    6629	79 a1 53 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xad)
    6630	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    6631	79 a1 4b ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb5)
    6632	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    6633	79 a1 43 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xbd)
    6634	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    6635	bf a1 00 00 00 00 00 00	r1 = r10
    6636	07 01 00 00 68 ff ff ff	r1 += -0x98
    6637	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
    6638	bf a1 00 00 00 00 00 00	r1 = r10
    6639	07 01 00 00 a8 ff ff ff	r1 += -0x58
    6640	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6641	bf a5 00 00 00 00 00 00	r5 = r10
    6642	bf 81 00 00 00 00 00 00	r1 = r8
    6643	79 a2 18 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe8)
    6644	79 a3 20 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe0)
    6645	bf 64 00 00 00 00 00 00	r4 = r6
    6646	85 10 00 00 27 e6 ff ff	call -0x19d9 ; <spl_token::processor::Processor::process_initialize_mint>
    6647	05 00 3d ff 00 00 00 00	goto -0xc3 <LBB14_39>

000000000000cfc0 <LBB14_29>
    6648	18 01 00 00 91 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f91 ll
    6650	b7 02 00 00 14 00 00 00	r2 = 0x14
    6651	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6652	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6653	b7 01 00 00 00 00 00 00	r1 = 0x0
    6654	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1

000000000000cff8 <LBB14_30>
    6655	bf a5 00 00 00 00 00 00	r5 = r10
    6656	bf 81 00 00 00 00 00 00	r1 = r8
    6657	bf 92 00 00 00 00 00 00	r2 = r9
    6658	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6659	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6660	85 10 00 00 43 ef ff ff	call -0x10bd ; <spl_token::processor::Processor::process_approve>
    6661	05 00 2f ff 00 00 00 00	goto -0xd1 <LBB14_39>

000000000000d030 <LBB14_28>
    6662	18 01 00 00 ba 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22fba ll
    6664	b7 02 00 00 1f 00 00 00	r2 = 0x1f
    6665	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6666	bf 81 00 00 00 00 00 00	r1 = r8
    6667	79 a2 18 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe8)
    6668	79 a3 20 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe0)
    6669	bf 64 00 00 00 00 00 00	r4 = r6
    6670	85 10 00 00 73 e9 ff ff	call -0x168d ; <spl_token::processor::Processor::process_initialize_multisig>
    6671	05 00 25 ff 00 00 00 00	goto -0xdb <LBB14_39>

000000000000d080 <LBB14_31>
    6672	18 01 00 00 65 2f 02 00 00 00 00 00 00 00 00 00	r1 = 0x22f65 ll
    6674	b7 02 00 00 19 00 00 00	r2 = 0x19
    6675	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
    6676	73 7a ac ff 00 00 00 00	*(u8 *)(r10 - 0x54) = r7
    6677	bf 61 00 00 00 00 00 00	r1 = r6
    6678	77 01 00 00 20 00 00 00	r1 >>= 0x20
    6679	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 0x58) = r1
    6680	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    6681	7b 1a ad ff 00 00 00 00	*(u64 *)(r10 - 0x53) = r1
    6682	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    6683	7b 1a b5 ff 00 00 00 00	*(u64 *)(r10 - 0x4b) = r1
    6684	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    6685	7b 1a bd ff 00 00 00 00	*(u64 *)(r10 - 0x43) = r1
    6686	79 a1 3f ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc1)
    6687	7b 1a c4 ff 00 00 00 00	*(u64 *)(r10 - 0x3c) = r1
    6688	7b 6a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r6
    6689	bf a1 00 00 00 00 00 00	r1 = r10
    6690	07 01 00 00 a8 ff ff ff	r1 += -0x58
    6691	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
    6692	bf a5 00 00 00 00 00 00	r5 = r10
    6693	bf 81 00 00 00 00 00 00	r1 = r8
    6694	bf 92 00 00 00 00 00 00	r2 = r9
    6695	79 a3 18 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xe8)
    6696	79 a4 20 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xe0)
    6697	85 10 00 00 5d f2 ff ff	call -0xda3 ; <spl_token::processor::Processor::process_set_authority>
    6698	05 00 0a ff 00 00 00 00	goto -0xf6 <LBB14_39>

000000000000d158 <spl_token::processor::Processor::validate_owner>
    6699	bf 57 00 00 00 00 00 00	r7 = r5
    6700	bf 48 00 00 00 00 00 00	r8 = r4
    6701	bf 34 00 00 00 00 00 00	r4 = r3
    6702	bf 29 00 00 00 00 00 00	r9 = r2
    6703	bf 16 00 00 00 00 00 00	r6 = r1
    6704	79 83 00 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x0)
    6705	bf 41 00 00 00 00 00 00	r1 = r4
    6706	b7 02 00 00 20 00 00 00	r2 = 0x20
    6707	b7 04 00 00 20 00 00 00	r4 = 0x20
    6708	85 10 00 00 06 04 00 00	call 0x406 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    6709	55 00 13 00 00 00 00 00	if r0 != 0x0 goto +0x13 <LBB15_2>
    6710	79 71 08 f0 00 00 00 00	r1 = *(u64 *)(r7 - 0xff8)
    6711	7b 1a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r1
    6712	79 77 00 f0 00 00 00 00	r7 = *(u64 *)(r7 - 0x1000)
    6713	79 83 18 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x18)
    6714	bf 91 00 00 00 00 00 00	r1 = r9
    6715	b7 02 00 00 20 00 00 00	r2 = 0x20
    6716	b7 04 00 00 20 00 00 00	r4 = 0x20
    6717	85 10 00 00 ef 03 00 00	call 0x3ef ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    6718	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB15_3>
    6719	05 00 05 00 00 00 00 00	goto +0x5 <LBB15_4>

000000000000d200 <LBB15_3>
    6720	bf 81 00 00 00 00 00 00	r1 = r8
    6721	85 10 00 00 e1 11 00 00	call 0x11e1 ; <solana_program::account_info::AccountInfo::data_len>
    6722	bf 09 00 00 00 00 00 00	r9 = r0
    6723	85 10 00 00 88 05 00 00	call 0x588 ; <solana_program::program_pack::Pack::get_packed_len>
    6724	1d 09 0b 00 00 00 00 00	if r9 == r0 goto +0xb <LBB15_5>

000000000000d228 <LBB15_4>
    6725	71 81 28 00 00 00 00 00	r1 = *(u8 *)(r8 + 0x28)
    6726	15 01 06 00 00 00 00 00	if r1 == 0x0 goto +0x6 <LBB15_25>
    6727	b7 01 00 00 10 00 00 00	r1 = 0x10
    6728	05 00 05 00 00 00 00 00	goto +0x5 <LBB15_26>

000000000000d248 <LBB15_2>
    6729	bf 61 00 00 00 00 00 00	r1 = r6
    6730	b7 02 00 00 04 00 00 00	r2 = 0x4
    6731	85 10 00 00 1f 0d 00 00	call 0xd1f ; <<T as core::convert::Into<U>>::into>
    6732	05 00 02 00 00 00 00 00	goto +0x2 <LBB15_27>

000000000000d268 <LBB15_25>
    6733	b7 01 00 00 07 00 00 00	r1 = 0x7

000000000000d270 <LBB15_26>
    6734	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1

000000000000d278 <LBB15_27>
    6735	95 00 00 00 00 00 00 00	exit

000000000000d280 <LBB15_5>
    6736	7b 6a d8 fc 00 00 00 00	*(u64 *)(r10 - 0x328) = r6
    6737	79 86 10 00 00 00 00 00	r6 = *(u64 *)(r8 + 0x10)
    6738	79 62 10 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x10)
    6739	07 02 00 00 01 00 00 00	r2 += 0x1
    6740	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB15_7>
    6741	bf a3 00 00 00 00 00 00	r3 = r10
    6742	07 03 00 00 70 fe ff ff	r3 += -0x190
    6743	18 01 00 00 50 2e 02 00 00 00 00 00 00 00 00 00	r1 = 0x22e50 ll
    6745	b7 02 00 00 18 00 00 00	r2 = 0x18
    6746	18 04 00 00 a0 48 02 00 00 00 00 00 00 00 00 00	r4 = 0x248a0 ll
    6748	18 05 00 00 88 4c 02 00 00 00 00 00 00 00 00 00	r5 = 0x24c88 ll
    6750	85 10 00 00 7a 1b 00 00	call 0x1b7a ; <core::result::unwrap_failed>
    6751	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000d300 <LBB15_7>
    6752	bf 68 00 00 00 00 00 00	r8 = r6
    6753	07 08 00 00 10 00 00 00	r8 += 0x10
    6754	bf 81 00 00 00 00 00 00	r1 = r8
    6755	85 10 00 00 3e 05 00 00	call 0x53e ; <core::cell::Cell<T>::replace>
    6756	79 62 18 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x18)
    6757	79 63 20 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x20)
    6758	bf a1 00 00 00 00 00 00	r1 = r10
    6759	07 01 00 00 70 fe ff ff	r1 += -0x190
    6760	85 10 00 00 1d 06 00 00	call 0x61d ; <solana_program::program_pack::Pack::unpack>
    6761	79 a1 71 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x18f)
    6762	7b 1a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r1
    6763	79 a1 79 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x187)
    6764	7b 1a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r1
    6765	79 a1 81 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17f)
    6766	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
    6767	79 a1 89 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x177)
    6768	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    6769	79 a1 91 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x16f)
    6770	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    6771	79 a1 99 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x167)
    6772	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    6773	79 a1 a1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x15f)
    6774	7b 1a 38 fd 00 00 00 00	*(u64 *)(r10 - 0x2c8) = r1
    6775	79 a1 a9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x157)
    6776	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
    6777	79 a1 b1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14f)
    6778	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
    6779	79 a1 b9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x147)
    6780	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    6781	79 a1 c1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13f)
    6782	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    6783	79 a1 c9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x137)
    6784	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    6785	79 a1 d1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12f)
    6786	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    6787	79 a1 d9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x127)
    6788	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    6789	79 a1 e1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x11f)
    6790	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    6791	79 a1 e9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x117)
    6792	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    6793	79 a1 f1 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10f)
    6794	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    6795	79 a1 f9 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x107)
    6796	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    6797	79 a1 01 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xff)
    6798	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    6799	79 a1 09 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf7)
    6800	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    6801	79 a1 11 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xef)
    6802	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    6803	79 a1 19 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe7)
    6804	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    6805	79 a1 21 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdf)
    6806	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    6807	79 a1 29 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd7)
    6808	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    6809	79 a1 31 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcf)
    6810	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    6811	79 a1 39 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc7)
    6812	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    6813	79 a1 41 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xbf)
    6814	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    6815	79 a1 49 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb7)
    6816	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    6817	79 a1 51 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xaf)
    6818	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    6819	79 a1 59 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa7)
    6820	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    6821	79 a1 61 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9f)
    6822	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    6823	79 a1 69 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x97)
    6824	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    6825	79 a1 71 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8f)
    6826	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    6827	79 a1 79 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x87)
    6828	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    6829	79 a1 81 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x7f)
    6830	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    6831	79 a1 89 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x77)
    6832	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    6833	79 a1 91 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6f)
    6834	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    6835	79 a1 99 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x67)
    6836	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    6837	79 a1 a1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5f)
    6838	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    6839	79 a1 a9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x57)
    6840	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    6841	79 a1 b1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x4f)
    6842	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    6843	79 a1 b9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x47)
    6844	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    6845	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    6846	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    6847	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    6848	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    6849	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    6850	63 1a 67 fe 00 00 00 00	*(u32 *)(r10 - 0x199) = r1
    6851	71 a1 70 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x190)
    6852	15 01 75 00 01 00 00 00	if r1 == 0x1 goto +0x75 <LBB15_29>
    6853	61 a1 67 fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x199)
    6854	63 1a cf ff 00 00 00 00	*(u32 *)(r10 - 0x31) = r1
    6855	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    6856	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    6857	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    6858	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    6859	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    6860	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    6861	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    6862	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    6863	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    6864	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    6865	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    6866	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    6867	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    6868	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    6869	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    6870	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    6871	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    6872	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    6873	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    6874	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    6875	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    6876	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    6877	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    6878	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    6879	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    6880	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    6881	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    6882	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    6883	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    6884	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    6885	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    6886	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    6887	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    6888	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    6889	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    6890	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    6891	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    6892	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    6893	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    6894	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    6895	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    6896	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    6897	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    6898	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    6899	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    6900	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    6901	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    6902	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    6903	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    6904	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    6905	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    6906	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    6907	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    6908	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    6909	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    6910	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    6911	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    6912	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    6913	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    6914	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    6915	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    6916	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    6917	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    6918	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    6919	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    6920	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    6921	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    6922	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    6923	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    6924	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    6925	79 a1 48 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b8)
    6926	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    6927	79 a1 40 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c0)
    6928	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    6929	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    6930	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    6931	79 a1 30 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d0)
    6932	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    6933	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    6934	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    6935	79 a1 20 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e0)
    6936	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    6937	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    6938	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    6939	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    6940	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    6941	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
    6942	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    6943	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    6944	07 02 00 00 ff ff ff ff	r2 += -0x1
    6945	bf 81 00 00 00 00 00 00	r1 = r8
    6946	85 10 00 00 7f 04 00 00	call 0x47f ; <core::cell::Cell<T>::replace>
    6947	b7 02 00 00 00 00 00 00	r2 = 0x0
    6948	63 2a df ff 00 00 00 00	*(u32 *)(r10 - 0x21) = r2
    6949	b7 01 00 00 00 00 00 00	r1 = 0x0
    6950	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1
    6951	7b 2a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r2
    6952	79 a1 e8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x318)
    6953	27 01 00 00 30 00 00 00	r1 *= 0x30
    6954	bf 73 00 00 00 00 00 00	r3 = r7
    6955	0f 13 00 00 00 00 00 00	r3 += r1
    6956	bf a1 00 00 00 00 00 00	r1 = r10
    6957	07 01 00 00 f8 fc ff ff	r1 += -0x308
    6958	bf 72 00 00 00 00 00 00	r2 = r7
    6959	85 10 00 00 95 10 00 00	call 0x1095 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    6960	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    6961	79 a6 f8 fc 00 00 00 00	r6 = *(u64 *)(r10 - 0x308)
    6962	7b 1a e0 fc 00 00 00 00	*(u64 *)(r10 - 0x320) = r1
    6963	1d 16 4b 00 00 00 00 00	if r6 == r1 goto +0x4b <LBB15_11>
    6964	b7 01 00 00 00 00 00 00	r1 = 0x0
    6965	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1
    6966	bf a1 00 00 00 00 00 00	r1 = r10
    6967	07 01 00 00 73 fe ff ff	r1 += -0x18d
    6968	7b 1a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r1
    6969	05 00 15 00 00 00 00 00	goto +0x15 <LBB15_10>

000000000000d9d0 <LBB15_29>
    6970	79 a1 27 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d9)
    6971	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    6972	79 a1 1f fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e1)
    6973	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    6974	79 a1 17 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e9)
    6975	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    6976	79 a1 0f fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f1)
    6977	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    6978	bf a2 00 00 00 00 00 00	r2 = r10
    6979	07 02 00 00 70 fe ff ff	r2 += -0x190
    6980	79 a1 d8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x328)
    6981	85 10 00 00 6a 04 00 00	call 0x46a ; <<T as core::convert::From<T>>::from>
    6982	79 82 00 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x0)
    6983	07 02 00 00 ff ff ff ff	r2 += -0x1
    6984	bf 81 00 00 00 00 00 00	r1 = r8
    6985	85 10 00 00 58 04 00 00	call 0x458 ; <core::cell::Cell<T>::replace>
    6986	05 00 04 ff 00 00 00 00	goto -0xfc <LBB15_27>

000000000000da58 <LBB15_30>
    6987	07 06 00 00 30 00 00 00	r6 += 0x30
    6988	85 10 00 00 7a 03 00 00	call 0x37a ; <<T as core::convert::From<T>>::from>
    6989	79 a1 e0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x320)
    6990	1d 16 30 00 00 00 00 00	if r6 == r1 goto +0x30 <LBB15_11>

000000000000da78 <LBB15_10>
    6991	71 a1 71 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x18f)
    6992	25 01 3c 00 0b 00 00 00	if r1 > 0xb goto +0x3c <LBB15_12>
    6993	67 01 00 00 05 00 00 00	r1 <<= 0x5
    6994	bf a3 00 00 00 00 00 00	r3 = r10
    6995	07 03 00 00 70 fe ff ff	r3 += -0x190
    6996	0f 13 00 00 00 00 00 00	r3 += r1
    6997	47 03 00 00 03 00 00 00	r3 |= 0x3
    6998	bf a8 00 00 00 00 00 00	r8 = r10
    6999	07 08 00 00 08 fd ff ff	r8 += -0x2f8
    7000	bf 81 00 00 00 00 00 00	r1 = r8
    7001	79 a2 e8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x318)
    7002	85 10 00 00 32 10 00 00	call 0x1032 ; <core::iter::adapters::enumerate::Enumerate<I>::new>
    7003	bf a1 00 00 00 00 00 00	r1 = r10
    7004	07 01 00 00 e8 ff ff ff	r1 += -0x18
    7005	bf 82 00 00 00 00 00 00	r2 = r8
    7006	85 10 00 00 5f 10 00 00	call 0x105f ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    7007	79 a7 f0 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x10)
    7008	79 a8 e8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x18)
    7009	1d 87 e9 ff 00 00 00 00	if r7 == r8 goto -0x17 <LBB15_30>
    7010	79 a9 f8 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x8)

000000000000db18 <LBB15_15>
    7011	79 63 00 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x0)
    7012	bf 81 00 00 00 00 00 00	r1 = r8
    7013	b7 02 00 00 20 00 00 00	r2 = 0x20
    7014	b7 04 00 00 20 00 00 00	r4 = 0x20
    7015	85 10 00 00 c5 02 00 00	call 0x2c5 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    7016	15 00 12 00 00 00 00 00	if r0 == 0x0 goto +0x12 <LBB15_22>
    7017	25 09 1d 00 0a 00 00 00	if r9 > 0xa goto +0x1d <LBB15_28>
    7018	bf a1 00 00 00 00 00 00	r1 = r10
    7019	07 01 00 00 d8 ff ff ff	r1 += -0x28
    7020	0f 91 00 00 00 00 00 00	r1 += r9
    7021	71 11 00 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x0)
    7022	55 01 0c 00 00 00 00 00	if r1 != 0x0 goto +0xc <LBB15_22>
    7023	71 61 28 00 00 00 00 00	r1 = *(u8 *)(r6 + 0x28)
    7024	55 01 02 00 00 00 00 00	if r1 != 0x0 goto +0x2 <LBB15_21>

000000000000db88 <LBB15_19>
    7025	b7 01 00 00 07 00 00 00	r1 = 0x7
    7026	05 00 11 00 00 00 00 00	goto +0x11 <LBB15_20>

000000000000db98 <LBB15_21>
    7027	bf a1 00 00 00 00 00 00	r1 = r10
    7028	07 01 00 00 d8 ff ff ff	r1 += -0x28
    7029	0f 91 00 00 00 00 00 00	r1 += r9
    7030	b7 02 00 00 01 00 00 00	r2 = 0x1
    7031	73 21 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r2
    7032	79 a1 f0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x310)
    7033	07 01 00 00 01 00 00 00	r1 += 0x1
    7034	7b 1a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r1

000000000000dbd8 <LBB15_22>
    7035	07 09 00 00 01 00 00 00	r9 += 0x1
    7036	07 08 00 00 20 00 00 00	r8 += 0x20
    7037	1d 87 cd ff 00 00 00 00	if r7 == r8 goto -0x33 <LBB15_30>
    7038	05 00 e4 ff 00 00 00 00	goto -0x1c <LBB15_15>

000000000000dbf8 <LBB15_11>
    7039	79 a2 f0 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x310)
    7040	57 02 00 00 ff 00 00 00	r2 &= 0xff
    7041	71 a1 70 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x190)
    7042	2d 21 ee ff 00 00 00 00	if r1 > r2 goto -0x12 <LBB15_19>
    7043	b7 01 00 00 10 00 00 00	r1 = 0x10

000000000000dc20 <LBB15_20>
    7044	79 a2 d8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x328)
    7045	63 12 00 00 00 00 00 00	*(u32 *)(r2 + 0x0) = r1
    7046	05 00 c8 fe 00 00 00 00	goto -0x138 <LBB15_27>

000000000000dc38 <LBB15_28>
    7047	bf 91 00 00 00 00 00 00	r1 = r9
    7048	b7 02 00 00 0b 00 00 00	r2 = 0xb
    7049	18 03 00 00 b8 4c 02 00 00 00 00 00 00 00 00 00	r3 = 0x24cb8 ll
    7051	85 10 00 00 6a 1b 00 00	call 0x1b6a ; <core::panicking::panic_bounds_check>
    7052	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000dc68 <LBB15_12>
    7053	b7 02 00 00 0b 00 00 00	r2 = 0xb
    7054	18 03 00 00 a0 4c 02 00 00 00 00 00 00 00 00 00	r3 = 0x24ca0 ll
    7056	85 10 00 00 b1 15 00 00	call 0x15b1 ; <core::slice::index::slice_end_index_len_fail>
    7057	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000dc90 <spl_token::instruction::TokenInstruction::unpack>
    7058	bf 38 00 00 00 00 00 00	r8 = r3
    7059	bf 27 00 00 00 00 00 00	r7 = r2
    7060	bf 16 00 00 00 00 00 00	r6 = r1
    7061	15 08 1a 01 00 00 00 00	if r8 == 0x0 goto +0x11a <LBB2_72>
    7062	bf 83 00 00 00 00 00 00	r3 = r8
    7063	07 03 00 00 ff ff ff ff	r3 += -0x1
    7064	bf 72 00 00 00 00 00 00	r2 = r7
    7065	07 02 00 00 01 00 00 00	r2 += 0x1
    7066	71 79 00 00 00 00 00 00	r9 = *(u8 *)(r7 + 0x0)
    7067	65 09 0e 00 08 00 00 00	if r9 s> 0x8 goto +0xe <LBB2_11>
    7068	65 09 14 00 04 00 00 00	if r9 s> 0x4 goto +0x14 <LBB2_16>
    7069	65 09 2c 00 02 00 00 00	if r9 s> 0x2 goto +0x2c <LBB2_26>
    7070	15 09 56 00 00 00 00 00	if r9 == 0x0 goto +0x56 <LBB2_39>
    7071	b7 00 00 00 01 00 00 00	r0 = 0x1
    7072	15 09 c9 01 01 00 00 00	if r9 == 0x1 goto +0x1c9 <LBB2_92>
    7073	15 09 01 00 02 00 00 00	if r9 == 0x2 goto +0x1 <LBB2_7>
    7074	05 00 4d 00 00 00 00 00	goto +0x4d <LBB2_38>

000000000000dd18 <LBB2_7>
    7075	b7 01 00 00 00 00 00 00	r1 = 0x0
    7076	15 03 01 00 00 00 00 00	if r3 == 0x0 goto +0x1 <LBB2_9>
    7077	bf 21 00 00 00 00 00 00	r1 = r2

000000000000dd30 <LBB2_9>
    7078	15 03 09 01 00 00 00 00	if r3 == 0x0 goto +0x109 <LBB2_72>
    7079	b7 00 00 00 02 00 00 00	r0 = 0x2
    7080	71 14 00 00 00 00 00 00	r4 = *(u8 *)(r1 + 0x0)
    7081	05 00 c0 01 00 00 00 00	goto +0x1c0 <LBB2_92>

000000000000dd50 <LBB2_11>
    7082	65 09 19 00 0c 00 00 00	if r9 s> 0xc goto +0x19 <LBB2_21>
    7083	65 09 37 00 0a 00 00 00	if r9 s> 0xa goto +0x37 <LBB2_32>
    7084	15 09 8e 00 09 00 00 00	if r9 == 0x9 goto +0x8e <LBB2_47>
    7085	15 09 01 00 0a 00 00 00	if r9 == 0xa goto +0x1 <LBB2_15>
    7086	05 00 41 00 00 00 00 00	goto +0x41 <LBB2_38>

000000000000dd78 <LBB2_15>
    7087	b7 00 00 00 0a 00 00 00	r0 = 0xa
    7088	05 00 d5 00 00 00 00 00	goto +0xd5 <LBB2_62>

000000000000dd88 <LBB2_16>
    7089	bf 91 00 00 00 00 00 00	r1 = r9
    7090	07 01 00 00 f9 ff ff ff	r1 += -0x7
    7091	b7 04 00 00 02 00 00 00	r4 = 0x2
    7092	2d 14 15 00 00 00 00 00	if r4 > r1 goto +0x15 <LBB2_26>
    7093	15 09 cf 00 05 00 00 00	if r9 == 0x5 goto +0xcf <LBB2_61>
    7094	15 09 01 00 06 00 00 00	if r9 == 0x6 goto +0x1 <LBB2_19>
    7095	05 00 38 00 00 00 00 00	goto +0x38 <LBB2_38>

000000000000ddc0 <LBB2_19>
    7096	55 03 05 01 00 00 00 00	if r3 != 0x0 goto +0x105 <LBB2_76>
    7097	bf a1 00 00 00 00 00 00	r1 = r10
    7098	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7099	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7100	85 10 00 00 08 04 00 00	call 0x408 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    7101	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7102	79 a2 c8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x38)
    7103	79 a3 c0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x40)
    7104	79 a5 b8 ff 00 00 00 00	r5 = *(u64 *)(r10 - 0x48)
    7105	bf 54 00 00 00 00 00 00	r4 = r5
    7106	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7107	05 00 2a 01 00 00 00 00	goto +0x12a <LBB2_78>

000000000000de20 <LBB2_21>
    7108	65 09 29 00 0e 00 00 00	if r9 s> 0xe goto +0x29 <LBB2_36>
    7109	15 09 77 00 0d 00 00 00	if r9 == 0xd goto +0x77 <LBB2_48>
    7110	15 09 01 00 0e 00 00 00	if r9 == 0xe goto +0x1 <LBB2_24>
    7111	05 00 28 00 00 00 00 00	goto +0x28 <LBB2_38>

000000000000de40 <LBB2_24>
    7112	25 03 be 00 07 00 00 00	if r3 > 0x7 goto +0xbe <LBB2_63>
    7113	05 00 1d 00 00 00 00 00	goto +0x1d <LBB2_35>

000000000000de50 <LBB2_26>
    7114	b7 01 00 00 08 00 00 00	r1 = 0x8
    7115	2d 31 e4 00 00 00 00 00	if r1 > r3 goto +0xe4 <LBB2_72>
    7116	bf a1 00 00 00 00 00 00	r1 = r10
    7117	07 01 00 00 e8 fe ff ff	r1 += -0x118
    7118	b7 03 00 00 08 00 00 00	r3 = 0x8
    7119	85 10 00 00 e5 0f 00 00	call 0xfe5 ; <<T as core::convert::TryInto<U>>::try_into>
    7120	79 a5 e8 fe 00 00 00 00	r5 = *(u64 *)(r10 - 0x118)
    7121	bf 51 00 00 00 00 00 00	r1 = r5
    7122	57 01 00 00 01 00 00 00	r1 &= 0x1
    7123	55 01 dc 00 00 00 00 00	if r1 != 0x0 goto +0xdc <LBB2_72>
    7124	71 a1 f0 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x110)
    7125	bf 12 00 00 00 00 00 00	r2 = r1
    7126	67 02 00 00 38 00 00 00	r2 <<= 0x38
    7127	bf 54 00 00 00 00 00 00	r4 = r5
    7128	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7129	4f 24 00 00 00 00 00 00	r4 |= r2
    7130	65 09 1f 01 06 00 00 00	if r9 s> 0x6 goto +0x11f <LBB2_79>
    7131	15 09 80 01 03 00 00 00	if r9 == 0x3 goto +0x180 <LBB2_91>
    7132	15 09 01 00 04 00 00 00	if r9 == 0x4 goto +0x1 <LBB2_31>
    7133	05 00 1e 01 00 00 00 00	goto +0x11e <LBB2_81>

000000000000def0 <LBB2_31>
    7134	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7135	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7136	4f 15 00 00 00 00 00 00	r5 |= r1
    7137	b7 00 00 00 04 00 00 00	r0 = 0x4
    7138	05 00 87 01 00 00 00 00	goto +0x187 <LBB2_92>

000000000000df18 <LBB2_32>
    7139	15 09 5b 00 0b 00 00 00	if r9 == 0xb goto +0x5b <LBB2_50>
    7140	15 09 01 00 0c 00 00 00	if r9 == 0xc goto +0x1 <LBB2_34>
    7141	05 00 0a 00 00 00 00 00	goto +0xa <LBB2_38>

000000000000df30 <LBB2_34>
    7142	25 03 b4 00 07 00 00 00	if r3 > 0x7 goto +0xb4 <LBB2_66>

000000000000df38 <LBB2_35>
    7143	18 01 00 00 12 30 02 00 00 00 00 00 00 00 00 00	r1 = 0x23012 ll
    7145	b7 02 00 00 23 00 00 00	r2 = 0x23
    7146	18 03 00 00 d0 4c 02 00 00 00 00 00 00 00 00 00	r3 = 0x24cd0 ll
    7148	85 10 00 00 f7 1a 00 00	call 0x1af7 ; <core::panicking::panic>
    7149	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000df70 <LBB2_36>
    7150	15 09 52 00 0f 00 00 00	if r9 == 0xf goto +0x52 <LBB2_51>
    7151	15 09 7b 00 10 00 00 00	if r9 == 0x10 goto +0x7b <LBB2_59>

000000000000df80 <LBB2_38>
    7152	bf a1 00 00 00 00 00 00	r1 = r10
    7153	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7154	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7155	85 10 00 00 77 0b 00 00	call 0xb77 ; <<T as core::convert::Into<U>>::into>
    7156	05 00 bf 00 00 00 00 00	goto +0xbf <LBB2_73>

000000000000dfa8 <LBB2_39>
    7157	15 03 ba 00 00 00 00 00	if r3 == 0x0 goto +0xba <LBB2_72>
    7158	bf 81 00 00 00 00 00 00	r1 = r8
    7159	07 01 00 00 fe ff ff ff	r1 += -0x2
    7160	25 01 01 00 1f 00 00 00	if r1 > 0x1f goto +0x1 <LBB2_41>
    7161	05 00 21 01 00 00 00 00	goto +0x121 <LBB2_83>

000000000000dfd0 <LBB2_41>
    7162	71 21 00 00 00 00 00 00	r1 = *(u8 *)(r2 + 0x0)
    7163	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    7164	bf 72 00 00 00 00 00 00	r2 = r7
    7165	07 02 00 00 02 00 00 00	r2 += 0x2
    7166	bf a1 00 00 00 00 00 00	r1 = r10
    7167	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7168	b7 03 00 00 20 00 00 00	r3 = 0x20
    7169	85 10 00 00 02 13 00 00	call 0x1302 ; <solana_program::pubkey::Pubkey::new>
    7170	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    7171	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    7172	79 a2 c0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x40)
    7173	7b 2a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r2
    7174	79 a3 d0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x30)
    7175	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
    7176	71 a4 bf ff 00 00 00 00	r4 = *(u8 *)(r10 - 0x41)
    7177	7b 4a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r4
    7178	61 a5 b8 ff 00 00 00 00	r5 = *(u32 *)(r10 - 0x48)
    7179	69 a9 bc ff 00 00 00 00	r9 = *(u16 *)(r10 - 0x44)
    7180	71 a4 be ff 00 00 00 00	r4 = *(u8 *)(r10 - 0x42)
    7181	7b 3a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r3
    7182	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    7183	7b 2a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r2
    7184	15 08 73 01 22 00 00 00	if r8 == 0x22 goto +0x173 <LBB2_95>
    7185	b7 00 00 00 00 00 00 00	r0 = 0x0
    7186	71 72 22 00 00 00 00 00	r2 = *(u8 *)(r7 + 0x22)
    7187	b7 01 00 00 00 00 00 00	r1 = 0x0
    7188	15 02 10 00 00 00 00 00	if r2 == 0x0 goto +0x10 <LBB2_46>
    7189	55 02 6e 01 01 00 00 00	if r2 != 0x1 goto +0x16e <LBB2_95>
    7190	07 08 00 00 dd ff ff ff	r8 += -0x23
    7191	b7 01 00 00 20 00 00 00	r1 = 0x20
    7192	2d 81 6b 01 00 00 00 00	if r1 > r8 goto +0x16b <LBB2_95>
    7193	07 07 00 00 23 00 00 00	r7 += 0x23
    7194	bf a1 00 00 00 00 00 00	r1 = r10
    7195	07 01 00 00 90 ff ff ff	r1 += -0x70
    7196	bf 72 00 00 00 00 00 00	r2 = r7
    7197	b7 03 00 00 20 00 00 00	r3 = 0x20
    7198	bf 57 00 00 00 00 00 00	r7 = r5
    7199	bf 48 00 00 00 00 00 00	r8 = r4
    7200	85 10 00 00 e3 12 00 00	call 0x12e3 ; <solana_program::pubkey::Pubkey::new>
    7201	bf 84 00 00 00 00 00 00	r4 = r8
    7202	b7 00 00 00 00 00 00 00	r0 = 0x0
    7203	bf 75 00 00 00 00 00 00	r5 = r7
    7204	b7 01 00 00 01 00 00 00	r1 = 0x1

000000000000e128 <LBB2_46>
    7205	67 04 00 00 10 00 00 00	r4 <<= 0x10
    7206	4f 49 00 00 00 00 00 00	r9 |= r4
    7207	67 09 00 00 20 00 00 00	r9 <<= 0x20
    7208	4f 95 00 00 00 00 00 00	r5 |= r9
    7209	79 a2 90 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x70)
    7210	7b 2a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r2
    7211	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
    7212	7b 2a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r2
    7213	79 a2 a0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x60)
    7214	7b 2a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r2
    7215	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
    7216	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
    7217	7b 2a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r2
    7218	79 a2 88 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x78)
    7219	7b 2a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r2
    7220	79 a2 80 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x80)
    7221	7b 2a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r2
    7222	79 a2 78 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x88)
    7223	7b 2a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r2
    7224	79 a4 e0 fe 00 00 00 00	r4 = *(u64 *)(r10 - 0x120)
    7225	79 a7 d8 fe 00 00 00 00	r7 = *(u64 *)(r10 - 0x128)
    7226	05 00 2f 01 00 00 00 00	goto +0x12f <LBB2_92>

000000000000e1d8 <LBB2_47>
    7227	b7 00 00 00 09 00 00 00	r0 = 0x9
    7228	05 00 49 00 00 00 00 00	goto +0x49 <LBB2_62>

000000000000e1e8 <LBB2_48>
    7229	25 03 05 00 07 00 00 00	if r3 > 0x7 goto +0x5 <LBB2_53>
    7230	05 00 a8 ff 00 00 00 00	goto -0x58 <LBB2_35>

000000000000e1f8 <LBB2_50>
    7231	b7 00 00 00 0b 00 00 00	r0 = 0xb
    7232	05 00 45 00 00 00 00 00	goto +0x45 <LBB2_62>

000000000000e208 <LBB2_51>
    7233	25 03 15 00 07 00 00 00	if r3 > 0x7 goto +0x15 <LBB2_56>
    7234	05 00 a4 ff 00 00 00 00	goto -0x5c <LBB2_35>

000000000000e218 <LBB2_53>
    7235	bf a1 00 00 00 00 00 00	r1 = r10
    7236	07 01 00 00 08 ff ff ff	r1 += -0xf8
    7237	b7 03 00 00 08 00 00 00	r3 = 0x8
    7238	85 10 00 00 6e 0f 00 00	call 0xf6e ; <<T as core::convert::TryInto<U>>::try_into>
    7239	79 a5 08 ff 00 00 00 00	r5 = *(u64 *)(r10 - 0xf8)
    7240	bf 51 00 00 00 00 00 00	r1 = r5
    7241	57 01 00 00 01 00 00 00	r1 &= 0x1
    7242	55 01 65 00 00 00 00 00	if r1 != 0x0 goto +0x65 <LBB2_72>
    7243	15 08 64 00 09 00 00 00	if r8 == 0x9 goto +0x64 <LBB2_72>
    7244	71 a1 10 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0xf0)
    7245	bf 12 00 00 00 00 00 00	r2 = r1
    7246	67 02 00 00 38 00 00 00	r2 <<= 0x38
    7247	bf 54 00 00 00 00 00 00	r4 = r5
    7248	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7249	4f 24 00 00 00 00 00 00	r4 |= r2
    7250	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7251	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7252	4f 15 00 00 00 00 00 00	r5 |= r1
    7253	b7 00 00 00 0d 00 00 00	r0 = 0xd
    7254	05 00 57 00 00 00 00 00	goto +0x57 <LBB2_69>

000000000000e2b8 <LBB2_56>
    7255	bf a1 00 00 00 00 00 00	r1 = r10
    7256	07 01 00 00 28 ff ff ff	r1 += -0xd8
    7257	b7 03 00 00 08 00 00 00	r3 = 0x8
    7258	85 10 00 00 5a 0f 00 00	call 0xf5a ; <<T as core::convert::TryInto<U>>::try_into>
    7259	79 a5 28 ff 00 00 00 00	r5 = *(u64 *)(r10 - 0xd8)
    7260	bf 51 00 00 00 00 00 00	r1 = r5
    7261	57 01 00 00 01 00 00 00	r1 &= 0x1
    7262	55 01 51 00 00 00 00 00	if r1 != 0x0 goto +0x51 <LBB2_72>
    7263	15 08 50 00 09 00 00 00	if r8 == 0x9 goto +0x50 <LBB2_72>
    7264	71 a1 30 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0xd0)
    7265	bf 12 00 00 00 00 00 00	r2 = r1
    7266	67 02 00 00 38 00 00 00	r2 <<= 0x38
    7267	bf 54 00 00 00 00 00 00	r4 = r5
    7268	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7269	4f 24 00 00 00 00 00 00	r4 |= r2
    7270	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7271	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7272	4f 15 00 00 00 00 00 00	r5 |= r1
    7273	b7 00 00 00 0f 00 00 00	r0 = 0xf
    7274	05 00 43 00 00 00 00 00	goto +0x43 <LBB2_69>

000000000000e358 <LBB2_59>
    7275	b7 01 00 00 20 00 00 00	r1 = 0x20
    7276	2d 31 96 00 00 00 00 00	if r1 > r3 goto +0x96 <LBB2_82>
    7277	bf a1 00 00 00 00 00 00	r1 = r10
    7278	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7279	b7 03 00 00 20 00 00 00	r3 = 0x20
    7280	85 10 00 00 93 12 00 00	call 0x1293 ; <solana_program::pubkey::Pubkey::new>
    7281	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7282	7b 1a 9f ff 00 00 00 00	*(u64 *)(r10 - 0x61) = r1
    7283	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    7284	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    7285	79 a1 9f ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x61)
    7286	7b 1a ef ff 00 00 00 00	*(u64 *)(r10 - 0x11) = r1
    7287	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    7288	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    7289	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    7290	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    7291	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7292	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    7293	79 a1 ef ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x11)
    7294	7b 1a 67 ff 00 00 00 00	*(u64 *)(r10 - 0x99) = r1
    7295	b7 00 00 00 10 00 00 00	r0 = 0x10
    7296	71 a7 c0 ff 00 00 00 00	r7 = *(u8 *)(r10 - 0x40)
    7297	79 a4 b8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x48)
    7298	bf 45 00 00 00 00 00 00	r5 = r4
    7299	77 05 00 00 08 00 00 00	r5 >>= 0x8
    7300	05 00 2a 00 00 00 00 00	goto +0x2a <LBB2_70>

000000000000e428 <LBB2_61>
    7301	b7 00 00 00 05 00 00 00	r0 = 0x5

000000000000e430 <LBB2_62>
    7302	05 00 e3 00 00 00 00 00	goto +0xe3 <LBB2_92>

000000000000e438 <LBB2_63>
    7303	bf a1 00 00 00 00 00 00	r1 = r10
    7304	07 01 00 00 18 ff ff ff	r1 += -0xe8
    7305	b7 03 00 00 08 00 00 00	r3 = 0x8
    7306	85 10 00 00 2a 0f 00 00	call 0xf2a ; <<T as core::convert::TryInto<U>>::try_into>
    7307	79 a5 18 ff 00 00 00 00	r5 = *(u64 *)(r10 - 0xe8)
    7308	bf 51 00 00 00 00 00 00	r1 = r5
    7309	57 01 00 00 01 00 00 00	r1 &= 0x1
    7310	55 01 21 00 00 00 00 00	if r1 != 0x0 goto +0x21 <LBB2_72>
    7311	15 08 20 00 09 00 00 00	if r8 == 0x9 goto +0x20 <LBB2_72>
    7312	71 a1 20 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0xe0)
    7313	bf 12 00 00 00 00 00 00	r2 = r1
    7314	67 02 00 00 38 00 00 00	r2 <<= 0x38
    7315	bf 54 00 00 00 00 00 00	r4 = r5
    7316	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7317	4f 24 00 00 00 00 00 00	r4 |= r2
    7318	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7319	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7320	4f 15 00 00 00 00 00 00	r5 |= r1
    7321	b7 00 00 00 0e 00 00 00	r0 = 0xe
    7322	05 00 13 00 00 00 00 00	goto +0x13 <LBB2_69>

000000000000e4d8 <LBB2_66>
    7323	bf a1 00 00 00 00 00 00	r1 = r10
    7324	07 01 00 00 f8 fe ff ff	r1 += -0x108
    7325	b7 03 00 00 08 00 00 00	r3 = 0x8
    7326	85 10 00 00 16 0f 00 00	call 0xf16 ; <<T as core::convert::TryInto<U>>::try_into>
    7327	79 a5 f8 fe 00 00 00 00	r5 = *(u64 *)(r10 - 0x108)
    7328	bf 51 00 00 00 00 00 00	r1 = r5
    7329	57 01 00 00 01 00 00 00	r1 &= 0x1
    7330	55 01 0d 00 00 00 00 00	if r1 != 0x0 goto +0xd <LBB2_72>
    7331	15 08 0c 00 09 00 00 00	if r8 == 0x9 goto +0xc <LBB2_72>
    7332	71 a1 00 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x100)
    7333	bf 12 00 00 00 00 00 00	r2 = r1
    7334	67 02 00 00 38 00 00 00	r2 <<= 0x38
    7335	bf 54 00 00 00 00 00 00	r4 = r5
    7336	77 04 00 00 08 00 00 00	r4 >>= 0x8
    7337	4f 24 00 00 00 00 00 00	r4 |= r2
    7338	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7339	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7340	4f 15 00 00 00 00 00 00	r5 |= r1
    7341	b7 00 00 00 0c 00 00 00	r0 = 0xc

000000000000e570 <LBB2_69>
    7342	71 77 09 00 00 00 00 00	r7 = *(u8 *)(r7 + 0x9)

000000000000e578 <LBB2_70>
    7343	05 00 ba 00 00 00 00 00	goto +0xba <LBB2_92>

000000000000e580 <LBB2_72>
    7344	bf a1 00 00 00 00 00 00	r1 = r10
    7345	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7346	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7347	85 10 00 00 11 03 00 00	call 0x311 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>

000000000000e5a0 <LBB2_73>
    7348	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7349	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    7350	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    7351	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    7352	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    7353	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    7354	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)

000000000000e5d8 <LBB2_74>
    7355	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    7356	b7 01 00 00 01 00 00 00	r1 = 0x1
    7357	05 00 c4 00 00 00 00 00	goto +0xc4 <LBB2_75>

000000000000e5f0 <LBB2_76>
    7358	71 74 01 00 00 00 00 00	r4 = *(u8 *)(r7 + 0x1)
    7359	b7 01 00 00 04 00 00 00	r1 = 0x4
    7360	2d 41 71 00 00 00 00 00	if r1 > r4 goto +0x71 <LBB2_85>
    7361	bf a1 00 00 00 00 00 00	r1 = r10
    7362	07 01 00 00 e0 ff ff ff	r1 += -0x20
    7363	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7364	85 10 00 00 a6 0a 00 00	call 0xaa6 ; <<T as core::convert::Into<U>>::into>
    7365	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    7366	7b 1a be ff 00 00 00 00	*(u64 *)(r10 - 0x42) = r1
    7367	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7368	7b 1a c6 ff 00 00 00 00	*(u64 *)(r10 - 0x3a) = r1
    7369	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    7370	7b 1a ce ff 00 00 00 00	*(u64 *)(r10 - 0x32) = r1
    7371	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    7372	7b 1a d6 ff 00 00 00 00	*(u64 *)(r10 - 0x2a) = r1
    7373	7b 1a ae ff 00 00 00 00	*(u64 *)(r10 - 0x52) = r1
    7374	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    7375	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    7376	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    7377	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    7378	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    7379	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    7380	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7381	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    7382	79 a1 ae ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x52)
    7383	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    7384	79 a1 a6 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5a)
    7385	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    7386	79 a1 9e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x62)
    7387	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    7388	79 a1 96 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6a)
    7389	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    7390	bf a1 00 00 00 00 00 00	r1 = r10
    7391	07 01 00 00 e0 ff ff ff	r1 += -0x20
    7392	bf a2 00 00 00 00 00 00	r2 = r10
    7393	07 02 00 00 b8 ff ff ff	r2 += -0x48
    7394	85 10 00 00 cd 02 00 00	call 0x2cd ; <<T as core::convert::From<T>>::from>
    7395	71 a1 e7 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x19)
    7396	67 01 00 00 10 00 00 00	r1 <<= 0x10
    7397	69 a2 e5 ff 00 00 00 00	r2 = *(u16 *)(r10 - 0x1b)
    7398	4f 12 00 00 00 00 00 00	r2 |= r1
    7399	67 02 00 00 20 00 00 00	r2 <<= 0x20
    7400	61 a4 e1 ff 00 00 00 00	r4 = *(u32 *)(r10 - 0x1f)
    7401	4f 24 00 00 00 00 00 00	r4 |= r2
    7402	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    7403	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
    7404	79 a3 e8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x18)
    7405	71 a5 e0 ff 00 00 00 00	r5 = *(u8 *)(r10 - 0x20)

000000000000e770 <LBB2_78>
    7406	bf 40 00 00 00 00 00 00	r0 = r4
    7407	77 00 00 00 30 00 00 00	r0 >>= 0x30
    7408	73 0a bf ff 00 00 00 00	*(u8 *)(r10 - 0x41) = r0
    7409	bf 40 00 00 00 00 00 00	r0 = r4
    7410	77 00 00 00 20 00 00 00	r0 >>= 0x20
    7411	6b 0a bd ff 00 00 00 00	*(u16 *)(r10 - 0x43) = r0
    7412	63 4a b9 ff 00 00 00 00	*(u32 *)(r10 - 0x47) = r4
    7413	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    7414	7b 2a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r2
    7415	7b 3a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r3
    7416	73 5a b8 ff 00 00 00 00	*(u8 *)(r10 - 0x48) = r5
    7417	05 00 bc 00 00 00 00 00	goto +0xbc <LBB2_98>

000000000000e7d0 <LBB2_79>
    7418	15 09 66 00 07 00 00 00	if r9 == 0x7 goto +0x66 <LBB2_93>
    7419	15 09 6a 00 08 00 00 00	if r9 == 0x8 goto +0x6a <LBB2_94>

000000000000e7e0 <LBB2_81>
    7420	18 01 00 00 81 30 02 00 00 00 00 00 00 00 00 00	r1 = 0x23081 ll
    7422	b7 02 00 00 28 00 00 00	r2 = 0x28
    7423	18 03 00 00 e8 4c 02 00 00 00 00 00 00 00 00 00	r3 = 0x24ce8 ll
    7425	85 10 00 00 e2 19 00 00	call 0x19e2 ; <core::panicking::panic>
    7426	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000e818 <LBB2_82>
    7427	bf a1 00 00 00 00 00 00	r1 = r10
    7428	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7429	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7430	85 10 00 00 64 0a 00 00	call 0xa64 ; <<T as core::convert::Into<U>>::into>
    7431	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7432	7b 1a 9f ff 00 00 00 00	*(u64 *)(r10 - 0x61) = r1
    7433	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    7434	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    7435	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    7436	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    7437	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    7438	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    7439	79 a1 9f ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x61)
    7440	7b 1a ef ff 00 00 00 00	*(u64 *)(r10 - 0x11) = r1
    7441	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    7442	71 a2 c0 ff 00 00 00 00	r2 = *(u8 *)(r10 - 0x40)
    7443	73 2a c0 ff 00 00 00 00	*(u8 *)(r10 - 0x40) = r2
    7444	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    7445	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    7446	7b 1a c1 ff 00 00 00 00	*(u64 *)(r10 - 0x3f) = r1
    7447	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7448	7b 1a c9 ff 00 00 00 00	*(u64 *)(r10 - 0x37) = r1
    7449	79 a1 ef ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x11)
    7450	05 00 15 00 00 00 00 00	goto +0x15 <LBB2_84>

000000000000e8d8 <LBB2_83>
    7451	bf a1 00 00 00 00 00 00	r1 = r10
    7452	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7453	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7454	85 10 00 00 4c 0a 00 00	call 0xa4c ; <<T as core::convert::Into<U>>::into>
    7455	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    7456	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    7457	79 a2 c0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x40)
    7458	7b 2a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r2
    7459	79 a3 c8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x38)
    7460	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
    7461	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    7462	71 a4 bf ff 00 00 00 00	r4 = *(u8 *)(r10 - 0x41)
    7463	61 a5 b8 ff 00 00 00 00	r5 = *(u32 *)(r10 - 0x48)
    7464	69 a0 bc ff 00 00 00 00	r0 = *(u16 *)(r10 - 0x44)
    7465	71 a7 be ff 00 00 00 00	r7 = *(u8 *)(r10 - 0x42)
    7466	73 7a be ff 00 00 00 00	*(u8 *)(r10 - 0x42) = r7
    7467	6b 0a bc ff 00 00 00 00	*(u16 *)(r10 - 0x44) = r0
    7468	63 5a b8 ff 00 00 00 00	*(u32 *)(r10 - 0x48) = r5
    7469	73 4a bf ff 00 00 00 00	*(u8 *)(r10 - 0x41) = r4
    7470	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r2
    7471	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3

000000000000e980 <LBB2_84>
    7472	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    7473	05 00 84 00 00 00 00 00	goto +0x84 <LBB2_98>

000000000000e990 <LBB2_85>
    7474	15 08 67 00 02 00 00 00	if r8 == 0x2 goto +0x67 <LBB2_96>
    7475	b7 05 00 00 00 00 00 00	r5 = 0x0
    7476	71 72 02 00 00 00 00 00	r2 = *(u8 *)(r7 + 0x2)
    7477	15 02 17 00 00 00 00 00	if r2 == 0x0 goto +0x17 <LBB2_90>
    7478	55 02 63 00 01 00 00 00	if r2 != 0x1 goto +0x63 <LBB2_96>
    7479	07 08 00 00 fd ff ff ff	r8 += -0x3
    7480	b7 01 00 00 20 00 00 00	r1 = 0x20
    7481	2d 81 60 00 00 00 00 00	if r1 > r8 goto +0x60 <LBB2_96>
    7482	07 07 00 00 03 00 00 00	r7 += 0x3
    7483	bf a1 00 00 00 00 00 00	r1 = r10
    7484	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7485	bf 72 00 00 00 00 00 00	r2 = r7
    7486	b7 03 00 00 20 00 00 00	r3 = 0x20
    7487	bf 47 00 00 00 00 00 00	r7 = r4
    7488	85 10 00 00 c3 11 00 00	call 0x11c3 ; <solana_program::pubkey::Pubkey::new>
    7489	bf 74 00 00 00 00 00 00	r4 = r7
    7490	79 a1 b9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x47)
    7491	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    7492	79 a1 c1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f)
    7493	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    7494	79 a1 c9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x37)
    7495	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    7496	61 a1 d0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x30)
    7497	63 1a a7 ff 00 00 00 00	*(u32 *)(r10 - 0x59) = r1
    7498	b7 05 00 00 00 00 00 01	r5 = 0x1000000
    7499	61 a1 d4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x2c)
    7500	71 a3 b8 ff 00 00 00 00	r3 = *(u8 *)(r10 - 0x48)

000000000000ea68 <LBB2_90>
    7501	61 a2 a7 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x59)
    7502	63 2a f7 ff 00 00 00 00	*(u32 *)(r10 - 0x9) = r2
    7503	79 a2 a0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x60)
    7504	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
    7505	79 a2 90 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x70)
    7506	7b 2a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r2
    7507	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
    7508	7b 2a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r2
    7509	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
    7510	7b 2a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r2
    7511	61 a2 f7 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x9)
    7512	63 2a 6f ff 00 00 00 00	*(u32 *)(r10 - 0x91) = r2
    7513	b7 00 00 00 06 00 00 00	r0 = 0x6
    7514	bf 37 00 00 00 00 00 00	r7 = r3
    7515	05 00 0e 00 00 00 00 00	goto +0xe <LBB2_92>

000000000000eae0 <LBB2_91>
    7516	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7517	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7518	4f 15 00 00 00 00 00 00	r5 |= r1
    7519	b7 00 00 00 03 00 00 00	r0 = 0x3
    7520	05 00 09 00 00 00 00 00	goto +0x9 <LBB2_92>

000000000000eb08 <LBB2_93>
    7521	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7522	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7523	4f 15 00 00 00 00 00 00	r5 |= r1
    7524	b7 00 00 00 07 00 00 00	r0 = 0x7
    7525	05 00 04 00 00 00 00 00	goto +0x4 <LBB2_92>

000000000000eb30 <LBB2_94>
    7526	77 05 00 00 10 00 00 00	r5 >>= 0x10
    7527	67 01 00 00 30 00 00 00	r1 <<= 0x30
    7528	4f 15 00 00 00 00 00 00	r5 |= r1
    7529	b7 00 00 00 08 00 00 00	r0 = 0x8

000000000000eb50 <LBB2_92>
    7530	73 76 18 00 00 00 00 00	*(u8 *)(r6 + 0x18) = r7
    7531	63 06 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r0
    7532	57 04 00 00 ff 00 00 00	r4 &= 0xff
    7533	67 05 00 00 08 00 00 00	r5 <<= 0x8
    7534	4f 45 00 00 00 00 00 00	r5 |= r4
    7535	7b 56 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r5
    7536	79 a2 58 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xa8)
    7537	7b 26 19 00 00 00 00 00	*(u64 *)(r6 + 0x19) = r2
    7538	79 a2 60 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xa0)
    7539	7b 26 21 00 00 00 00 00	*(u64 *)(r6 + 0x21) = r2
    7540	79 a2 68 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x98)
    7541	7b 26 29 00 00 00 00 00	*(u64 *)(r6 + 0x29) = r2
    7542	61 a2 6f ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x91)
    7543	63 26 30 00 00 00 00 00	*(u32 *)(r6 + 0x30) = r2
    7544	63 16 34 00 00 00 00 00	*(u32 *)(r6 + 0x34) = r1
    7545	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    7546	7b 16 38 00 00 00 00 00	*(u64 *)(r6 + 0x38) = r1
    7547	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    7548	7b 16 40 00 00 00 00 00	*(u64 *)(r6 + 0x40) = r1
    7549	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    7550	7b 16 48 00 00 00 00 00	*(u64 *)(r6 + 0x48) = r1
    7551	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    7552	7b 16 50 00 00 00 00 00	*(u64 *)(r6 + 0x50) = r1
    7553	b7 01 00 00 00 00 00 00	r1 = 0x0

000000000000ec10 <LBB2_75>
    7554	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    7555	95 00 00 00 00 00 00 00	exit

000000000000ec20 <LBB2_95>
    7556	bf a1 00 00 00 00 00 00	r1 = r10
    7557	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7558	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7559	85 10 00 00 e3 09 00 00	call 0x9e3 ; <<T as core::convert::Into<U>>::into>
    7560	61 a1 d4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x2c)
    7561	63 1a a8 ff 00 00 00 00	*(u32 *)(r10 - 0x58) = r1
    7562	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    7563	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
    7564	79 a1 cc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x34)
    7565	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    7566	79 a2 bc ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x44)
    7567	7b 2a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r2
    7568	79 a3 c4 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x3c)
    7569	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
    7570	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    7571	61 a4 b8 ff 00 00 00 00	r4 = *(u32 *)(r10 - 0x48)
    7572	63 4a b8 ff 00 00 00 00	*(u32 *)(r10 - 0x48) = r4
    7573	7b 2a bc ff 00 00 00 00	*(u64 *)(r10 - 0x44) = r2
    7574	7b 3a c4 ff 00 00 00 00	*(u64 *)(r10 - 0x3c) = r3
    7575	7b 1a cc ff 00 00 00 00	*(u64 *)(r10 - 0x34) = r1
    7576	61 a1 f8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x8)
    7577	05 00 1b 00 00 00 00 00	goto +0x1b <LBB2_97>

000000000000ecd0 <LBB2_96>
    7578	bf a1 00 00 00 00 00 00	r1 = r10
    7579	07 01 00 00 b8 ff ff ff	r1 += -0x48
    7580	b7 02 00 00 0c 00 00 00	r2 = 0xc
    7581	85 10 00 00 cd 09 00 00	call 0x9cd ; <<T as core::convert::Into<U>>::into>
    7582	61 a1 d4 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x2c)
    7583	63 1a a7 ff 00 00 00 00	*(u32 *)(r10 - 0x59) = r1
    7584	79 a1 cd ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x33)
    7585	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    7586	79 a1 bd ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x43)
    7587	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    7588	79 a1 c5 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3b)
    7589	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    7590	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    7591	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    7592	61 a1 a7 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x59)
    7593	63 1a f7 ff 00 00 00 00	*(u32 *)(r10 - 0x9) = r1
    7594	61 a1 b8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x48)
    7595	71 a2 bc ff 00 00 00 00	r2 = *(u8 *)(r10 - 0x44)
    7596	73 2a bc ff 00 00 00 00	*(u8 *)(r10 - 0x44) = r2
    7597	63 1a b8 ff 00 00 00 00	*(u32 *)(r10 - 0x48) = r1
    7598	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    7599	7b 1a bd ff 00 00 00 00	*(u64 *)(r10 - 0x43) = r1
    7600	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7601	7b 1a c5 ff 00 00 00 00	*(u64 *)(r10 - 0x3b) = r1
    7602	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    7603	7b 1a cd ff 00 00 00 00	*(u64 *)(r10 - 0x33) = r1
    7604	61 a1 f7 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x9)

000000000000eda8 <LBB2_97>
    7605	63 1a d4 ff 00 00 00 00	*(u32 *)(r10 - 0x2c) = r1

000000000000edb0 <LBB2_98>
    7606	bf a1 00 00 00 00 00 00	r1 = r10
    7607	07 01 00 00 90 ff ff ff	r1 += -0x70
    7608	bf a2 00 00 00 00 00 00	r2 = r10
    7609	07 02 00 00 b8 ff ff ff	r2 += -0x48
    7610	85 10 00 00 f5 01 00 00	call 0x1f5 ; <<T as core::convert::From<T>>::from>
    7611	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    7612	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    7613	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    7614	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    7615	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    7616	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    7617	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    7618	05 00 f8 fe 00 00 00 00	goto -0x108 <LBB2_74>

000000000000ee18 <spl_token::instruction::is_valid_signer_index>
    7619	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
    7620	bf a2 00 00 00 00 00 00	r2 = r10
    7621	07 02 00 00 f8 ff ff ff	r2 += -0x8
    7622	18 01 00 00 50 31 02 00 00 00 00 00 00 00 00 00	r1 = 0x23150 ll
    7624	85 10 00 00 96 0d 00 00	call 0xd96 ; <core::ops::range::RangeInclusive<Idx>::contains>
    7625	95 00 00 00 00 00 00 00	exit

000000000000ee50 <core::alloc::global::GlobalAlloc::alloc_zeroed>
    7626	bf 24 00 00 00 00 00 00	r4 = r2
    7627	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
    7628	79 11 08 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x8)
    7629	0f 21 00 00 00 00 00 00	r1 += r2
    7630	79 25 00 00 00 00 00 00	r5 = *(u64 *)(r2 + 0x0)
    7631	15 05 01 00 00 00 00 00	if r5 == 0x0 goto +0x1 <LBB0_2>
    7632	bf 51 00 00 00 00 00 00	r1 = r5

000000000000ee88 <LBB0_2>
    7633	bf 15 00 00 00 00 00 00	r5 = r1
    7634	1f 45 00 00 00 00 00 00	r5 -= r4
    7635	b7 00 00 00 00 00 00 00	r0 = 0x0
    7636	b7 07 00 00 01 00 00 00	r7 = 0x1
    7637	2d 15 01 00 00 00 00 00	if r5 > r1 goto +0x1 <LBB0_4>
    7638	b7 07 00 00 00 00 00 00	r7 = 0x0

000000000000eeb8 <LBB0_4>
    7639	b7 06 00 00 00 00 00 00	r6 = 0x0
    7640	55 07 01 00 00 00 00 00	if r7 != 0x0 goto +0x1 <LBB0_6>
    7641	bf 56 00 00 00 00 00 00	r6 = r5

000000000000eed0 <LBB0_6>
    7642	87 03 00 00 00 00 00 00	r3 = -r3
    7643	5f 36 00 00 00 00 00 00	r6 &= r3
    7644	bf 21 00 00 00 00 00 00	r1 = r2
    7645	07 01 00 00 08 00 00 00	r1 += 0x8
    7646	2d 61 07 00 00 00 00 00	if r1 > r6 goto +0x7 <LBB0_9>
    7647	7b 62 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r6
    7648	15 06 05 00 00 00 00 00	if r6 == 0x0 goto +0x5 <LBB0_9>
    7649	bf 61 00 00 00 00 00 00	r1 = r6
    7650	b7 02 00 00 00 00 00 00	r2 = 0x0
    7651	bf 43 00 00 00 00 00 00	r3 = r4
    7652	85 10 00 00 81 1f 00 00	call 0x1f81 ; <memset>
    7653	bf 60 00 00 00 00 00 00	r0 = r6

000000000000ef30 <LBB0_9>
    7654	95 00 00 00 00 00 00 00	exit

000000000000ef38 <core::alloc::global::GlobalAlloc::realloc>
    7655	79 17 00 00 00 00 00 00	r7 = *(u64 *)(r1 + 0x0)
    7656	79 11 08 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x8)
    7657	0f 71 00 00 00 00 00 00	r1 += r7
    7658	79 70 00 00 00 00 00 00	r0 = *(u64 *)(r7 + 0x0)
    7659	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB1_2>
    7660	bf 01 00 00 00 00 00 00	r1 = r0

000000000000ef68 <LBB1_2>
    7661	bf 18 00 00 00 00 00 00	r8 = r1
    7662	1f 58 00 00 00 00 00 00	r8 -= r5
    7663	b7 00 00 00 00 00 00 00	r0 = 0x0
    7664	b7 09 00 00 01 00 00 00	r9 = 0x1
    7665	2d 18 01 00 00 00 00 00	if r8 > r1 goto +0x1 <LBB1_4>
    7666	b7 09 00 00 00 00 00 00	r9 = 0x0

000000000000ef98 <LBB1_4>
    7667	b7 06 00 00 00 00 00 00	r6 = 0x0
    7668	55 09 01 00 00 00 00 00	if r9 != 0x0 goto +0x1 <LBB1_6>
    7669	bf 86 00 00 00 00 00 00	r6 = r8

000000000000efb0 <LBB1_6>
    7670	87 04 00 00 00 00 00 00	r4 = -r4
    7671	5f 46 00 00 00 00 00 00	r6 &= r4
    7672	bf 71 00 00 00 00 00 00	r1 = r7
    7673	07 01 00 00 08 00 00 00	r1 += 0x8
    7674	2d 61 08 00 00 00 00 00	if r1 > r6 goto +0x8 <LBB1_11>
    7675	7b 67 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r6
    7676	15 06 06 00 00 00 00 00	if r6 == 0x0 goto +0x6 <LBB1_11>
    7677	2d 53 01 00 00 00 00 00	if r3 > r5 goto +0x1 <LBB1_10>
    7678	bf 35 00 00 00 00 00 00	r5 = r3

000000000000eff8 <LBB1_10>
    7679	bf 61 00 00 00 00 00 00	r1 = r6
    7680	bf 53 00 00 00 00 00 00	r3 = r5
    7681	85 10 00 00 3e 1f 00 00	call 0x1f3e ; <memcpy>
    7682	bf 60 00 00 00 00 00 00	r0 = r6

000000000000f018 <LBB1_11>
    7683	95 00 00 00 00 00 00 00	exit

000000000000f020 <bincode::internal::deserialize>
    7684	bf 16 00 00 00 00 00 00	r6 = r1
    7685	bf a1 00 00 00 00 00 00	r1 = r10
    7686	07 01 00 00 a0 ff ff ff	r1 += -0x60
    7687	85 10 00 00 77 11 00 00	call 0x1177 ; <bincode::de::read::SliceReader::new>
    7688	79 a3 a8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x58)
    7689	79 a2 a0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x60)
    7690	bf a1 00 00 00 00 00 00	r1 = r10
    7691	07 01 00 00 90 ff ff ff	r1 += -0x70
    7692	85 10 00 00 88 0a 00 00	call 0xa88 ; <bincode::de::Deserializer<R,O>::with_bincode_read>
    7693	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    7694	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    7695	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    7696	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    7697	bf a1 00 00 00 00 00 00	r1 = r10
    7698	07 01 00 00 e0 ff ff ff	r1 += -0x20
    7699	bf a2 00 00 00 00 00 00	r2 = r10
    7700	07 02 00 00 b0 ff ff ff	r2 += -0x50
    7701	85 10 00 00 d1 0c 00 00	call 0xcd1 ; <solana_program::rent::_::<impl serde::de::Deserialize for solana_program::rent::Rent>::deserialize>
    7702	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    7703	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    7704	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    7705	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    7706	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7707	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
    7708	15 02 0b 00 01 00 00 00	if r2 == 0x1 goto +0xb <LBB2_2>
    7709	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)
    7710	7b 2a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r2
    7711	79 a2 d0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x30)
    7712	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r2
    7713	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    7714	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    7715	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    7716	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    7717	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    7718	b7 01 00 00 00 00 00 00	r1 = 0x0
    7719	05 00 03 00 00 00 00 00	goto +0x3 <LBB2_3>

000000000000f140 <LBB2_2>
    7720	85 10 00 00 9c 00 00 00	call 0x9c ; <<T as core::convert::From<T>>::from>
    7721	7b 06 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r0
    7722	b7 01 00 00 01 00 00 00	r1 = 0x1

000000000000f158 <LBB2_3>
    7723	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    7724	95 00 00 00 00 00 00 00	exit

000000000000f168 <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
    7725	bf 25 00 00 00 00 00 00	r5 = r2
    7726	b7 00 00 00 00 00 00 00	r0 = 0x0
    7727	5d 45 09 00 00 00 00 00	if r5 != r4 goto +0x9 <LBB0_4>
    7728	b7 00 00 00 01 00 00 00	r0 = 0x1
    7729	1d 31 07 00 00 00 00 00	if r1 == r3 goto +0x7 <LBB0_4>
    7730	bf 32 00 00 00 00 00 00	r2 = r3
    7731	bf 53 00 00 00 00 00 00	r3 = r5
    7732	85 10 00 00 5c 1f 00 00	call 0x1f5c ; <memcmp>
    7733	bf 01 00 00 00 00 00 00	r1 = r0
    7734	b7 00 00 00 01 00 00 00	r0 = 0x1
    7735	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB0_4>
    7736	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000000f1c8 <LBB0_4>
    7737	57 00 00 00 01 00 00 00	r0 &= 0x1
    7738	95 00 00 00 00 00 00 00	exit

000000000000f1d8 <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::ne>
    7739	bf 25 00 00 00 00 00 00	r5 = r2
    7740	b7 00 00 00 01 00 00 00	r0 = 0x1
    7741	5d 45 09 00 00 00 00 00	if r5 != r4 goto +0x9 <LBB1_4>
    7742	b7 00 00 00 00 00 00 00	r0 = 0x0
    7743	1d 31 07 00 00 00 00 00	if r1 == r3 goto +0x7 <LBB1_4>
    7744	bf 32 00 00 00 00 00 00	r2 = r3
    7745	bf 53 00 00 00 00 00 00	r3 = r5
    7746	85 10 00 00 4e 1f 00 00	call 0x1f4e ; <memcmp>
    7747	bf 01 00 00 00 00 00 00	r1 = r0
    7748	b7 00 00 00 01 00 00 00	r0 = 0x1
    7749	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB1_4>
    7750	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000000f238 <LBB1_4>
    7751	57 00 00 00 01 00 00 00	r0 &= 0x1
    7752	95 00 00 00 00 00 00 00	exit

000000000000f248 <alloc::vec::Vec<T,A>::extend_from_slice>
    7753	bf 16 00 00 00 00 00 00	r6 = r1
    7754	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
    7755	0f 32 00 00 00 00 00 00	r2 += r3
    7756	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
    7757	bf a1 00 00 00 00 00 00	r1 = r10
    7758	07 01 00 00 e0 ff ff ff	r1 += -0x20
    7759	bf a2 00 00 00 00 00 00	r2 = r10
    7760	07 02 00 00 f0 ff ff ff	r2 += -0x10
    7761	85 10 00 00 4b 0d 00 00	call 0xd4b ; <core::slice::iter::Iter<T>::as_slice>
    7762	79 62 10 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x10)
    7763	79 a7 e0 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x20)
    7764	79 a8 e8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x18)
    7765	bf 61 00 00 00 00 00 00	r1 = r6
    7766	bf 83 00 00 00 00 00 00	r3 = r8
    7767	85 10 00 00 a7 09 00 00	call 0x9a7 ; <alloc::raw_vec::RawVec<T,A>::reserve>
    7768	79 69 10 00 00 00 00 00	r9 = *(u64 *)(r6 + 0x10)
    7769	bf 61 00 00 00 00 00 00	r1 = r6
    7770	85 10 00 00 a2 09 00 00	call 0x9a2 ; <alloc::raw_vec::RawVec<T,A>::ptr>
    7771	0f 90 00 00 00 00 00 00	r0 += r9
    7772	bf 01 00 00 00 00 00 00	r1 = r0
    7773	bf 72 00 00 00 00 00 00	r2 = r7
    7774	bf 83 00 00 00 00 00 00	r3 = r8
    7775	85 10 00 00 e0 1e 00 00	call 0x1ee0 ; <memcpy>
    7776	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    7777	0f 81 00 00 00 00 00 00	r1 += r8
    7778	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    7779	95 00 00 00 00 00 00 00	exit

000000000000f320 <alloc::vec::Vec<T,A>::reserve>
    7780	bf 23 00 00 00 00 00 00	r3 = r2
    7781	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
    7782	85 10 00 00 98 09 00 00	call 0x998 ; <alloc::raw_vec::RawVec<T,A>::reserve>
    7783	95 00 00 00 00 00 00 00	exit

000000000000f340 <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
    7784	bf 17 00 00 00 00 00 00	r7 = r1
    7785	85 10 00 00 91 09 00 00	call 0x991 ; <alloc::raw_vec::RawVec<T,A>::ptr>
    7786	bf 06 00 00 00 00 00 00	r6 = r0
    7787	79 77 10 00 00 00 00 00	r7 = *(u64 *)(r7 + 0x10)
    7788	15 07 0a 00 00 00 00 00	if r7 == 0x0 goto +0xa <LBB5_3>
    7789	27 07 00 00 30 00 00 00	r7 *= 0x30
    7790	07 06 00 00 10 00 00 00	r6 += 0x10

000000000000f378 <LBB5_2>
    7791	bf 61 00 00 00 00 00 00	r1 = r6
    7792	07 01 00 00 f8 ff ff ff	r1 += -0x8
    7793	85 10 00 00 2b 00 00 00	call 0x2b ; <<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop>
    7794	bf 61 00 00 00 00 00 00	r1 = r6
    7795	85 10 00 00 16 00 00 00	call 0x16 ; <<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop>
    7796	07 06 00 00 30 00 00 00	r6 += 0x30
    7797	07 07 00 00 d0 ff ff ff	r7 += -0x30
    7798	55 07 f8 ff 00 00 00 00	if r7 != 0x0 goto -0x8 <LBB5_2>

000000000000f3b8 <LBB5_3>
    7799	95 00 00 00 00 00 00 00	exit

000000000000f3c0 <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
    7800	85 10 00 00 84 09 00 00	call 0x984 ; <alloc::raw_vec::RawVec<T,A>::ptr>
    7801	95 00 00 00 00 00 00 00	exit

000000000000f3d0 <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
    7802	bf 26 00 00 00 00 00 00	r6 = r2
    7803	bf 17 00 00 00 00 00 00	r7 = r1
    7804	bf 61 00 00 00 00 00 00	r1 = r6
    7805	85 10 00 00 7d 09 00 00	call 0x97d ; <alloc::raw_vec::RawVec<T,A>::ptr>
    7806	7b 07 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r0
    7807	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    7808	7b 17 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r1
    7809	95 00 00 00 00 00 00 00	exit

000000000000f410 <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
    7810	bf 26 00 00 00 00 00 00	r6 = r2
    7811	bf 17 00 00 00 00 00 00	r7 = r1
    7812	bf 61 00 00 00 00 00 00	r1 = r6
    7813	85 10 00 00 77 09 00 00	call 0x977 ; <alloc::raw_vec::RawVec<T,A>::ptr>
    7814	7b 07 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r0
    7815	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
    7816	7b 17 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r1
    7817	95 00 00 00 00 00 00 00	exit

000000000000f450 <<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop>
    7818	bf 16 00 00 00 00 00 00	r6 = r1
    7819	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7820	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
    7821	07 02 00 00 ff ff ff ff	r2 += -0x1
    7822	85 10 00 00 13 01 00 00	call 0x113 ; <core::cell::Cell<T>::replace>
    7823	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7824	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
    7825	55 02 0a 00 00 00 00 00	if r2 != 0x0 goto +0xa <LBB0_3>
    7826	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7827	07 01 00 00 08 00 00 00	r1 += 0x8
    7828	07 02 00 00 ff ff ff ff	r2 += -0x1
    7829	85 10 00 00 0c 01 00 00	call 0x10c ; <core::cell::Cell<T>::replace>
    7830	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7831	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7832	55 02 03 00 00 00 00 00	if r2 != 0x0 goto +0x3 <LBB0_3>
    7833	b7 02 00 00 28 00 00 00	r2 = 0x28
    7834	b7 03 00 00 08 00 00 00	r3 = 0x8
    7835	85 10 00 00 46 0d 00 00	call 0xd46 ; <__rust_dealloc>

000000000000f4e0 <LBB0_3>
    7836	95 00 00 00 00 00 00 00	exit

000000000000f4e8 <<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop>
    7837	bf 16 00 00 00 00 00 00	r6 = r1
    7838	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7839	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
    7840	07 02 00 00 ff ff ff ff	r2 += -0x1
    7841	85 10 00 00 00 01 00 00	call 0x100 ; <core::cell::Cell<T>::replace>
    7842	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7843	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
    7844	55 02 0a 00 00 00 00 00	if r2 != 0x0 goto +0xa <LBB1_3>
    7845	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7846	07 01 00 00 08 00 00 00	r1 += 0x8
    7847	07 02 00 00 ff ff ff ff	r2 += -0x1
    7848	85 10 00 00 f9 00 00 00	call 0xf9 ; <core::cell::Cell<T>::replace>
    7849	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
    7850	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7851	55 02 03 00 00 00 00 00	if r2 != 0x0 goto +0x3 <LBB1_3>
    7852	b7 02 00 00 20 00 00 00	r2 = 0x20
    7853	b7 03 00 00 08 00 00 00	r3 = 0x8
    7854	85 10 00 00 33 0d 00 00	call 0xd33 ; <__rust_dealloc>

000000000000f578 <LBB1_3>
    7855	95 00 00 00 00 00 00 00	exit

000000000000f580 <<&T as core::fmt::Display>::fmt>
    7856	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    7857	85 10 00 00 57 15 00 00	call 0x1557 ; <<core::panic::PanicInfo as core::fmt::Display>::fmt>
    7858	95 00 00 00 00 00 00 00	exit

000000000000f598 <<&T as core::fmt::Display>::fmt>
    7859	bf 23 00 00 00 00 00 00	r3 = r2
    7860	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7861	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    7862	85 10 00 00 f4 10 00 00	call 0x10f4 ; <<dyn serde::de::Expected as core::fmt::Display>::fmt>
    7863	95 00 00 00 00 00 00 00	exit

000000000000f5c0 <core::ptr::drop_in_place>
    7864	95 00 00 00 00 00 00 00	exit

000000000000f5c8 <core::slice::<impl [T]>::copy_from_slice>
    7865	bf 35 00 00 00 00 00 00	r5 = r3
    7866	bf 23 00 00 00 00 00 00	r3 = r2
    7867	5d 43 03 00 00 00 00 00	if r3 != r4 goto +0x3 <LBB3_2>
    7868	bf 52 00 00 00 00 00 00	r2 = r5
    7869	85 10 00 00 82 1e 00 00	call 0x1e82 ; <memcpy>
    7870	95 00 00 00 00 00 00 00	exit

000000000000f5f8 <LBB3_2>
    7871	bf 31 00 00 00 00 00 00	r1 = r3
    7872	bf 42 00 00 00 00 00 00	r2 = r4
    7873	18 03 00 00 28 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24d28 ll
    7875	85 10 00 00 b6 12 00 00	call 0x12b6 ; <core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail>
    7876	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000f628 <<T as core::convert::From<T>>::from>
    7877	bf 10 00 00 00 00 00 00	r0 = r1
    7878	95 00 00 00 00 00 00 00	exit

000000000000f638 <<T as core::convert::From<T>>::from>
    7879	95 00 00 00 00 00 00 00	exit

000000000000f640 <serde::de::Error::invalid_length>
    7880	7b 3a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r3
    7881	7b 2a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r2
    7882	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    7883	bf a1 00 00 00 00 00 00	r1 = r10
    7884	07 01 00 00 28 ff ff ff	r1 += -0xd8
    7885	bf a2 00 00 00 00 00 00	r2 = r10
    7886	07 02 00 00 38 ff ff ff	r2 += -0xc8
    7887	18 03 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r3 = 0x19bb8 ll
    7889	85 10 00 00 ae 0a 00 00	call 0xaae ; <core::fmt::ArgumentV1::new>
    7890	79 a6 28 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0xd8)
    7891	79 a7 30 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0xd0)
    7892	bf a1 00 00 00 00 00 00	r1 = r10
    7893	07 01 00 00 18 ff ff ff	r1 += -0xe8
    7894	bf a2 00 00 00 00 00 00	r2 = r10
    7895	07 02 00 00 40 ff ff ff	r2 += -0xc0
    7896	18 03 00 00 98 f5 00 00 00 00 00 00 00 00 00 00	r3 = 0xf598 ll
    7898	85 10 00 00 a8 0a 00 00	call 0xaa8 ; <core::fmt::ArgumentV1::new>
    7899	7b 7a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r7
    7900	7b 6a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r6
    7901	bf a1 00 00 00 00 00 00	r1 = r10
    7902	07 01 00 00 80 ff ff ff	r1 += -0x80
    7903	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    7904	b7 01 00 00 02 00 00 00	r1 = 0x2
    7905	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    7906	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    7907	18 01 00 00 60 4d 02 00 00 00 00 00 00 00 00 00	r1 = 0x24d60 ll
    7909	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    7910	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    7911	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    7912	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    7913	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    7914	b7 06 00 00 00 00 00 00	r6 = 0x0
    7915	7b 6a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r6
    7916	bf a1 00 00 00 00 00 00	r1 = r10
    7917	07 01 00 00 50 ff ff ff	r1 += -0xb0
    7918	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    7919	7b 6a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r6
    7920	b7 07 00 00 01 00 00 00	r7 = 0x1
    7921	7b 7a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r7
    7922	7b 6a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r6
    7923	bf a1 00 00 00 00 00 00	r1 = r10
    7924	07 01 00 00 08 ff ff ff	r1 += -0xf8
    7925	bf a2 00 00 00 00 00 00	r2 = r10
    7926	07 02 00 00 b8 ff ff ff	r2 += -0x48
    7927	18 03 00 00 e8 4b 01 00 00 00 00 00 00 00 00 00	r3 = 0x14be8 ll
    7929	85 10 00 00 86 0a 00 00	call 0xa86 ; <core::fmt::ArgumentV1::new>
    7930	bf a1 00 00 00 00 00 00	r1 = r10
    7931	07 01 00 00 f0 ff ff ff	r1 += -0x10
    7932	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    7933	7b 6a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r6
    7934	7b 7a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r7
    7935	7b 7a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r7
    7936	18 01 00 00 00 4d 02 00 00 00 00 00 00 00 00 00	r1 = 0x24d00 ll
    7938	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
    7939	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    7940	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
    7941	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    7942	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    7943	bf a1 00 00 00 00 00 00	r1 = r10
    7944	07 01 00 00 a0 ff ff ff	r1 += -0x60
    7945	bf a2 00 00 00 00 00 00	r2 = r10
    7946	07 02 00 00 c0 ff ff ff	r2 += -0x40
    7947	85 10 00 00 7a 0a 00 00	call 0xa7a ; <core::fmt::Write::write_fmt>
    7948	15 00 0b 00 00 00 00 00	if r0 == 0x0 goto +0xb <LBB8_2>
    7949	bf a3 00 00 00 00 00 00	r3 = r10
    7950	07 03 00 00 c0 ff ff ff	r3 += -0x40
    7951	18 01 00 00 68 31 02 00 00 00 00 00 00 00 00 00	r1 = 0x23168 ll
    7953	b7 02 00 00 37 00 00 00	r2 = 0x37
    7954	18 04 00 00 40 4d 02 00 00 00 00 00 00 00 00 00	r4 = 0x24d40 ll
    7956	18 05 00 00 10 4d 02 00 00 00 00 00 00 00 00 00	r5 = 0x24d10 ll
    7958	85 10 00 00 c2 16 00 00	call 0x16c2 ; <core::result::unwrap_failed>
    7959	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000f8c0 <LBB8_2>
    7960	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    7961	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
    7962	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    7963	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
    7964	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    7965	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
    7966	b7 01 00 00 08 00 00 00	r1 = 0x8
    7967	73 1a c0 ff 00 00 00 00	*(u8 *)(r10 - 0x40) = r1
    7968	bf a1 00 00 00 00 00 00	r1 = r10
    7969	07 01 00 00 c0 ff ff ff	r1 += -0x40
    7970	85 10 00 00 84 0c 00 00	call 0xc84 ; <<T as core::convert::Into<U>>::into>
    7971	95 00 00 00 00 00 00 00	exit

000000000000f920 <<alloc::boxed::Box<T> as core::convert::From<T>>::from>
    7972	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
    7973	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
    7974	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
    7975	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
    7976	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    7977	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
    7978	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    7979	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    7980	b7 01 00 00 20 00 00 00	r1 = 0x20
    7981	b7 02 00 00 08 00 00 00	r2 = 0x8
    7982	85 10 00 00 b1 0c 00 00	call 0xcb1 ; <__rust_alloc>
    7983	55 00 05 00 00 00 00 00	if r0 != 0x0 goto +0x5 <LBB9_2>
    7984	85 10 00 00 72 0c 00 00	call 0xc72 ; <bincode::config::Options::with_fixint_encoding>
    7985	b7 01 00 00 20 00 00 00	r1 = 0x20
    7986	b7 02 00 00 08 00 00 00	r2 = 0x8
    7987	85 10 00 00 55 11 00 00	call 0x1155 ; <alloc::alloc::handle_alloc_error>
    7988	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000000f9a8 <LBB9_2>
    7989	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    7990	7b 10 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r1
    7991	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    7992	7b 10 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r1
    7993	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    7994	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
    7995	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    7996	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r1
    7997	95 00 00 00 00 00 00 00	exit

000000000000f9f0 <bincode::deserialize>
    7998	bf 36 00 00 00 00 00 00	r6 = r3
    7999	bf 27 00 00 00 00 00 00	r7 = r2
    8000	bf 18 00 00 00 00 00 00	r8 = r1
    8001	85 10 00 00 40 10 00 00	call 0x1040 ; <bincode::config::DefaultOptions::new>
    8002	85 10 00 00 60 0c 00 00	call 0xc60 ; <bincode::config::Options::with_fixint_encoding>
    8003	85 10 00 00 5f 0c 00 00	call 0xc5f ; <bincode::config::Options::with_fixint_encoding>
    8004	bf 81 00 00 00 00 00 00	r1 = r8
    8005	bf 72 00 00 00 00 00 00	r2 = r7
    8006	bf 63 00 00 00 00 00 00	r3 = r6
    8007	85 10 00 00 bc fe ff ff	call -0x144 ; <bincode::internal::deserialize>
    8008	95 00 00 00 00 00 00 00	exit

000000000000fa48 <<solana_program::program_error::ProgramError as solana_program::program_error::PrintProgramError>::print>
    8009	61 12 00 00 00 00 00 00	r2 = *(u32 *)(r1 + 0x0)
    8010	65 02 07 00 07 00 00 00	if r2 s> 0x7 goto +0x7 <LBB0_12>
    8011	65 02 0d 00 03 00 00 00	if r2 s> 0x3 goto +0xd <LBB0_7>
    8012	65 02 17 00 01 00 00 00	if r2 s> 0x1 goto +0x17 <LBB0_5>
    8013	15 02 2a 00 00 00 00 00	if r2 == 0x0 goto +0x2a <LBB0_24>
    8014	18 01 00 00 9c 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x2339c ll
    8016	b7 02 00 00 16 00 00 00	r2 = 0x16
    8017	05 00 49 00 00 00 00 00	goto +0x49 <LBB0_37>

000000000000fa90 <LBB0_12>
    8018	65 02 0c 00 0b 00 00 00	if r2 s> 0xb goto +0xc <LBB0_18>
    8019	65 02 15 00 09 00 00 00	if r2 s> 0x9 goto +0x15 <LBB0_16>
    8020	15 02 2b 00 08 00 00 00	if r2 == 0x8 goto +0x2b <LBB0_32>
    8021	18 01 00 00 e1 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x232e1 ll
    8023	b7 02 00 00 1b 00 00 00	r2 = 0x1b
    8024	05 00 42 00 00 00 00 00	goto +0x42 <LBB0_37>

000000000000fac8 <LBB0_7>
    8025	65 02 14 00 05 00 00 00	if r2 s> 0x5 goto +0x14 <LBB0_10>
    8026	15 02 29 00 04 00 00 00	if r2 == 0x4 goto +0x29 <LBB0_28>
    8027	18 01 00 00 34 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x23334 ll
    8029	b7 02 00 00 18 00 00 00	r2 = 0x18
    8030	05 00 3c 00 00 00 00 00	goto +0x3c <LBB0_37>

000000000000faf8 <LBB0_18>
    8031	65 02 13 00 0d 00 00 00	if r2 s> 0xd goto +0x13 <LBB0_21>
    8032	15 02 27 00 0c 00 00 00	if r2 == 0xc goto +0x27 <LBB0_34>
    8033	18 01 00 00 7d 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x2327d ll
    8035	05 00 36 00 00 00 00 00	goto +0x36 <LBB0_36>

000000000000fb20 <LBB0_5>
    8036	15 02 27 00 02 00 00 00	if r2 == 0x2 goto +0x27 <LBB0_27>
    8037	18 01 00 00 66 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x23366 ll
    8039	b7 02 00 00 19 00 00 00	r2 = 0x19
    8040	05 00 32 00 00 00 00 00	goto +0x32 <LBB0_37>

000000000000fb48 <LBB0_16>
    8041	15 02 26 00 0a 00 00 00	if r2 == 0xa goto +0x26 <LBB0_33>
    8042	18 01 00 00 ac 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x232ac ll
    8044	b7 02 00 00 1a 00 00 00	r2 = 0x1a
    8045	05 00 2d 00 00 00 00 00	goto +0x2d <LBB0_37>

000000000000fb70 <LBB0_10>
    8046	15 02 25 00 06 00 00 00	if r2 == 0x6 goto +0x25 <LBB0_30>
    8047	18 01 00 00 fc 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x232fc ll
    8049	b7 02 00 00 1f 00 00 00	r2 = 0x1f
    8050	05 00 28 00 00 00 00 00	goto +0x28 <LBB0_37>

000000000000fb98 <LBB0_21>
    8051	15 02 24 00 0e 00 00 00	if r2 == 0xe goto +0x24 <LBB0_35>
    8052	18 01 00 00 4f 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x2324f ll
    8054	b7 02 00 00 1b 00 00 00	r2 = 0x1b
    8055	05 00 23 00 00 00 00 00	goto +0x23 <LBB0_37>

000000000000fbc0 <LBB0_24>
    8056	61 11 04 00 00 00 00 00	r1 = *(u32 *)(r1 + 0x4)
    8057	85 10 00 00 a6 07 00 00	call 0x7a6 ; <solana_program::decode_error::DecodeError::decode_custom_error_to_enum>
    8058	57 00 00 00 ff 00 00 00	r0 &= 0xff
    8059	55 00 21 00 13 00 00 00	if r0 != 0x13 goto +0x21 <LBB0_26>
    8060	18 01 00 00 b2 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x233b2 ll
    8062	b7 02 00 00 0e 00 00 00	r2 = 0xe
    8063	05 00 1b 00 00 00 00 00	goto +0x1b <LBB0_37>

000000000000fc00 <LBB0_32>
    8064	18 01 00 00 a9 30 02 00 00 00 00 00 00 00 00 00	r1 = 0x230a9 ll
    8066	b7 02 00 00 20 00 00 00	r2 = 0x20
    8067	05 00 17 00 00 00 00 00	goto +0x17 <LBB0_37>

000000000000fc20 <LBB0_28>
    8068	18 01 00 00 4c 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x2334c ll
    8070	b7 02 00 00 1a 00 00 00	r2 = 0x1a
    8071	05 00 13 00 00 00 00 00	goto +0x13 <LBB0_37>

000000000000fc40 <LBB0_34>
    8072	18 01 00 00 90 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x23290 ll
    8074	b7 02 00 00 1c 00 00 00	r2 = 0x1c
    8075	05 00 0f 00 00 00 00 00	goto +0xf <LBB0_37>

000000000000fc60 <LBB0_27>
    8076	18 01 00 00 7f 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x2337f ll
    8078	b7 02 00 00 1d 00 00 00	r2 = 0x1d
    8079	05 00 0b 00 00 00 00 00	goto +0xb <LBB0_37>

000000000000fc80 <LBB0_33>
    8080	18 01 00 00 c6 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x232c6 ll
    8082	b7 02 00 00 1b 00 00 00	r2 = 0x1b
    8083	05 00 07 00 00 00 00 00	goto +0x7 <LBB0_37>

000000000000fca0 <LBB0_30>
    8084	18 01 00 00 1b 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x2331b ll
    8086	b7 02 00 00 19 00 00 00	r2 = 0x19
    8087	05 00 03 00 00 00 00 00	goto +0x3 <LBB0_37>

000000000000fcc0 <LBB0_35>
    8088	18 01 00 00 6a 32 02 00 00 00 00 00 00 00 00 00	r1 = 0x2326a ll

000000000000fcd0 <LBB0_36>
    8090	b7 02 00 00 13 00 00 00	r2 = 0x13

000000000000fcd8 <LBB0_37>
    8091	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_

000000000000fce0 <LBB0_38>
    8092	95 00 00 00 00 00 00 00	exit

000000000000fce8 <LBB0_26>
    8093	73 0a ff ff 00 00 00 00	*(u8 *)(r10 - 0x1) = r0
    8094	bf a1 00 00 00 00 00 00	r1 = r10
    8095	07 01 00 00 ff ff ff ff	r1 += -0x1
    8096	85 10 00 00 cc 07 00 00	call 0x7cc ; <spl_token::processor::<impl solana_program::program_error::PrintProgramError for spl_token::error::TokenError>::print>
    8097	05 00 fa ff 00 00 00 00	goto -0x6 <LBB0_38>

000000000000fd10 <core::cell::Cell<T>::replace>
    8098	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
    8099	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
    8100	95 00 00 00 00 00 00 00	exit

000000000000fd28 <core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from>
    8101	b7 04 00 00 01 00 00 00	r4 = 0x1
    8102	55 03 02 00 08 00 00 00	if r3 != 0x8 goto +0x2 <LBB4_2>
    8103	b7 04 00 00 00 00 00 00	r4 = 0x0
    8104	79 25 00 00 00 00 00 00	r5 = *(u64 *)(r2 + 0x0)

000000000000fd48 <LBB4_2>
    8105	bf 52 00 00 00 00 00 00	r2 = r5
    8106	77 02 00 00 38 00 00 00	r2 >>= 0x38
    8107	73 21 08 00 00 00 00 00	*(u8 *)(r1 + 0x8) = r2
    8108	67 05 00 00 08 00 00 00	r5 <<= 0x8
    8109	4f 45 00 00 00 00 00 00	r5 |= r4
    8110	7b 51 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r5
    8111	95 00 00 00 00 00 00 00	exit

000000000000fd80 <<T as core::convert::From<T>>::from>
    8112	79 23 18 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x18)
    8113	7b 31 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r3
    8114	79 23 10 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x10)
    8115	7b 31 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r3
    8116	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
    8117	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
    8118	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
    8119	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
    8120	95 00 00 00 00 00 00 00	exit

000000000000fdc8 <<T as core::convert::Into<U>>::into>
    8121	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
    8122	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
    8123	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
    8124	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
    8125	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    8126	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
    8127	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    8128	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    8129	bf a1 00 00 00 00 00 00	r1 = r10
    8130	07 01 00 00 e0 ff ff ff	r1 += -0x20
    8131	85 10 00 00 dc 0e 00 00	call 0xedc ; <solana_program::program_error::<impl core::convert::From<solana_program::program_error::ProgramError> for u64>::from>
    8132	95 00 00 00 00 00 00 00	exit

000000000000fe28 <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
    8133	b7 03 00 00 00 00 00 00	r3 = 0x0
    8134	63 31 00 00 00 00 00 00	*(u32 *)(r1 + 0x0) = r3
    8135	57 02 00 00 ff 00 00 00	r2 &= 0xff
    8136	63 21 04 00 00 00 00 00	*(u32 *)(r1 + 0x4) = r2
    8137	95 00 00 00 00 00 00 00	exit

000000000000fe50 <solana_program::program_pack::Pack::get_packed_len>
    8138	b7 00 00 00 a5 00 00 00	r0 = 0xa5
    8139	95 00 00 00 00 00 00 00	exit

000000000000fe60 <solana_program::program_pack::Pack::get_packed_len>
    8140	b7 00 00 00 63 01 00 00	r0 = 0x163
    8141	95 00 00 00 00 00 00 00	exit

000000000000fe70 <solana_program::program_pack::Pack::get_packed_len>
    8142	b7 00 00 00 52 00 00 00	r0 = 0x52
    8143	95 00 00 00 00 00 00 00	exit

000000000000fe80 <solana_program::program_pack::Pack::unpack_unchecked>
    8144	55 03 03 00 63 01 00 00	if r3 != 0x163 goto +0x3 <LBB3_2>
    8145	b7 03 00 00 63 01 00 00	r3 = 0x163
    8146	85 10 00 00 93 05 00 00	call 0x593 ; <<spl_token::state::Multisig as solana_program::program_pack::Pack>::unpack_from_slice>
    8147	05 00 04 00 00 00 00 00	goto +0x4 <LBB3_3>

000000000000fea0 <LBB3_2>
    8148	b7 02 00 00 01 00 00 00	r2 = 0x1
    8149	73 21 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r2
    8150	b7 02 00 00 03 00 00 00	r2 = 0x3
    8151	63 21 08 00 00 00 00 00	*(u32 *)(r1 + 0x8) = r2

000000000000fec0 <LBB3_3>
    8152	95 00 00 00 00 00 00 00	exit

000000000000fec8 <solana_program::program_pack::Pack::unpack_unchecked>
    8153	55 03 03 00 a5 00 00 00	if r3 != 0xa5 goto +0x3 <LBB4_2>
    8154	b7 03 00 00 a5 00 00 00	r3 = 0xa5
    8155	85 10 00 00 f0 03 00 00	call 0x3f0 ; <<spl_token::state::Account as solana_program::program_pack::Pack>::unpack_from_slice>
    8156	05 00 04 00 00 00 00 00	goto +0x4 <LBB4_3>

000000000000fee8 <LBB4_2>
    8157	b7 02 00 00 01 00 00 00	r2 = 0x1
    8158	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
    8159	b7 02 00 00 03 00 00 00	r2 = 0x3
    8160	63 21 08 00 00 00 00 00	*(u32 *)(r1 + 0x8) = r2

000000000000ff08 <LBB4_3>
    8161	95 00 00 00 00 00 00 00	exit

000000000000ff10 <solana_program::program_pack::Pack::unpack_unchecked>
    8162	55 03 03 00 52 00 00 00	if r3 != 0x52 goto +0x3 <LBB5_2>
    8163	b7 03 00 00 52 00 00 00	r3 = 0x52
    8164	85 10 00 00 ed 02 00 00	call 0x2ed ; <<spl_token::state::Mint as solana_program::program_pack::Pack>::unpack_from_slice>
    8165	05 00 04 00 00 00 00 00	goto +0x4 <LBB5_3>

000000000000ff30 <LBB5_2>
    8166	b7 02 00 00 01 00 00 00	r2 = 0x1
    8167	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
    8168	b7 02 00 00 03 00 00 00	r2 = 0x3
    8169	63 21 08 00 00 00 00 00	*(u32 *)(r1 + 0x8) = r2

000000000000ff50 <LBB5_3>
    8170	95 00 00 00 00 00 00 00	exit

000000000000ff58 <solana_program::program_pack::Pack::pack>
    8171	bf 16 00 00 00 00 00 00	r6 = r1
    8172	b7 01 00 00 03 00 00 00	r1 = 0x3
    8173	55 04 05 00 a5 00 00 00	if r4 != 0xa5 goto +0x5 <LBB6_2>
    8174	bf 21 00 00 00 00 00 00	r1 = r2
    8175	bf 32 00 00 00 00 00 00	r2 = r3
    8176	b7 03 00 00 a5 00 00 00	r3 = 0xa5
    8177	85 10 00 00 21 05 00 00	call 0x521 ; <<spl_token::state::Account as solana_program::program_pack::Pack>::pack_into_slice>
    8178	b7 01 00 00 10 00 00 00	r1 = 0x10

000000000000ff98 <LBB6_2>
    8179	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    8180	95 00 00 00 00 00 00 00	exit

000000000000ffa8 <solana_program::program_pack::Pack::pack>
    8181	bf 16 00 00 00 00 00 00	r6 = r1
    8182	b7 01 00 00 03 00 00 00	r1 = 0x3
    8183	55 04 05 00 63 01 00 00	if r4 != 0x163 goto +0x5 <LBB7_2>
    8184	bf 21 00 00 00 00 00 00	r1 = r2
    8185	bf 32 00 00 00 00 00 00	r2 = r3
    8186	b7 03 00 00 63 01 00 00	r3 = 0x163
    8187	85 10 00 00 e3 06 00 00	call 0x6e3 ; <<spl_token::state::Multisig as solana_program::program_pack::Pack>::pack_into_slice>
    8188	b7 01 00 00 10 00 00 00	r1 = 0x10

000000000000ffe8 <LBB7_2>
    8189	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    8190	95 00 00 00 00 00 00 00	exit

000000000000fff8 <solana_program::program_pack::Pack::pack>
    8191	bf 16 00 00 00 00 00 00	r6 = r1
    8192	b7 01 00 00 03 00 00 00	r1 = 0x3
    8193	55 04 05 00 52 00 00 00	if r4 != 0x52 goto +0x5 <LBB8_2>
    8194	bf 21 00 00 00 00 00 00	r1 = r2
    8195	bf 32 00 00 00 00 00 00	r2 = r3
    8196	b7 03 00 00 52 00 00 00	r3 = 0x52
    8197	85 10 00 00 81 03 00 00	call 0x381 ; <<spl_token::state::Mint as solana_program::program_pack::Pack>::pack_into_slice>
    8198	b7 01 00 00 10 00 00 00	r1 = 0x10

0000000000010038 <LBB8_2>
    8199	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    8200	95 00 00 00 00 00 00 00	exit

0000000000010048 <solana_program::program_pack::Pack::unpack>
    8201	bf 16 00 00 00 00 00 00	r6 = r1
    8202	55 03 0a 00 52 00 00 00	if r3 != 0x52 goto +0xa <LBB9_4>
    8203	bf a1 00 00 00 00 00 00	r1 = r10
    8204	07 01 00 00 80 ff ff ff	r1 += -0x80
    8205	b7 03 00 00 52 00 00 00	r3 = 0x52
    8206	85 10 00 00 c3 02 00 00	call 0x2c3 ; <<spl_token::state::Mint as solana_program::program_pack::Pack>::unpack_from_slice>
    8207	b7 02 00 00 01 00 00 00	r2 = 0x1
    8208	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    8209	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB9_3>
    8210	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000010098 <LBB9_3>
    8211	71 a1 b9 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x47)
    8212	05 00 04 00 00 00 00 00	goto +0x4 <LBB9_5>

00000000000100a8 <LBB9_4>
    8213	b7 01 00 00 03 00 00 00	r1 = 0x3
    8214	63 1a 88 ff 00 00 00 00	*(u32 *)(r10 - 0x78) = r1
    8215	b7 02 00 00 01 00 00 00	r2 = 0x1
    8216	7b 2a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r2

00000000000100c8 <LBB9_5>
    8217	71 a3 b8 ff 00 00 00 00	r3 = *(u8 *)(r10 - 0x48)
    8218	73 3a 78 ff 00 00 00 00	*(u8 *)(r10 - 0x88) = r3
    8219	79 a3 b0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x50)
    8220	7b 3a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r3
    8221	79 a3 a8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x58)
    8222	7b 3a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r3
    8223	79 a3 a0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x60)
    8224	7b 3a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r3
    8225	79 a3 98 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x68)
    8226	7b 3a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r3
    8227	79 a3 90 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x70)
    8228	7b 3a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r3
    8229	79 a3 88 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x78)
    8230	7b 3a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r3
    8231	79 a3 ba ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x46)
    8232	7b 3a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r3
    8233	79 a3 c2 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x3e)
    8234	7b 3a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r3
    8235	79 a3 ca ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x36)
    8236	7b 3a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r3
    8237	79 a3 d2 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x2e)
    8238	7b 3a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r3
    8239	79 a3 d8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x28)
    8240	7b 3a 3e ff 00 00 00 00	*(u64 *)(r10 - 0xc2) = r3
    8241	57 02 00 00 01 00 00 00	r2 &= 0x1
    8242	55 02 38 00 00 00 00 00	if r2 != 0x0 goto +0x38 <LBB9_8>
    8243	71 a2 78 ff 00 00 00 00	r2 = *(u8 *)(r10 - 0x88)
    8244	73 2a 18 ff 00 00 00 00	*(u8 *)(r10 - 0xe8) = r2
    8245	79 a2 70 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x90)
    8246	7b 2a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r2
    8247	79 a2 68 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x98)
    8248	7b 2a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r2
    8249	79 a2 60 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xa0)
    8250	7b 2a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r2
    8251	79 a2 58 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xa8)
    8252	7b 2a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r2
    8253	79 a2 50 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xb0)
    8254	7b 2a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r2
    8255	79 a2 48 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xb8)
    8256	7b 2a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r2
    8257	79 a2 20 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe0)
    8258	7b 2a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r2
    8259	79 a2 28 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xd8)
    8260	7b 2a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r2
    8261	79 a2 30 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xd0)
    8262	7b 2a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r2
    8263	79 a2 38 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xc8)
    8264	7b 2a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r2
    8265	79 a2 3e ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xc2)
    8266	7b 2a de fe 00 00 00 00	*(u64 *)(r10 - 0x122) = r2
    8267	bf 62 00 00 00 00 00 00	r2 = r6
    8268	07 02 00 00 08 00 00 00	r2 += 0x8
    8269	bf 13 00 00 00 00 00 00	r3 = r1
    8270	57 03 00 00 ff 00 00 00	r3 &= 0xff
    8271	15 03 31 00 00 00 00 00	if r3 == 0x0 goto +0x31 <LBB9_9>
    8272	71 a3 18 ff 00 00 00 00	r3 = *(u8 *)(r10 - 0xe8)
    8273	73 32 30 00 00 00 00 00	*(u8 *)(r2 + 0x30) = r3
    8274	79 a3 10 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xf0)
    8275	7b 32 28 00 00 00 00 00	*(u64 *)(r2 + 0x28) = r3
    8276	79 a3 08 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xf8)
    8277	7b 32 20 00 00 00 00 00	*(u64 *)(r2 + 0x20) = r3
    8278	79 a3 00 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x100)
    8279	7b 32 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r3
    8280	79 a3 f8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x108)
    8281	7b 32 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r3
    8282	79 a3 f0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x110)
    8283	7b 32 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r3
    8284	79 a3 e8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x118)
    8285	7b 32 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r3
    8286	73 16 39 00 00 00 00 00	*(u8 *)(r6 + 0x39) = r1
    8287	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    8288	7b 16 3a 00 00 00 00 00	*(u64 *)(r6 + 0x3a) = r1
    8289	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    8290	7b 16 42 00 00 00 00 00	*(u64 *)(r6 + 0x42) = r1
    8291	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    8292	7b 16 4a 00 00 00 00 00	*(u64 *)(r6 + 0x4a) = r1
    8293	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    8294	7b 16 52 00 00 00 00 00	*(u64 *)(r6 + 0x52) = r1
    8295	79 a1 de fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x122)
    8296	7b 16 58 00 00 00 00 00	*(u64 *)(r6 + 0x58) = r1
    8297	b7 01 00 00 00 00 00 00	r1 = 0x0
    8298	05 00 19 00 00 00 00 00	goto +0x19 <LBB9_11>

0000000000010358 <LBB9_8>
    8299	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    8300	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    8301	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    8302	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    8303	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    8304	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    8305	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    8306	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    8307	bf a1 00 00 00 00 00 00	r1 = r10
    8308	07 01 00 00 e0 ff ff ff	r1 += -0x20
    8309	bf a2 00 00 00 00 00 00	r2 = r10
    8310	07 02 00 00 80 ff ff ff	r2 += -0x80
    8311	85 10 00 00 38 ff ff ff	call -0xc8 ; <<T as core::convert::From<T>>::from>
    8312	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    8313	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    8314	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    8315	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    8316	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    8317	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    8318	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    8319	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    8320	05 00 02 00 00 00 00 00	goto +0x2 <LBB9_10>

0000000000010408 <LBB9_9>
    8321	b7 01 00 00 09 00 00 00	r1 = 0x9
    8322	63 12 00 00 00 00 00 00	*(u32 *)(r2 + 0x0) = r1

0000000000010418 <LBB9_10>
    8323	b7 01 00 00 01 00 00 00	r1 = 0x1

0000000000010420 <LBB9_11>
    8324	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    8325	95 00 00 00 00 00 00 00	exit

0000000000010430 <solana_program::program_pack::Pack::unpack>
    8326	bf 16 00 00 00 00 00 00	r6 = r1
    8327	15 03 72 00 63 01 00 00	if r3 == 0x163 goto +0x72 <LBB10_5>
    8328	b7 01 00 00 03 00 00 00	r1 = 0x3
    8329	63 1a 80 fe 00 00 00 00	*(u32 *)(r10 - 0x180) = r1
    8330	79 a1 84 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17c)
    8331	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    8332	79 a1 8c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x174)
    8333	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    8334	79 a1 94 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x16c)
    8335	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    8336	79 a1 9c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x164)
    8337	7b 1a 38 fd 00 00 00 00	*(u64 *)(r10 - 0x2c8) = r1
    8338	79 a1 a4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x15c)
    8339	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
    8340	79 a1 ac fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x154)
    8341	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
    8342	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    8343	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    8344	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    8345	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    8346	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    8347	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    8348	79 a1 cc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x134)
    8349	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    8350	79 a1 d4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12c)
    8351	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    8352	79 a1 dc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x124)
    8353	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    8354	79 a1 e4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x11c)
    8355	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    8356	79 a1 ec fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x114)
    8357	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    8358	79 a1 f4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10c)
    8359	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    8360	79 a1 fc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x104)
    8361	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    8362	79 a1 04 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xfc)
    8363	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    8364	79 a1 0c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf4)
    8365	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    8366	79 a1 14 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xec)
    8367	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    8368	79 a1 1c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe4)
    8369	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    8370	79 a1 24 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdc)
    8371	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    8372	79 a1 2c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd4)
    8373	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    8374	79 a1 34 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcc)
    8375	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    8376	79 a1 3c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc4)
    8377	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    8378	79 a1 44 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xbc)
    8379	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    8380	79 a1 4c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb4)
    8381	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    8382	79 a1 54 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xac)
    8383	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    8384	79 a1 5c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa4)
    8385	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    8386	79 a1 64 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9c)
    8387	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    8388	79 a1 6c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x94)
    8389	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    8390	79 a1 74 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8c)
    8391	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    8392	79 a1 7c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x84)
    8393	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    8394	79 a1 84 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x7c)
    8395	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    8396	79 a1 8c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x74)
    8397	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    8398	79 a1 94 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6c)
    8399	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    8400	79 a1 9c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x64)
    8401	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    8402	79 a1 a4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5c)
    8403	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    8404	79 a1 ac ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x54)
    8405	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    8406	79 a1 b4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x4c)
    8407	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    8408	79 a1 bc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x44)
    8409	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    8410	79 a1 c4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c)
    8411	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    8412	79 a1 cc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x34)
    8413	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    8414	79 a1 d4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c)
    8415	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    8416	79 a1 7c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x184)
    8417	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1

0000000000010710 <LBB10_2>
    8418	79 a1 34 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2cc)
    8419	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    8420	79 a1 2c fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d4)
    8421	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    8422	79 a1 24 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2dc)
    8423	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    8424	79 a1 1c fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e4)
    8425	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    8426	bf a1 00 00 00 00 00 00	r1 = r10
    8427	07 01 00 00 e0 ff ff ff	r1 += -0x20
    8428	bf a2 00 00 00 00 00 00	r2 = r10
    8429	07 02 00 00 78 fe ff ff	r2 += -0x188
    8430	85 10 00 00 c1 fe ff ff	call -0x13f ; <<T as core::convert::From<T>>::from>
    8431	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    8432	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    8433	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    8434	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    8435	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    8436	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    8437	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    8438	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1

00000000000107b8 <LBB10_3>
    8439	b7 01 00 00 01 00 00 00	r1 = 0x1

00000000000107c0 <LBB10_4>
    8440	73 16 00 00 00 00 00 00	*(u8 *)(r6 + 0x0) = r1
    8441	95 00 00 00 00 00 00 00	exit

00000000000107d0 <LBB10_5>
    8442	bf a1 00 00 00 00 00 00	r1 = r10
    8443	07 01 00 00 78 fe ff ff	r1 += -0x188
    8444	b7 03 00 00 63 01 00 00	r3 = 0x163
    8445	85 10 00 00 68 04 00 00	call 0x468 ; <<spl_token::state::Multisig as solana_program::program_pack::Pack>::unpack_from_slice>
    8446	79 a1 7c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x184)
    8447	7b 1a 18 fd 00 00 00 00	*(u64 *)(r10 - 0x2e8) = r1
    8448	79 a1 84 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x17c)
    8449	7b 1a 20 fd 00 00 00 00	*(u64 *)(r10 - 0x2e0) = r1
    8450	79 a1 8c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x174)
    8451	7b 1a 28 fd 00 00 00 00	*(u64 *)(r10 - 0x2d8) = r1
    8452	79 a1 94 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x16c)
    8453	7b 1a 30 fd 00 00 00 00	*(u64 *)(r10 - 0x2d0) = r1
    8454	79 a1 9c fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x164)
    8455	7b 1a 38 fd 00 00 00 00	*(u64 *)(r10 - 0x2c8) = r1
    8456	79 a1 a4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x15c)
    8457	7b 1a 40 fd 00 00 00 00	*(u64 *)(r10 - 0x2c0) = r1
    8458	79 a1 ac fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x154)
    8459	7b 1a 48 fd 00 00 00 00	*(u64 *)(r10 - 0x2b8) = r1
    8460	79 a1 b4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x14c)
    8461	7b 1a 50 fd 00 00 00 00	*(u64 *)(r10 - 0x2b0) = r1
    8462	79 a1 bc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x144)
    8463	7b 1a 58 fd 00 00 00 00	*(u64 *)(r10 - 0x2a8) = r1
    8464	79 a1 c4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x13c)
    8465	7b 1a 60 fd 00 00 00 00	*(u64 *)(r10 - 0x2a0) = r1
    8466	79 a1 cc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x134)
    8467	7b 1a 68 fd 00 00 00 00	*(u64 *)(r10 - 0x298) = r1
    8468	79 a1 d4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x12c)
    8469	7b 1a 70 fd 00 00 00 00	*(u64 *)(r10 - 0x290) = r1
    8470	79 a1 dc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x124)
    8471	7b 1a 78 fd 00 00 00 00	*(u64 *)(r10 - 0x288) = r1
    8472	79 a1 e4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x11c)
    8473	7b 1a 80 fd 00 00 00 00	*(u64 *)(r10 - 0x280) = r1
    8474	79 a1 ec fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x114)
    8475	7b 1a 88 fd 00 00 00 00	*(u64 *)(r10 - 0x278) = r1
    8476	79 a1 f4 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x10c)
    8477	7b 1a 90 fd 00 00 00 00	*(u64 *)(r10 - 0x270) = r1
    8478	79 a1 fc fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x104)
    8479	7b 1a 98 fd 00 00 00 00	*(u64 *)(r10 - 0x268) = r1
    8480	79 a1 04 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xfc)
    8481	7b 1a a0 fd 00 00 00 00	*(u64 *)(r10 - 0x260) = r1
    8482	79 a1 0c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf4)
    8483	7b 1a a8 fd 00 00 00 00	*(u64 *)(r10 - 0x258) = r1
    8484	79 a1 14 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xec)
    8485	7b 1a b0 fd 00 00 00 00	*(u64 *)(r10 - 0x250) = r1
    8486	79 a1 1c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe4)
    8487	7b 1a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r1
    8488	79 a1 24 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xdc)
    8489	7b 1a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r1
    8490	79 a1 2c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd4)
    8491	7b 1a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r1
    8492	79 a1 34 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xcc)
    8493	7b 1a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r1
    8494	79 a1 3c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc4)
    8495	7b 1a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r1
    8496	79 a1 44 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xbc)
    8497	7b 1a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r1
    8498	79 a1 4c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb4)
    8499	7b 1a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r1
    8500	79 a1 54 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xac)
    8501	7b 1a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r1
    8502	79 a1 5c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa4)
    8503	7b 1a f8 fd 00 00 00 00	*(u64 *)(r10 - 0x208) = r1
    8504	79 a1 64 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9c)
    8505	7b 1a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r1
    8506	79 a1 6c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x94)
    8507	7b 1a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r1
    8508	79 a1 74 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8c)
    8509	7b 1a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r1
    8510	79 a1 7c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x84)
    8511	7b 1a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r1
    8512	79 a1 84 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x7c)
    8513	7b 1a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r1
    8514	79 a1 8c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x74)
    8515	7b 1a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r1
    8516	79 a1 94 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6c)
    8517	7b 1a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r1
    8518	79 a1 9c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x64)
    8519	7b 1a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r1
    8520	79 a1 a4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5c)
    8521	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1
    8522	79 a1 ac ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x54)
    8523	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    8524	79 a1 b4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x4c)
    8525	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    8526	79 a1 bc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x44)
    8527	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    8528	79 a1 c4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c)
    8529	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    8530	79 a1 cc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x34)
    8531	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    8532	79 a1 d4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c)
    8533	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    8534	71 a1 78 fe 00 00 00 00	r1 = *(u8 *)(r10 - 0x188)
    8535	15 01 8a ff 01 00 00 00	if r1 == 0x1 goto -0x76 <LBB10_2>
    8536	71 a2 7b fe 00 00 00 00	r2 = *(u8 *)(r10 - 0x185)
    8537	69 a1 79 fe 00 00 00 00	r1 = *(u16 *)(r10 - 0x187)
    8538	79 a3 70 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x190)
    8539	7b 3a 10 fd 00 00 00 00	*(u64 *)(r10 - 0x2f0) = r3
    8540	79 a3 68 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x198)
    8541	7b 3a 08 fd 00 00 00 00	*(u64 *)(r10 - 0x2f8) = r3
    8542	79 a3 60 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a0)
    8543	7b 3a 00 fd 00 00 00 00	*(u64 *)(r10 - 0x300) = r3
    8544	79 a3 58 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a8)
    8545	7b 3a f8 fc 00 00 00 00	*(u64 *)(r10 - 0x308) = r3
    8546	79 a3 50 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1b0)
    8547	7b 3a f0 fc 00 00 00 00	*(u64 *)(r10 - 0x310) = r3
    8548	79 a3 48 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1b8)
    8549	7b 3a e8 fc 00 00 00 00	*(u64 *)(r10 - 0x318) = r3
    8550	79 a3 40 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1c0)
    8551	7b 3a e0 fc 00 00 00 00	*(u64 *)(r10 - 0x320) = r3
    8552	79 a3 38 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1c8)
    8553	7b 3a d8 fc 00 00 00 00	*(u64 *)(r10 - 0x328) = r3
    8554	79 a3 30 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1d0)
    8555	7b 3a d0 fc 00 00 00 00	*(u64 *)(r10 - 0x330) = r3
    8556	79 a3 28 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1d8)
    8557	7b 3a c8 fc 00 00 00 00	*(u64 *)(r10 - 0x338) = r3
    8558	79 a3 20 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1e0)
    8559	7b 3a c0 fc 00 00 00 00	*(u64 *)(r10 - 0x340) = r3
    8560	79 a3 18 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1e8)
    8561	7b 3a b8 fc 00 00 00 00	*(u64 *)(r10 - 0x348) = r3
    8562	79 a3 10 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1f0)
    8563	7b 3a b0 fc 00 00 00 00	*(u64 *)(r10 - 0x350) = r3
    8564	79 a3 08 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1f8)
    8565	7b 3a a8 fc 00 00 00 00	*(u64 *)(r10 - 0x358) = r3
    8566	79 a3 00 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x200)
    8567	7b 3a a0 fc 00 00 00 00	*(u64 *)(r10 - 0x360) = r3
    8568	79 a3 f8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x208)
    8569	7b 3a 98 fc 00 00 00 00	*(u64 *)(r10 - 0x368) = r3
    8570	79 a3 f0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x210)
    8571	7b 3a 90 fc 00 00 00 00	*(u64 *)(r10 - 0x370) = r3
    8572	79 a3 e8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x218)
    8573	7b 3a 88 fc 00 00 00 00	*(u64 *)(r10 - 0x378) = r3
    8574	79 a3 e0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x220)
    8575	7b 3a 80 fc 00 00 00 00	*(u64 *)(r10 - 0x380) = r3
    8576	79 a3 d8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x228)
    8577	7b 3a 78 fc 00 00 00 00	*(u64 *)(r10 - 0x388) = r3
    8578	79 a3 d0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x230)
    8579	7b 3a 70 fc 00 00 00 00	*(u64 *)(r10 - 0x390) = r3
    8580	79 a3 c8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x238)
    8581	7b 3a 68 fc 00 00 00 00	*(u64 *)(r10 - 0x398) = r3
    8582	79 a3 c0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x240)
    8583	7b 3a 60 fc 00 00 00 00	*(u64 *)(r10 - 0x3a0) = r3
    8584	79 a3 b8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x248)
    8585	7b 3a 58 fc 00 00 00 00	*(u64 *)(r10 - 0x3a8) = r3
    8586	79 a3 b0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x250)
    8587	7b 3a 50 fc 00 00 00 00	*(u64 *)(r10 - 0x3b0) = r3
    8588	79 a3 a8 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x258)
    8589	7b 3a 48 fc 00 00 00 00	*(u64 *)(r10 - 0x3b8) = r3
    8590	79 a3 a0 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x260)
    8591	7b 3a 40 fc 00 00 00 00	*(u64 *)(r10 - 0x3c0) = r3
    8592	79 a3 98 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x268)
    8593	7b 3a 38 fc 00 00 00 00	*(u64 *)(r10 - 0x3c8) = r3
    8594	79 a3 90 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x270)
    8595	7b 3a 30 fc 00 00 00 00	*(u64 *)(r10 - 0x3d0) = r3
    8596	79 a3 88 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x278)
    8597	7b 3a 28 fc 00 00 00 00	*(u64 *)(r10 - 0x3d8) = r3
    8598	79 a3 80 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x280)
    8599	7b 3a 20 fc 00 00 00 00	*(u64 *)(r10 - 0x3e0) = r3
    8600	79 a3 78 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x288)
    8601	7b 3a 18 fc 00 00 00 00	*(u64 *)(r10 - 0x3e8) = r3
    8602	79 a3 70 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x290)
    8603	7b 3a 10 fc 00 00 00 00	*(u64 *)(r10 - 0x3f0) = r3
    8604	79 a3 68 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x298)
    8605	7b 3a 08 fc 00 00 00 00	*(u64 *)(r10 - 0x3f8) = r3
    8606	79 a3 60 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2a0)
    8607	7b 3a 00 fc 00 00 00 00	*(u64 *)(r10 - 0x400) = r3
    8608	79 a3 58 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2a8)
    8609	7b 3a f8 fb 00 00 00 00	*(u64 *)(r10 - 0x408) = r3
    8610	79 a3 50 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2b0)
    8611	7b 3a f0 fb 00 00 00 00	*(u64 *)(r10 - 0x410) = r3
    8612	79 a3 48 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2b8)
    8613	7b 3a e8 fb 00 00 00 00	*(u64 *)(r10 - 0x418) = r3
    8614	79 a3 40 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2c0)
    8615	7b 3a e0 fb 00 00 00 00	*(u64 *)(r10 - 0x420) = r3
    8616	79 a3 38 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2c8)
    8617	7b 3a d8 fb 00 00 00 00	*(u64 *)(r10 - 0x428) = r3
    8618	79 a3 30 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2d0)
    8619	7b 3a d0 fb 00 00 00 00	*(u64 *)(r10 - 0x430) = r3
    8620	79 a3 28 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2d8)
    8621	7b 3a c8 fb 00 00 00 00	*(u64 *)(r10 - 0x438) = r3
    8622	79 a3 20 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2e0)
    8623	7b 3a c0 fb 00 00 00 00	*(u64 *)(r10 - 0x440) = r3
    8624	79 a3 18 fd 00 00 00 00	r3 = *(u64 *)(r10 - 0x2e8)
    8625	7b 3a b8 fb 00 00 00 00	*(u64 *)(r10 - 0x448) = r3
    8626	bf 23 00 00 00 00 00 00	r3 = r2
    8627	15 03 5c 00 00 00 00 00	if r3 == 0x0 goto +0x5c <LBB10_8>
    8628	73 26 03 00 00 00 00 00	*(u8 *)(r6 + 0x3) = r2
    8629	6b 16 01 00 00 00 00 00	*(u16 *)(r6 + 0x1) = r1
    8630	79 a1 b8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x448)
    8631	7b 16 04 00 00 00 00 00	*(u64 *)(r6 + 0x4) = r1
    8632	79 a1 c0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x440)
    8633	7b 16 0c 00 00 00 00 00	*(u64 *)(r6 + 0xc) = r1
    8634	79 a1 c8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x438)
    8635	7b 16 14 00 00 00 00 00	*(u64 *)(r6 + 0x14) = r1
    8636	79 a1 d0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x430)
    8637	7b 16 1c 00 00 00 00 00	*(u64 *)(r6 + 0x1c) = r1
    8638	79 a1 d8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x428)
    8639	7b 16 24 00 00 00 00 00	*(u64 *)(r6 + 0x24) = r1
    8640	79 a1 e0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x420)
    8641	7b 16 2c 00 00 00 00 00	*(u64 *)(r6 + 0x2c) = r1
    8642	79 a1 e8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x418)
    8643	7b 16 34 00 00 00 00 00	*(u64 *)(r6 + 0x34) = r1
    8644	79 a1 f0 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x410)
    8645	7b 16 3c 00 00 00 00 00	*(u64 *)(r6 + 0x3c) = r1
    8646	79 a1 f8 fb 00 00 00 00	r1 = *(u64 *)(r10 - 0x408)
    8647	7b 16 44 00 00 00 00 00	*(u64 *)(r6 + 0x44) = r1
    8648	79 a1 00 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x400)
    8649	7b 16 4c 00 00 00 00 00	*(u64 *)(r6 + 0x4c) = r1
    8650	79 a1 08 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f8)
    8651	7b 16 54 00 00 00 00 00	*(u64 *)(r6 + 0x54) = r1
    8652	79 a1 10 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3f0)
    8653	7b 16 5c 00 00 00 00 00	*(u64 *)(r6 + 0x5c) = r1
    8654	79 a1 18 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3e8)
    8655	7b 16 64 00 00 00 00 00	*(u64 *)(r6 + 0x64) = r1
    8656	79 a1 20 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3e0)
    8657	7b 16 6c 00 00 00 00 00	*(u64 *)(r6 + 0x6c) = r1
    8658	79 a1 28 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3d8)
    8659	7b 16 74 00 00 00 00 00	*(u64 *)(r6 + 0x74) = r1
    8660	79 a1 30 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3d0)
    8661	7b 16 7c 00 00 00 00 00	*(u64 *)(r6 + 0x7c) = r1
    8662	79 a1 38 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c8)
    8663	7b 16 84 00 00 00 00 00	*(u64 *)(r6 + 0x84) = r1
    8664	79 a1 40 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c0)
    8665	7b 16 8c 00 00 00 00 00	*(u64 *)(r6 + 0x8c) = r1
    8666	79 a1 48 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3b8)
    8667	7b 16 94 00 00 00 00 00	*(u64 *)(r6 + 0x94) = r1
    8668	79 a1 50 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3b0)
    8669	7b 16 9c 00 00 00 00 00	*(u64 *)(r6 + 0x9c) = r1
    8670	79 a1 58 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3a8)
    8671	7b 16 a4 00 00 00 00 00	*(u64 *)(r6 + 0xa4) = r1
    8672	79 a1 60 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x3a0)
    8673	7b 16 ac 00 00 00 00 00	*(u64 *)(r6 + 0xac) = r1
    8674	79 a1 68 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x398)
    8675	7b 16 b4 00 00 00 00 00	*(u64 *)(r6 + 0xb4) = r1
    8676	79 a1 70 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x390)
    8677	7b 16 bc 00 00 00 00 00	*(u64 *)(r6 + 0xbc) = r1
    8678	79 a1 78 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x388)
    8679	7b 16 c4 00 00 00 00 00	*(u64 *)(r6 + 0xc4) = r1
    8680	79 a1 80 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x380)
    8681	7b 16 cc 00 00 00 00 00	*(u64 *)(r6 + 0xcc) = r1
    8682	79 a1 88 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x378)
    8683	7b 16 d4 00 00 00 00 00	*(u64 *)(r6 + 0xd4) = r1
    8684	79 a1 90 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x370)
    8685	7b 16 dc 00 00 00 00 00	*(u64 *)(r6 + 0xdc) = r1
    8686	79 a1 98 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x368)
    8687	7b 16 e4 00 00 00 00 00	*(u64 *)(r6 + 0xe4) = r1
    8688	79 a1 a0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x360)
    8689	7b 16 ec 00 00 00 00 00	*(u64 *)(r6 + 0xec) = r1
    8690	79 a1 a8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x358)
    8691	7b 16 f4 00 00 00 00 00	*(u64 *)(r6 + 0xf4) = r1
    8692	79 a1 b0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x350)
    8693	7b 16 fc 00 00 00 00 00	*(u64 *)(r6 + 0xfc) = r1
    8694	79 a1 b8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x348)
    8695	7b 16 04 01 00 00 00 00	*(u64 *)(r6 + 0x104) = r1
    8696	79 a1 c0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x340)
    8697	7b 16 0c 01 00 00 00 00	*(u64 *)(r6 + 0x10c) = r1
    8698	79 a1 c8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x338)
    8699	7b 16 14 01 00 00 00 00	*(u64 *)(r6 + 0x114) = r1
    8700	79 a1 d0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x330)
    8701	7b 16 1c 01 00 00 00 00	*(u64 *)(r6 + 0x11c) = r1
    8702	79 a1 d8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x328)
    8703	7b 16 24 01 00 00 00 00	*(u64 *)(r6 + 0x124) = r1
    8704	79 a1 e0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x320)
    8705	7b 16 2c 01 00 00 00 00	*(u64 *)(r6 + 0x12c) = r1
    8706	79 a1 e8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x318)
    8707	7b 16 34 01 00 00 00 00	*(u64 *)(r6 + 0x134) = r1
    8708	79 a1 f0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x310)
    8709	7b 16 3c 01 00 00 00 00	*(u64 *)(r6 + 0x13c) = r1
    8710	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    8711	7b 16 44 01 00 00 00 00	*(u64 *)(r6 + 0x144) = r1
    8712	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    8713	7b 16 4c 01 00 00 00 00	*(u64 *)(r6 + 0x14c) = r1
    8714	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
    8715	7b 16 54 01 00 00 00 00	*(u64 *)(r6 + 0x154) = r1
    8716	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    8717	7b 16 5c 01 00 00 00 00	*(u64 *)(r6 + 0x15c) = r1
    8718	b7 01 00 00 00 00 00 00	r1 = 0x0
    8719	05 00 e8 fe 00 00 00 00	goto -0x118 <LBB10_4>

0000000000011080 <LBB10_8>
    8720	b7 01 00 00 09 00 00 00	r1 = 0x9
    8721	63 16 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r1
    8722	05 00 e4 fe 00 00 00 00	goto -0x11c <LBB10_3>

0000000000011098 <solana_program::program_pack::Pack::unpack>
    8723	bf 16 00 00 00 00 00 00	r6 = r1
    8724	55 03 0a 00 a5 00 00 00	if r3 != 0xa5 goto +0xa <LBB11_4>
    8725	bf a1 00 00 00 00 00 00	r1 = r10
    8726	07 01 00 00 28 ff ff ff	r1 += -0xd8
    8727	b7 03 00 00 a5 00 00 00	r3 = 0xa5
    8728	85 10 00 00 b3 01 00 00	call 0x1b3 ; <<spl_token::state::Account as solana_program::program_pack::Pack>::unpack_from_slice>
    8729	b7 02 00 00 01 00 00 00	r2 = 0x1
    8730	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    8731	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB11_3>
    8732	b7 02 00 00 00 00 00 00	r2 = 0x0

00000000000110e8 <LBB11_3>
    8733	71 a1 9c ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x64)
    8734	05 00 04 00 00 00 00 00	goto +0x4 <LBB11_5>

00000000000110f8 <LBB11_4>
    8735	b7 01 00 00 03 00 00 00	r1 = 0x3
    8736	63 1a 30 ff 00 00 00 00	*(u32 *)(r10 - 0xd0) = r1
    8737	b7 02 00 00 01 00 00 00	r2 = 0x1
    8738	7b 2a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r2

0000000000011118 <LBB11_5>
    8739	61 a3 98 ff 00 00 00 00	r3 = *(u32 *)(r10 - 0x68)
    8740	63 3a 20 ff 00 00 00 00	*(u32 *)(r10 - 0xe0) = r3
    8741	79 a3 90 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x70)
    8742	7b 3a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r3
    8743	79 a3 88 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x78)
    8744	7b 3a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r3
    8745	79 a3 80 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x80)
    8746	7b 3a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r3
    8747	79 a3 78 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x88)
    8748	7b 3a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r3
    8749	79 a3 70 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x90)
    8750	7b 3a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r3
    8751	79 a3 68 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x98)
    8752	7b 3a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r3
    8753	79 a3 60 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xa0)
    8754	7b 3a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r3
    8755	79 a3 58 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xa8)
    8756	7b 3a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r3
    8757	79 a3 50 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xb0)
    8758	7b 3a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r3
    8759	79 a3 48 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xb8)
    8760	7b 3a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r3
    8761	79 a3 40 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xc0)
    8762	7b 3a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r3
    8763	79 a3 38 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xc8)
    8764	7b 3a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r3
    8765	79 a3 30 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xd0)
    8766	7b 3a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r3
    8767	61 a3 dc ff 00 00 00 00	r3 = *(u32 *)(r10 - 0x24)
    8768	63 3a af fe 00 00 00 00	*(u32 *)(r10 - 0x151) = r3
    8769	79 a3 d5 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x2b)
    8770	7b 3a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r3
    8771	79 a3 cd ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x33)
    8772	7b 3a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r3
    8773	79 a3 c5 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x3b)
    8774	7b 3a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r3
    8775	79 a3 bd ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x43)
    8776	7b 3a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r3
    8777	79 a3 b5 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x4b)
    8778	7b 3a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r3
    8779	79 a3 ad ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x53)
    8780	7b 3a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r3
    8781	79 a3 a5 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x5b)
    8782	7b 3a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r3
    8783	79 a3 9d ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x63)
    8784	7b 3a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r3
    8785	57 02 00 00 01 00 00 00	r2 &= 0x1
    8786	55 02 64 00 00 00 00 00	if r2 != 0x0 goto +0x64 <LBB11_8>
    8787	61 a2 20 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0xe0)
    8788	63 2a 68 fe 00 00 00 00	*(u32 *)(r10 - 0x198) = r2
    8789	79 a2 18 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xe8)
    8790	7b 2a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r2
    8791	79 a2 10 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf0)
    8792	7b 2a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r2
    8793	79 a2 08 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xf8)
    8794	7b 2a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r2
    8795	79 a2 00 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x100)
    8796	7b 2a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r2
    8797	79 a2 f8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x108)
    8798	7b 2a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r2
    8799	79 a2 f0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x110)
    8800	7b 2a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r2
    8801	79 a2 e8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x118)
    8802	7b 2a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r2
    8803	79 a2 e0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x120)
    8804	7b 2a 28 fe 00 00 00 00	*(u64 *)(r10 - 0x1d8) = r2
    8805	79 a2 d8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x128)
    8806	7b 2a 20 fe 00 00 00 00	*(u64 *)(r10 - 0x1e0) = r2
    8807	79 a2 d0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x130)
    8808	7b 2a 18 fe 00 00 00 00	*(u64 *)(r10 - 0x1e8) = r2
    8809	79 a2 c8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x138)
    8810	7b 2a 10 fe 00 00 00 00	*(u64 *)(r10 - 0x1f0) = r2
    8811	79 a2 c0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x140)
    8812	7b 2a 08 fe 00 00 00 00	*(u64 *)(r10 - 0x1f8) = r2
    8813	79 a2 b8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x148)
    8814	7b 2a 00 fe 00 00 00 00	*(u64 *)(r10 - 0x200) = r2
    8815	61 a2 af fe 00 00 00 00	r2 = *(u32 *)(r10 - 0x151)
    8816	63 2a f7 fd 00 00 00 00	*(u32 *)(r10 - 0x209) = r2
    8817	79 a2 a8 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x158)
    8818	7b 2a f0 fd 00 00 00 00	*(u64 *)(r10 - 0x210) = r2
    8819	79 a2 a0 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x160)
    8820	7b 2a e8 fd 00 00 00 00	*(u64 *)(r10 - 0x218) = r2
    8821	79 a2 98 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x168)
    8822	7b 2a e0 fd 00 00 00 00	*(u64 *)(r10 - 0x220) = r2
    8823	79 a2 90 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x170)
    8824	7b 2a d8 fd 00 00 00 00	*(u64 *)(r10 - 0x228) = r2
    8825	79 a2 88 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x178)
    8826	7b 2a d0 fd 00 00 00 00	*(u64 *)(r10 - 0x230) = r2
    8827	79 a2 80 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x180)
    8828	7b 2a c8 fd 00 00 00 00	*(u64 *)(r10 - 0x238) = r2
    8829	79 a2 78 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x188)
    8830	7b 2a c0 fd 00 00 00 00	*(u64 *)(r10 - 0x240) = r2
    8831	79 a2 70 fe 00 00 00 00	r2 = *(u64 *)(r10 - 0x190)
    8832	7b 2a b8 fd 00 00 00 00	*(u64 *)(r10 - 0x248) = r2
    8833	bf 62 00 00 00 00 00 00	r2 = r6
    8834	07 02 00 00 08 00 00 00	r2 += 0x8
    8835	bf 13 00 00 00 00 00 00	r3 = r1
    8836	57 03 00 00 ff 00 00 00	r3 &= 0xff
    8837	15 03 47 00 00 00 00 00	if r3 == 0x0 goto +0x47 <LBB11_9>
    8838	61 a3 68 fe 00 00 00 00	r3 = *(u32 *)(r10 - 0x198)
    8839	63 32 68 00 00 00 00 00	*(u32 *)(r2 + 0x68) = r3
    8840	79 a3 60 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a0)
    8841	7b 32 60 00 00 00 00 00	*(u64 *)(r2 + 0x60) = r3
    8842	79 a3 58 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a8)
    8843	7b 32 58 00 00 00 00 00	*(u64 *)(r2 + 0x58) = r3
    8844	79 a3 50 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1b0)
    8845	7b 32 50 00 00 00 00 00	*(u64 *)(r2 + 0x50) = r3
    8846	79 a3 48 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1b8)
    8847	7b 32 48 00 00 00 00 00	*(u64 *)(r2 + 0x48) = r3
    8848	79 a3 40 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1c0)
    8849	7b 32 40 00 00 00 00 00	*(u64 *)(r2 + 0x40) = r3
    8850	79 a3 38 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1c8)
    8851	7b 32 38 00 00 00 00 00	*(u64 *)(r2 + 0x38) = r3
    8852	79 a3 30 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1d0)
    8853	7b 32 30 00 00 00 00 00	*(u64 *)(r2 + 0x30) = r3
    8854	79 a3 28 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1d8)
    8855	7b 32 28 00 00 00 00 00	*(u64 *)(r2 + 0x28) = r3
    8856	79 a3 20 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1e0)
    8857	7b 32 20 00 00 00 00 00	*(u64 *)(r2 + 0x20) = r3
    8858	79 a3 18 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1e8)
    8859	7b 32 18 00 00 00 00 00	*(u64 *)(r2 + 0x18) = r3
    8860	79 a3 10 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1f0)
    8861	7b 32 10 00 00 00 00 00	*(u64 *)(r2 + 0x10) = r3
    8862	79 a3 08 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1f8)
    8863	7b 32 08 00 00 00 00 00	*(u64 *)(r2 + 0x8) = r3
    8864	79 a3 00 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x200)
    8865	7b 32 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r3
    8866	73 16 74 00 00 00 00 00	*(u8 *)(r6 + 0x74) = r1
    8867	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    8868	7b 16 75 00 00 00 00 00	*(u64 *)(r6 + 0x75) = r1
    8869	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    8870	7b 16 7d 00 00 00 00 00	*(u64 *)(r6 + 0x7d) = r1
    8871	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    8872	7b 16 85 00 00 00 00 00	*(u64 *)(r6 + 0x85) = r1
    8873	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    8874	7b 16 8d 00 00 00 00 00	*(u64 *)(r6 + 0x8d) = r1
    8875	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    8876	7b 16 95 00 00 00 00 00	*(u64 *)(r6 + 0x95) = r1
    8877	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    8878	7b 16 9d 00 00 00 00 00	*(u64 *)(r6 + 0x9d) = r1
    8879	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    8880	7b 16 a5 00 00 00 00 00	*(u64 *)(r6 + 0xa5) = r1
    8881	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    8882	7b 16 ad 00 00 00 00 00	*(u64 *)(r6 + 0xad) = r1
    8883	61 a1 f7 fd 00 00 00 00	r1 = *(u32 *)(r10 - 0x209)
    8884	63 16 b4 00 00 00 00 00	*(u32 *)(r6 + 0xb4) = r1
    8885	b7 01 00 00 00 00 00 00	r1 = 0x0
    8886	05 00 19 00 00 00 00 00	goto +0x19 <LBB11_11>

00000000000115b8 <LBB11_8>
    8887	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    8888	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    8889	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    8890	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    8891	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    8892	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    8893	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    8894	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    8895	bf a1 00 00 00 00 00 00	r1 = r10
    8896	07 01 00 00 e0 ff ff ff	r1 += -0x20
    8897	bf a2 00 00 00 00 00 00	r2 = r10
    8898	07 02 00 00 28 ff ff ff	r2 += -0xd8
    8899	85 10 00 00 ec fc ff ff	call -0x314 ; <<T as core::convert::From<T>>::from>
    8900	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    8901	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    8902	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    8903	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    8904	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    8905	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    8906	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    8907	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    8908	05 00 02 00 00 00 00 00	goto +0x2 <LBB11_10>

0000000000011668 <LBB11_9>
    8909	b7 01 00 00 09 00 00 00	r1 = 0x9
    8910	63 12 00 00 00 00 00 00	*(u32 *)(r2 + 0x0) = r1

0000000000011678 <LBB11_10>
    8911	b7 01 00 00 01 00 00 00	r1 = 0x1

0000000000011680 <LBB11_11>
    8912	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    8913	95 00 00 00 00 00 00 00	exit

0000000000011690 <<spl_token::state::Mint as solana_program::program_pack::Pack>::unpack_from_slice>
    8914	bf 27 00 00 00 00 00 00	r7 = r2
    8915	bf 16 00 00 00 00 00 00	r6 = r1
    8916	25 03 06 00 51 00 00 00	if r3 > 0x51 goto +0x6 <LBB15_2>
    8917	b7 01 00 00 52 00 00 00	r1 = 0x52
    8918	bf 32 00 00 00 00 00 00	r2 = r3
    8919	18 03 00 00 80 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24d80 ll
    8921	85 10 00 00 68 0e 00 00	call 0xe68 ; <core::slice::index::slice_end_index_len_fail>
    8922	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000116d8 <LBB15_2>
    8923	71 71 00 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x0)
    8924	15 01 26 00 01 00 00 00	if r1 == 0x1 goto +0x26 <LBB15_7>
    8925	55 01 07 00 00 00 00 00	if r1 != 0x0 goto +0x7 <LBB15_25>
    8926	71 71 01 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x1)
    8927	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB15_25>
    8928	71 71 02 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2)
    8929	55 01 03 00 00 00 00 00	if r1 != 0x0 goto +0x3 <LBB15_25>
    8930	b7 08 00 00 00 00 00 00	r8 = 0x0
    8931	71 71 03 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x3)
    8932	15 01 3d 00 00 00 00 00	if r1 == 0x0 goto +0x3d <LBB15_11>

0000000000011728 <LBB15_25>
    8933	61 a1 b8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x48)
    8934	63 1a 98 ff 00 00 00 00	*(u32 *)(r10 - 0x68) = r1
    8935	79 a2 b0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x50)
    8936	7b 2a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r2
    8937	79 a3 a8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x58)
    8938	7b 3a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r3
    8939	79 a4 a0 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x60)
    8940	7b 4a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r4
    8941	b7 05 00 00 03 00 00 00	r5 = 0x3
    8942	63 5a e0 ff 00 00 00 00	*(u32 *)(r10 - 0x20) = r5
    8943	7b 4a e4 ff 00 00 00 00	*(u64 *)(r10 - 0x1c) = r4
    8944	7b 3a ec ff 00 00 00 00	*(u64 *)(r10 - 0x14) = r3
    8945	7b 2a f4 ff 00 00 00 00	*(u64 *)(r10 - 0xc) = r2
    8946	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 0x4) = r1
    8947	bf a1 00 00 00 00 00 00	r1 = r10
    8948	07 01 00 00 c0 ff ff ff	r1 += -0x40
    8949	bf a2 00 00 00 00 00 00	r2 = r10
    8950	07 02 00 00 e0 ff ff ff	r2 += -0x20
    8951	85 10 00 00 b8 fc ff ff	call -0x348 ; <<T as core::convert::From<T>>::from>
    8952	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    8953	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    8954	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    8955	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    8956	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    8957	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    8958	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    8959	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    8960	b7 01 00 00 01 00 00 00	r1 = 0x1

0000000000011808 <LBB15_26>
    8961	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1

0000000000011810 <LBB15_27>
    8962	95 00 00 00 00 00 00 00	exit

0000000000011818 <LBB15_7>
    8963	71 71 01 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x1)
    8964	55 01 e0 ff 00 00 00 00	if r1 != 0x0 goto -0x20 <LBB15_25>
    8965	71 71 02 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2)
    8966	55 01 de ff 00 00 00 00	if r1 != 0x0 goto -0x22 <LBB15_25>
    8967	71 71 03 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x3)
    8968	55 01 dc ff 00 00 00 00	if r1 != 0x0 goto -0x24 <LBB15_25>
    8969	bf 71 00 00 00 00 00 00	r1 = r7
    8970	07 01 00 00 04 00 00 00	r1 += 0x4
    8971	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
    8972	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
    8973	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
    8974	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
    8975	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    8976	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
    8977	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    8978	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    8979	bf a1 00 00 00 00 00 00	r1 = r10
    8980	07 01 00 00 c0 ff ff ff	r1 += -0x40
    8981	bf a2 00 00 00 00 00 00	r2 = r10
    8982	07 02 00 00 e0 ff ff ff	r2 += -0x20
    8983	85 10 00 00 06 0c 00 00	call 0xc06 ; <solana_program::pubkey::Pubkey::new_from_array>
    8984	79 a1 c4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c)
    8985	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    8986	79 a1 cc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x34)
    8987	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    8988	79 a1 d4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c)
    8989	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    8990	61 a1 dc ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x24)
    8991	63 1a b8 ff 00 00 00 00	*(u32 *)(r10 - 0x48) = r1
    8992	b7 08 00 00 01 00 00 00	r8 = 0x1
    8993	61 a4 c0 ff 00 00 00 00	r4 = *(u32 *)(r10 - 0x40)

0000000000011910 <LBB15_11>
    8994	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    8995	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    8996	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    8997	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    8998	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    8999	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    9000	61 a1 b8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x48)
    9001	63 1a 58 ff 00 00 00 00	*(u32 *)(r10 - 0xa8) = r1
    9002	b7 09 00 00 00 00 00 00	r9 = 0x0
    9003	71 70 2c 00 00 00 00 00	r0 = *(u8 *)(r7 + 0x2c)
    9004	79 75 24 00 00 00 00 00	r5 = *(u64 *)(r7 + 0x24)
    9005	71 71 2d 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2d)
    9006	15 01 07 00 00 00 00 00	if r1 == 0x0 goto +0x7 <LBB15_15>
    9007	15 01 05 00 01 00 00 00	if r1 == 0x1 goto +0x5 <LBB15_14>
    9008	b7 01 00 00 01 00 00 00	r1 = 0x1
    9009	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    9010	b7 01 00 00 03 00 00 00	r1 = 0x3
    9011	63 16 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r1
    9012	05 00 cd ff 00 00 00 00	goto -0x33 <LBB15_27>

00000000000119a8 <LBB15_14>
    9013	b7 09 00 00 01 00 00 00	r9 = 0x1

00000000000119b0 <LBB15_15>
    9014	71 71 2e 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2e)
    9015	15 01 09 00 01 00 00 00	if r1 == 0x1 goto +0x9 <LBB15_20>
    9016	55 01 ac ff 00 00 00 00	if r1 != 0x0 goto -0x54 <LBB15_25>
    9017	71 71 2f 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2f)
    9018	55 01 aa ff 00 00 00 00	if r1 != 0x0 goto -0x56 <LBB15_25>
    9019	71 71 30 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x30)
    9020	55 01 a8 ff 00 00 00 00	if r1 != 0x0 goto -0x58 <LBB15_25>
    9021	b7 01 00 00 00 00 00 00	r1 = 0x0
    9022	71 73 31 00 00 00 00 00	r3 = *(u8 *)(r7 + 0x31)
    9023	15 03 25 00 00 00 00 00	if r3 == 0x0 goto +0x25 <LBB15_24>
    9024	05 00 a4 ff 00 00 00 00	goto -0x5c <LBB15_25>

0000000000011a08 <LBB15_20>
    9025	71 71 2f 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x2f)
    9026	55 01 a2 ff 00 00 00 00	if r1 != 0x0 goto -0x5e <LBB15_25>
    9027	71 71 30 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x30)
    9028	55 01 a0 ff 00 00 00 00	if r1 != 0x0 goto -0x60 <LBB15_25>
    9029	71 71 31 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x31)
    9030	55 01 9e ff 00 00 00 00	if r1 != 0x0 goto -0x62 <LBB15_25>
    9031	07 07 00 00 32 00 00 00	r7 += 0x32
    9032	79 71 18 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x18)
    9033	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
    9034	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
    9035	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    9036	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
    9037	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    9038	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
    9039	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    9040	bf a1 00 00 00 00 00 00	r1 = r10
    9041	07 01 00 00 c0 ff ff ff	r1 += -0x40
    9042	bf a2 00 00 00 00 00 00	r2 = r10
    9043	07 02 00 00 e0 ff ff ff	r2 += -0x20
    9044	7b 4a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r4
    9045	bf 57 00 00 00 00 00 00	r7 = r5
    9046	7b 0a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r0
    9047	85 10 00 00 c6 0b 00 00	call 0xbc6 ; <solana_program::pubkey::Pubkey::new_from_array>
    9048	79 a0 30 ff 00 00 00 00	r0 = *(u64 *)(r10 - 0xd0)
    9049	bf 75 00 00 00 00 00 00	r5 = r7
    9050	79 a4 38 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xc8)
    9051	79 a1 c4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x3c)
    9052	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9053	79 a1 cc ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x34)
    9054	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
    9055	79 a1 d4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c)
    9056	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    9057	61 a1 dc ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x24)
    9058	63 1a b8 ff 00 00 00 00	*(u32 *)(r10 - 0x48) = r1
    9059	b7 01 00 00 01 00 00 00	r1 = 0x1
    9060	61 a2 c0 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x40)

0000000000011b28 <LBB15_24>
    9061	79 a3 a0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x60)
    9062	7b 3a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r3
    9063	79 a3 a8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x58)
    9064	7b 3a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r3
    9065	79 a3 b0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x50)
    9066	7b 3a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r3
    9067	61 a3 b8 ff 00 00 00 00	r3 = *(u32 *)(r10 - 0x48)
    9068	63 3a 98 ff 00 00 00 00	*(u32 *)(r10 - 0x68) = r3
    9069	63 3a 78 ff 00 00 00 00	*(u32 *)(r10 - 0x88) = r3
    9070	63 46 0c 00 00 00 00 00	*(u32 *)(r6 + 0xc) = r4
    9071	63 86 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r8
    9072	79 a3 40 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xc0)
    9073	7b 36 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r3
    9074	79 a3 48 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xb8)
    9075	7b 36 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r3
    9076	79 a3 50 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xb0)
    9077	7b 36 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r3
    9078	61 a3 58 ff 00 00 00 00	r3 = *(u32 *)(r10 - 0xa8)
    9079	63 36 28 00 00 00 00 00	*(u32 *)(r6 + 0x28) = r3
    9080	63 26 40 00 00 00 00 00	*(u32 *)(r6 + 0x40) = r2
    9081	63 16 3c 00 00 00 00 00	*(u32 *)(r6 + 0x3c) = r1
    9082	73 96 39 00 00 00 00 00	*(u8 *)(r6 + 0x39) = r9
    9083	73 06 38 00 00 00 00 00	*(u8 *)(r6 + 0x38) = r0
    9084	7b 56 30 00 00 00 00 00	*(u64 *)(r6 + 0x30) = r5
    9085	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    9086	7b 16 44 00 00 00 00 00	*(u64 *)(r6 + 0x44) = r1
    9087	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    9088	7b 16 4c 00 00 00 00 00	*(u64 *)(r6 + 0x4c) = r1
    9089	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    9090	7b 16 54 00 00 00 00 00	*(u64 *)(r6 + 0x54) = r1
    9091	61 a1 78 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x88)
    9092	63 16 5c 00 00 00 00 00	*(u32 *)(r6 + 0x5c) = r1
    9093	b7 01 00 00 00 00 00 00	r1 = 0x0
    9094	05 00 7a ff 00 00 00 00	goto -0x86 <LBB15_26>

0000000000011c38 <<spl_token::state::Mint as solana_program::program_pack::Pack>::pack_into_slice>
    9095	bf 26 00 00 00 00 00 00	r6 = r2
    9096	bf 17 00 00 00 00 00 00	r7 = r1
    9097	25 03 06 00 51 00 00 00	if r3 > 0x51 goto +0x6 <LBB16_2>
    9098	b7 01 00 00 52 00 00 00	r1 = 0x52
    9099	bf 32 00 00 00 00 00 00	r2 = r3
    9100	18 03 00 00 98 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24d98 ll
    9102	85 10 00 00 b3 0d 00 00	call 0xdb3 ; <core::slice::index::slice_end_index_len_fail>
    9103	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000011c80 <LBB16_2>
    9104	71 72 31 00 00 00 00 00	r2 = *(u8 *)(r7 + 0x31)
    9105	71 79 30 00 00 00 00 00	r9 = *(u8 *)(r7 + 0x30)
    9106	79 78 28 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x28)
    9107	61 71 00 00 00 00 00 00	r1 = *(u32 *)(r7 + 0x0)
    9108	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB16_4>
    9109	b7 01 00 00 00 00 00 00	r1 = 0x0
    9110	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    9111	05 00 0f 00 00 00 00 00	goto +0xf <LBB16_5>

0000000000011cc0 <LBB16_4>
    9112	b7 01 00 00 01 00 00 00	r1 = 0x1
    9113	63 16 00 00 00 00 00 00	*(u32 *)(r6 + 0x0) = r1
    9114	7b 2a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r2
    9115	bf 72 00 00 00 00 00 00	r2 = r7
    9116	07 02 00 00 04 00 00 00	r2 += 0x4
    9117	bf a1 00 00 00 00 00 00	r1 = r10
    9118	07 01 00 00 f0 ff ff ff	r1 += -0x10
    9119	85 10 00 00 87 0b 00 00	call 0xb87 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9120	bf 61 00 00 00 00 00 00	r1 = r6
    9121	07 01 00 00 04 00 00 00	r1 += 0x4
    9122	79 a4 f8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x8)
    9123	79 a3 f0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x10)
    9124	b7 02 00 00 20 00 00 00	r2 = 0x20
    9125	85 10 00 00 13 fb ff ff	call -0x4ed ; <core::slice::<impl [T]>::copy_from_slice>
    9126	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)

0000000000011d38 <LBB16_5>
    9127	73 26 2d 00 00 00 00 00	*(u8 *)(r6 + 0x2d) = r2
    9128	73 96 2c 00 00 00 00 00	*(u8 *)(r6 + 0x2c) = r9
    9129	7b 86 24 00 00 00 00 00	*(u64 *)(r6 + 0x24) = r8
    9130	61 71 34 00 00 00 00 00	r1 = *(u32 *)(r7 + 0x34)
    9131	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB16_7>
    9132	b7 01 00 00 00 00 00 00	r1 = 0x0
    9133	63 16 2e 00 00 00 00 00	*(u32 *)(r6 + 0x2e) = r1
    9134	05 00 0d 00 00 00 00 00	goto +0xd <LBB16_8>

0000000000011d78 <LBB16_7>
    9135	b7 01 00 00 01 00 00 00	r1 = 0x1
    9136	63 16 2e 00 00 00 00 00	*(u32 *)(r6 + 0x2e) = r1
    9137	07 07 00 00 38 00 00 00	r7 += 0x38
    9138	bf a1 00 00 00 00 00 00	r1 = r10
    9139	07 01 00 00 e0 ff ff ff	r1 += -0x20
    9140	bf 72 00 00 00 00 00 00	r2 = r7
    9141	85 10 00 00 71 0b 00 00	call 0xb71 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9142	07 06 00 00 32 00 00 00	r6 += 0x32
    9143	79 a4 e8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x18)
    9144	79 a3 e0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x20)
    9145	bf 61 00 00 00 00 00 00	r1 = r6
    9146	b7 02 00 00 20 00 00 00	r2 = 0x20
    9147	85 10 00 00 fd fa ff ff	call -0x503 ; <core::slice::<impl [T]>::copy_from_slice>

0000000000011de0 <LBB16_8>
    9148	95 00 00 00 00 00 00 00	exit

0000000000011de8 <spl_token::state::Account::is_frozen>
    9149	71 11 6c 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x6c)
    9150	b7 00 00 00 01 00 00 00	r0 = 0x1
    9151	15 01 01 00 02 00 00 00	if r1 == 0x2 goto +0x1 <LBB17_2>
    9152	b7 00 00 00 00 00 00 00	r0 = 0x0

0000000000011e08 <LBB17_2>
    9153	95 00 00 00 00 00 00 00	exit

0000000000011e10 <spl_token::state::Account::is_native>
    9154	61 11 70 00 00 00 00 00	r1 = *(u32 *)(r1 + 0x70)
    9155	b7 00 00 00 01 00 00 00	r0 = 0x1
    9156	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB18_2>
    9157	b7 00 00 00 00 00 00 00	r0 = 0x0

0000000000011e30 <LBB18_2>
    9158	95 00 00 00 00 00 00 00	exit

0000000000011e38 <<spl_token::state::Account as solana_program::program_pack::IsInitialized>::is_initialized>
    9159	71 11 6c 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x6c)
    9160	b7 00 00 00 01 00 00 00	r0 = 0x1
    9161	55 01 01 00 00 00 00 00	if r1 != 0x0 goto +0x1 <LBB19_2>
    9162	b7 00 00 00 00 00 00 00	r0 = 0x0

0000000000011e58 <LBB19_2>
    9163	95 00 00 00 00 00 00 00	exit

0000000000011e60 <<spl_token::state::Account as solana_program::program_pack::Pack>::unpack_from_slice>
    9164	bf 27 00 00 00 00 00 00	r7 = r2
    9165	bf 16 00 00 00 00 00 00	r6 = r1
    9166	25 03 06 00 a4 00 00 00	if r3 > 0xa4 goto +0x6 <LBB20_2>
    9167	b7 01 00 00 a5 00 00 00	r1 = 0xa5
    9168	bf 32 00 00 00 00 00 00	r2 = r3
    9169	18 03 00 00 b0 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24db0 ll
    9171	85 10 00 00 6e 0d 00 00	call 0xd6e ; <core::slice::index::slice_end_index_len_fail>
    9172	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000011ea8 <LBB20_2>
    9173	79 71 18 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x18)
    9174	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9175	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
    9176	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    9177	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
    9178	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    9179	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
    9180	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9181	bf a1 00 00 00 00 00 00	r1 = r10
    9182	07 01 00 00 b8 fe ff ff	r1 += -0x148
    9183	bf a2 00 00 00 00 00 00	r2 = r10
    9184	07 02 00 00 88 ff ff ff	r2 += -0x78
    9185	85 10 00 00 3c 0b 00 00	call 0xb3c ; <solana_program::pubkey::Pubkey::new_from_array>
    9186	79 71 38 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x38)
    9187	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9188	79 71 30 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x30)
    9189	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    9190	79 71 28 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x28)
    9191	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    9192	79 71 20 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x20)
    9193	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9194	bf a1 00 00 00 00 00 00	r1 = r10
    9195	07 01 00 00 d8 fe ff ff	r1 += -0x128
    9196	bf a2 00 00 00 00 00 00	r2 = r10
    9197	07 02 00 00 88 ff ff ff	r2 += -0x78
    9198	85 10 00 00 2f 0b 00 00	call 0xb2f ; <solana_program::pubkey::Pubkey::new_from_array>
    9199	79 78 40 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x40)
    9200	71 71 48 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x48)
    9201	15 01 26 00 01 00 00 00	if r1 == 0x1 goto +0x26 <LBB20_7>
    9202	55 01 07 00 00 00 00 00	if r1 != 0x0 goto +0x7 <LBB20_12>
    9203	71 71 49 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x49)
    9204	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB20_12>
    9205	71 71 4a 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x4a)
    9206	55 01 03 00 00 00 00 00	if r1 != 0x0 goto +0x3 <LBB20_12>
    9207	b7 04 00 00 00 00 00 00	r4 = 0x0
    9208	71 71 4b 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x4b)
    9209	15 01 3d 00 00 00 00 00	if r1 == 0x0 goto +0x3d <LBB20_11>

0000000000011fd0 <LBB20_12>
    9210	61 a1 50 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xb0)
    9211	63 1a 30 ff 00 00 00 00	*(u32 *)(r10 - 0xd0) = r1
    9212	79 a2 48 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xb8)
    9213	7b 2a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r2
    9214	79 a3 40 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xc0)
    9215	7b 3a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r3
    9216	79 a4 38 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xc8)
    9217	7b 4a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r4

0000000000012010 <LBB20_33>
    9218	b7 05 00 00 03 00 00 00	r5 = 0x3
    9219	63 5a 88 ff 00 00 00 00	*(u32 *)(r10 - 0x78) = r5
    9220	7b 4a 8c ff 00 00 00 00	*(u64 *)(r10 - 0x74) = r4
    9221	7b 3a 94 ff 00 00 00 00	*(u64 *)(r10 - 0x6c) = r3
    9222	7b 2a 9c ff 00 00 00 00	*(u64 *)(r10 - 0x64) = r2
    9223	63 1a a4 ff 00 00 00 00	*(u32 *)(r10 - 0x5c) = r1

0000000000012040 <LBB20_34>
    9224	bf a1 00 00 00 00 00 00	r1 = r10
    9225	07 01 00 00 60 ff ff ff	r1 += -0xa0
    9226	bf a2 00 00 00 00 00 00	r2 = r10
    9227	07 02 00 00 88 ff ff ff	r2 += -0x78
    9228	85 10 00 00 a3 fb ff ff	call -0x45d ; <<T as core::convert::From<T>>::from>
    9229	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    9230	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
    9231	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    9232	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
    9233	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    9234	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
    9235	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    9236	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
    9237	b7 01 00 00 01 00 00 00	r1 = 0x1

00000000000120b0 <LBB20_35>
    9238	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
    9239	95 00 00 00 00 00 00 00	exit

00000000000120c0 <LBB20_7>
    9240	71 71 49 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x49)
    9241	55 01 e0 ff 00 00 00 00	if r1 != 0x0 goto -0x20 <LBB20_12>
    9242	71 71 4a 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x4a)
    9243	55 01 de ff 00 00 00 00	if r1 != 0x0 goto -0x22 <LBB20_12>
    9244	71 71 4b 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x4b)
    9245	55 01 dc ff 00 00 00 00	if r1 != 0x0 goto -0x24 <LBB20_12>
    9246	bf 71 00 00 00 00 00 00	r1 = r7
    9247	07 01 00 00 4c 00 00 00	r1 += 0x4c
    9248	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
    9249	7b 2a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r2
    9250	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
    9251	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
    9252	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
    9253	7b 2a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r2
    9254	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
    9255	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9256	bf a1 00 00 00 00 00 00	r1 = r10
    9257	07 01 00 00 60 ff ff ff	r1 += -0xa0
    9258	bf a2 00 00 00 00 00 00	r2 = r10
    9259	07 02 00 00 88 ff ff ff	r2 += -0x78
    9260	85 10 00 00 f1 0a 00 00	call 0xaf1 ; <solana_program::pubkey::Pubkey::new_from_array>
    9261	79 a1 64 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9c)
    9262	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    9263	79 a1 6c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x94)
    9264	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    9265	79 a1 74 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8c)
    9266	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    9267	61 a1 7c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x84)
    9268	63 1a 50 ff 00 00 00 00	*(u32 *)(r10 - 0xb0) = r1
    9269	b7 04 00 00 01 00 00 00	r4 = 0x1
    9270	61 a5 60 ff 00 00 00 00	r5 = *(u32 *)(r10 - 0xa0)

00000000000121b8 <LBB20_11>
    9271	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    9272	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    9273	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    9274	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    9275	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    9276	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    9277	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    9278	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    9279	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    9280	61 a1 50 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0xb0)
    9281	63 1a 30 ff 00 00 00 00	*(u32 *)(r10 - 0xd0) = r1
    9282	63 1a 10 ff 00 00 00 00	*(u32 *)(r10 - 0xf0) = r1
    9283	71 79 6c 00 00 00 00 00	r9 = *(u8 *)(r7 + 0x6c)
    9284	b7 01 00 00 03 00 00 00	r1 = 0x3
    9285	2d 91 01 00 00 00 00 00	if r1 > r9 goto +0x1 <LBB20_13>
    9286	05 00 1d 00 00 00 00 00	goto +0x1d <LBB20_36>

0000000000012238 <LBB20_13>
    9287	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    9288	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    9289	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    9290	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    9291	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    9292	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    9293	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    9294	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    9295	79 a1 7e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x82)
    9296	7b 1a 56 ff 00 00 00 00	*(u64 *)(r10 - 0xaa) = r1
    9297	71 71 6d 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x6d)
    9298	15 01 29 00 01 00 00 00	if r1 == 0x1 goto +0x29 <LBB20_18>
    9299	55 01 07 00 00 00 00 00	if r1 != 0x0 goto +0x7 <LBB20_37>
    9300	71 71 6e 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x6e)
    9301	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB20_37>
    9302	71 71 6f 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x6f)
    9303	55 01 03 00 00 00 00 00	if r1 != 0x0 goto +0x3 <LBB20_37>
    9304	b7 00 00 00 00 00 00 00	r0 = 0x0
    9305	71 71 70 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x70)
    9306	15 01 2a 00 00 00 00 00	if r1 == 0x0 goto +0x2a <LBB20_22>

00000000000122d8 <LBB20_37>
    9307	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    9308	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    9309	79 a2 88 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x78)
    9310	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r2
    9311	b7 03 00 00 03 00 00 00	r3 = 0x3
    9312	63 3a 88 ff 00 00 00 00	*(u32 *)(r10 - 0x78) = r3
    9313	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
    9314	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9315	05 00 a4 ff 00 00 00 00	goto -0x5c <LBB20_34>

0000000000012320 <LBB20_36>
    9316	63 1a 90 ff 00 00 00 00	*(u32 *)(r10 - 0x70) = r1
    9317	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    9318	7b 1a 7e ff 00 00 00 00	*(u64 *)(r10 - 0x82) = r1
    9319	79 a1 a2 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5e)
    9320	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    9321	79 a1 9a ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x66)
    9322	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    9323	79 a1 8a ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x76)
    9324	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    9325	79 a1 92 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6e)
    9326	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    9327	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    9328	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    9329	79 a1 7e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x82)
    9330	7b 1a 56 ff 00 00 00 00	*(u64 *)(r10 - 0xaa) = r1
    9331	79 a1 56 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xaa)
    9332	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9333	79 a1 4e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb2)
    9334	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    9335	79 a1 46 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xba)
    9336	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    9337	79 a1 3e ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc2)
    9338	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9339	05 00 8c ff 00 00 00 00	goto -0x74 <LBB20_34>

00000000000123e0 <LBB20_18>
    9340	71 71 6e 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x6e)
    9341	55 01 dd ff 00 00 00 00	if r1 != 0x0 goto -0x23 <LBB20_37>
    9342	71 71 6f 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x6f)
    9343	55 01 db ff 00 00 00 00	if r1 != 0x0 goto -0x25 <LBB20_37>
    9344	71 71 70 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x70)
    9345	55 01 d9 ff 00 00 00 00	if r1 != 0x0 goto -0x27 <LBB20_37>
    9346	b7 00 00 00 01 00 00 00	r0 = 0x1
    9347	79 71 71 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x71)
    9348	7b 1a 40 fe 00 00 00 00	*(u64 *)(r10 - 0x1c0) = r1

0000000000012428 <LBB20_22>
    9349	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    9350	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    9351	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    9352	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    9353	79 71 79 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x79)
    9354	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    9355	71 71 81 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x81)
    9356	15 01 11 00 01 00 00 00	if r1 == 0x1 goto +0x11 <LBB20_27>
    9357	55 01 07 00 00 00 00 00	if r1 != 0x0 goto +0x7 <LBB20_32>
    9358	71 71 82 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x82)
    9359	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB20_32>
    9360	71 71 83 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x83)
    9361	55 01 03 00 00 00 00 00	if r1 != 0x0 goto +0x3 <LBB20_32>
    9362	b7 01 00 00 00 00 00 00	r1 = 0x0
    9363	71 73 84 00 00 00 00 00	r3 = *(u8 *)(r7 + 0x84)
    9364	15 03 2d 00 00 00 00 00	if r3 == 0x0 goto +0x2d <LBB20_31>

00000000000124a8 <LBB20_32>
    9365	61 a1 f8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x8)
    9366	63 1a d8 ff 00 00 00 00	*(u32 *)(r10 - 0x28) = r1
    9367	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
    9368	7b 2a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r2
    9369	79 a3 e8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x18)
    9370	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
    9371	79 a4 e0 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x20)
    9372	7b 4a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r4
    9373	05 00 64 ff 00 00 00 00	goto -0x9c <LBB20_33>

00000000000124f0 <LBB20_27>
    9374	71 71 82 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x82)
    9375	55 01 f5 ff 00 00 00 00	if r1 != 0x0 goto -0xb <LBB20_32>
    9376	71 71 83 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x83)
    9377	55 01 f3 ff 00 00 00 00	if r1 != 0x0 goto -0xd <LBB20_32>
    9378	71 71 84 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x84)
    9379	55 01 f1 ff 00 00 00 00	if r1 != 0x0 goto -0xf <LBB20_32>
    9380	07 07 00 00 85 00 00 00	r7 += 0x85
    9381	79 71 18 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x18)
    9382	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9383	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
    9384	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    9385	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
    9386	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    9387	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
    9388	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9389	bf a1 00 00 00 00 00 00	r1 = r10
    9390	07 01 00 00 60 ff ff ff	r1 += -0xa0
    9391	bf a2 00 00 00 00 00 00	r2 = r10
    9392	07 02 00 00 88 ff ff ff	r2 += -0x78
    9393	7b 4a 38 fe 00 00 00 00	*(u64 *)(r10 - 0x1c8) = r4
    9394	bf 57 00 00 00 00 00 00	r7 = r5
    9395	7b 0a 30 fe 00 00 00 00	*(u64 *)(r10 - 0x1d0) = r0
    9396	85 10 00 00 69 0a 00 00	call 0xa69 ; <solana_program::pubkey::Pubkey::new_from_array>
    9397	79 a0 30 fe 00 00 00 00	r0 = *(u64 *)(r10 - 0x1d0)
    9398	bf 75 00 00 00 00 00 00	r5 = r7
    9399	79 a4 38 fe 00 00 00 00	r4 = *(u64 *)(r10 - 0x1c8)
    9400	79 a1 64 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x9c)
    9401	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
    9402	79 a1 6c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x94)
    9403	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
    9404	79 a1 74 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8c)
    9405	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
    9406	61 a1 7c ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x84)
    9407	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 0x8) = r1
    9408	b7 01 00 00 01 00 00 00	r1 = 0x1
    9409	61 a2 60 ff 00 00 00 00	r2 = *(u32 *)(r10 - 0xa0)

0000000000012610 <LBB20_31>
    9410	61 a3 f8 ff 00 00 00 00	r3 = *(u32 *)(r10 - 0x8)
    9411	63 3a d8 ff 00 00 00 00	*(u32 *)(r10 - 0x28) = r3
    9412	79 a3 f0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x10)
    9413	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
    9414	79 a3 e8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x18)
    9415	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
    9416	79 a3 e0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x20)
    9417	7b 3a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r3
    9418	79 a3 b8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x148)
    9419	7b 3a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r3
    9420	79 a3 c0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x140)
    9421	7b 3a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r3
    9422	79 a3 c8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x138)
    9423	7b 3a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r3
    9424	79 a3 d0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x130)
    9425	7b 3a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r3
    9426	79 a3 f0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x110)
    9427	7b 3a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r3
    9428	79 a3 e8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x118)
    9429	7b 3a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r3
    9430	79 a3 e0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x120)
    9431	7b 3a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r3
    9432	79 a3 d8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x128)
    9433	7b 3a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r3
    9434	61 a3 10 ff 00 00 00 00	r3 = *(u32 *)(r10 - 0xf0)
    9435	63 3a 70 fe 00 00 00 00	*(u32 *)(r10 - 0x190) = r3
    9436	79 a3 08 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xf8)
    9437	7b 3a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r3
    9438	79 a3 00 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x100)
    9439	7b 3a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r3
    9440	79 a3 f8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x108)
    9441	7b 3a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r3
    9442	79 a3 b0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x150)
    9443	7b 36 40 00 00 00 00 00	*(u64 *)(r6 + 0x40) = r3
    9444	79 a3 a8 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x158)
    9445	7b 36 38 00 00 00 00 00	*(u64 *)(r6 + 0x38) = r3
    9446	79 a3 a0 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x160)
    9447	7b 36 30 00 00 00 00 00	*(u64 *)(r6 + 0x30) = r3
    9448	79 a3 98 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x168)
    9449	7b 36 28 00 00 00 00 00	*(u64 *)(r6 + 0x28) = r3
    9450	79 a3 90 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x170)
    9451	7b 36 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r3
    9452	79 a3 88 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x178)
    9453	7b 36 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r3
    9454	79 a3 80 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x180)
    9455	7b 36 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r3
    9456	79 a3 78 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x188)
    9457	7b 36 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r3
    9458	63 56 54 00 00 00 00 00	*(u32 *)(r6 + 0x54) = r5
    9459	63 46 50 00 00 00 00 00	*(u32 *)(r6 + 0x50) = r4
    9460	7b 86 48 00 00 00 00 00	*(u64 *)(r6 + 0x48) = r8
    9461	79 a3 58 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a8)
    9462	7b 36 58 00 00 00 00 00	*(u64 *)(r6 + 0x58) = r3
    9463	79 a3 60 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x1a0)
    9464	7b 36 60 00 00 00 00 00	*(u64 *)(r6 + 0x60) = r3
    9465	79 a3 68 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x198)
    9466	7b 36 68 00 00 00 00 00	*(u64 *)(r6 + 0x68) = r3
    9467	61 a3 70 fe 00 00 00 00	r3 = *(u32 *)(r10 - 0x190)
    9468	63 36 70 00 00 00 00 00	*(u32 *)(r6 + 0x70) = r3
    9469	73 96 74 00 00 00 00 00	*(u8 *)(r6 + 0x74) = r9
    9470	69 a3 55 fe 00 00 00 00	r3 = *(u16 *)(r10 - 0x1ab)
    9471	6b 36 75 00 00 00 00 00	*(u16 *)(r6 + 0x75) = r3
    9472	71 a3 57 fe 00 00 00 00	r3 = *(u8 *)(r10 - 0x1a9)
    9473	73 36 77 00 00 00 00 00	*(u8 *)(r6 + 0x77) = r3
    9474	63 06 78 00 00 00 00 00	*(u32 *)(r6 + 0x78) = r0
    9475	63 16 90 00 00 00 00 00	*(u32 *)(r6 + 0x90) = r1
    9476	63 26 94 00 00 00 00 00	*(u32 *)(r6 + 0x94) = r2
    9477	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    9478	7b 16 88 00 00 00 00 00	*(u64 *)(r6 + 0x88) = r1
    9479	79 a1 40 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c0)
    9480	7b 16 80 00 00 00 00 00	*(u64 *)(r6 + 0x80) = r1
    9481	61 a1 d8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x28)
    9482	63 16 b0 00 00 00 00 00	*(u32 *)(r6 + 0xb0) = r1
    9483	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
    9484	7b 16 a8 00 00 00 00 00	*(u64 *)(r6 + 0xa8) = r1
    9485	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    9486	7b 16 a0 00 00 00 00 00	*(u64 *)(r6 + 0xa0) = r1
    9487	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    9488	7b 16 98 00 00 00 00 00	*(u64 *)(r6 + 0x98) = r1
    9489	b7 01 00 00 00 00 00 00	r1 = 0x0
    9490	05 00 03 ff 00 00 00 00	goto -0xfd <LBB20_35>

0000000000012898 <<spl_token::state::Account as solana_program::program_pack::Pack>::pack_into_slice>
    9491	bf 26 00 00 00 00 00 00	r6 = r2
    9492	bf 17 00 00 00 00 00 00	r7 = r1
    9493	25 03 06 00 a4 00 00 00	if r3 > 0xa4 goto +0x6 <LBB21_2>
    9494	b7 01 00 00 a5 00 00 00	r1 = 0xa5
    9495	bf 32 00 00 00 00 00 00	r2 = r3
    9496	18 03 00 00 c8 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24dc8 ll
    9498	85 10 00 00 27 0c 00 00	call 0xc27 ; <core::slice::index::slice_end_index_len_fail>
    9499	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000128e0 <LBB21_2>
    9500	79 71 80 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x80)
    9501	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    9502	71 79 6c 00 00 00 00 00	r9 = *(u8 *)(r7 + 0x6c)
    9503	79 78 40 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x40)
    9504	bf a1 00 00 00 00 00 00	r1 = r10
    9505	07 01 00 00 f0 ff ff ff	r1 += -0x10
    9506	bf 72 00 00 00 00 00 00	r2 = r7
    9507	85 10 00 00 03 0a 00 00	call 0xa03 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9508	79 a4 f8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x8)
    9509	79 a3 f0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x10)
    9510	bf 61 00 00 00 00 00 00	r1 = r6
    9511	b7 02 00 00 20 00 00 00	r2 = 0x20
    9512	85 10 00 00 90 f9 ff ff	call -0x670 ; <core::slice::<impl [T]>::copy_from_slice>
    9513	bf 72 00 00 00 00 00 00	r2 = r7
    9514	07 02 00 00 20 00 00 00	r2 += 0x20
    9515	bf a1 00 00 00 00 00 00	r1 = r10
    9516	07 01 00 00 e0 ff ff ff	r1 += -0x20
    9517	85 10 00 00 f9 09 00 00	call 0x9f9 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9518	79 a4 e8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x18)
    9519	79 a3 e0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x20)
    9520	bf 61 00 00 00 00 00 00	r1 = r6
    9521	07 01 00 00 20 00 00 00	r1 += 0x20
    9522	b7 02 00 00 20 00 00 00	r2 = 0x20
    9523	85 10 00 00 85 f9 ff ff	call -0x67b ; <core::slice::<impl [T]>::copy_from_slice>
    9524	7b 86 40 00 00 00 00 00	*(u64 *)(r6 + 0x40) = r8
    9525	61 71 48 00 00 00 00 00	r1 = *(u32 *)(r7 + 0x48)
    9526	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB21_4>
    9527	b7 01 00 00 00 00 00 00	r1 = 0x0
    9528	63 16 48 00 00 00 00 00	*(u32 *)(r6 + 0x48) = r1
    9529	05 00 0d 00 00 00 00 00	goto +0xd <LBB21_5>

00000000000129d0 <LBB21_4>
    9530	b7 01 00 00 01 00 00 00	r1 = 0x1
    9531	63 16 48 00 00 00 00 00	*(u32 *)(r6 + 0x48) = r1
    9532	bf 72 00 00 00 00 00 00	r2 = r7
    9533	07 02 00 00 4c 00 00 00	r2 += 0x4c
    9534	bf a1 00 00 00 00 00 00	r1 = r10
    9535	07 01 00 00 d0 ff ff ff	r1 += -0x30
    9536	85 10 00 00 e6 09 00 00	call 0x9e6 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9537	bf 61 00 00 00 00 00 00	r1 = r6
    9538	07 01 00 00 4c 00 00 00	r1 += 0x4c
    9539	79 a4 d8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x28)
    9540	79 a3 d0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x30)
    9541	b7 02 00 00 20 00 00 00	r2 = 0x20
    9542	85 10 00 00 72 f9 ff ff	call -0x68e ; <core::slice::<impl [T]>::copy_from_slice>

0000000000012a38 <LBB21_5>
    9543	73 96 6c 00 00 00 00 00	*(u8 *)(r6 + 0x6c) = r9
    9544	61 71 70 00 00 00 00 00	r1 = *(u32 *)(r7 + 0x70)
    9545	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB21_7>
    9546	b7 01 00 00 00 00 00 00	r1 = 0x0
    9547	63 16 6d 00 00 00 00 00	*(u32 *)(r6 + 0x6d) = r1
    9548	05 00 04 00 00 00 00 00	goto +0x4 <LBB21_8>

0000000000012a68 <LBB21_7>
    9549	b7 01 00 00 01 00 00 00	r1 = 0x1
    9550	63 16 6d 00 00 00 00 00	*(u32 *)(r6 + 0x6d) = r1
    9551	79 71 78 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x78)
    9552	7b 16 71 00 00 00 00 00	*(u64 *)(r6 + 0x71) = r1

0000000000012a88 <LBB21_8>
    9553	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    9554	7b 16 79 00 00 00 00 00	*(u64 *)(r6 + 0x79) = r1
    9555	61 71 88 00 00 00 00 00	r1 = *(u32 *)(r7 + 0x88)
    9556	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB21_10>
    9557	b7 01 00 00 00 00 00 00	r1 = 0x0
    9558	63 16 81 00 00 00 00 00	*(u32 *)(r6 + 0x81) = r1
    9559	05 00 0d 00 00 00 00 00	goto +0xd <LBB21_11>

0000000000012ac0 <LBB21_10>
    9560	b7 01 00 00 01 00 00 00	r1 = 0x1
    9561	63 16 81 00 00 00 00 00	*(u32 *)(r6 + 0x81) = r1
    9562	07 07 00 00 8c 00 00 00	r7 += 0x8c
    9563	bf a1 00 00 00 00 00 00	r1 = r10
    9564	07 01 00 00 c0 ff ff ff	r1 += -0x40
    9565	bf 72 00 00 00 00 00 00	r2 = r7
    9566	85 10 00 00 c8 09 00 00	call 0x9c8 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9567	07 06 00 00 85 00 00 00	r6 += 0x85
    9568	79 a4 c8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x38)
    9569	79 a3 c0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x40)
    9570	bf 61 00 00 00 00 00 00	r1 = r6
    9571	b7 02 00 00 20 00 00 00	r2 = 0x20
    9572	85 10 00 00 54 f9 ff ff	call -0x6ac ; <core::slice::<impl [T]>::copy_from_slice>

0000000000012b28 <LBB21_11>
    9573	95 00 00 00 00 00 00 00	exit

0000000000012b30 <<spl_token::state::Multisig as solana_program::program_pack::Pack>::unpack_from_slice>
    9574	bf 27 00 00 00 00 00 00	r7 = r2
    9575	25 03 06 00 62 01 00 00	if r3 > 0x162 goto +0x6 <LBB24_2>
    9576	b7 01 00 00 63 01 00 00	r1 = 0x163
    9577	bf 32 00 00 00 00 00 00	r2 = r3
    9578	18 03 00 00 e0 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24de0 ll
    9580	85 10 00 00 d5 0b 00 00	call 0xbd5 ; <core::slice::index::slice_end_index_len_fail>
    9581	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000012b70 <LBB24_2>
    9582	b7 03 00 00 00 00 00 00	r3 = 0x0
    9583	71 78 01 00 00 00 00 00	r8 = *(u8 *)(r7 + 0x1)
    9584	71 76 00 00 00 00 00 00	r6 = *(u8 *)(r7 + 0x0)
    9585	71 72 02 00 00 00 00 00	r2 = *(u8 *)(r7 + 0x2)
    9586	b7 09 00 00 00 00 00 00	r9 = 0x0
    9587	15 02 07 00 00 00 00 00	if r2 == 0x0 goto +0x7 <LBB24_6>
    9588	15 02 05 00 01 00 00 00	if r2 == 0x1 goto +0x5 <LBB24_5>
    9589	b7 02 00 00 01 00 00 00	r2 = 0x1
    9590	73 21 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r2
    9591	b7 02 00 00 03 00 00 00	r2 = 0x3
    9592	63 21 08 00 00 00 00 00	*(u32 *)(r1 + 0x8) = r2
    9593	05 00 64 01 00 00 00 00	goto +0x164 <LBB24_13>

0000000000012bd0 <LBB24_5>
    9594	b7 09 00 00 01 00 00 00	r9 = 0x1

0000000000012bd8 <LBB24_6>
    9595	7b 1a a8 fc 00 00 00 00	*(u64 *)(r10 - 0x358) = r1
    9596	07 07 00 00 03 00 00 00	r7 += 0x3
    9597	7b 3a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r3
    9598	7b 3a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r3
    9599	7b 3a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r3
    9600	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
    9601	bf a1 00 00 00 00 00 00	r1 = r10
    9602	07 01 00 00 e0 ff ff ff	r1 += -0x20
    9603	bf a2 00 00 00 00 00 00	r2 = r10
    9604	07 02 00 00 a8 ff ff ff	r2 += -0x58
    9605	85 10 00 00 98 09 00 00	call 0x998 ; <solana_program::pubkey::Pubkey::new_from_array>
    9606	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9607	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    9608	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    9609	7b 1a 88 fe 00 00 00 00	*(u64 *)(r10 - 0x178) = r1
    9610	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9611	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    9612	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    9613	7b 1a 90 fe 00 00 00 00	*(u64 *)(r10 - 0x170) = r1
    9614	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9615	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    9616	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    9617	7b 1a 98 fe 00 00 00 00	*(u64 *)(r10 - 0x168) = r1
    9618	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9619	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    9620	7b 1a 80 fe 00 00 00 00	*(u64 *)(r10 - 0x180) = r1
    9621	7b 1a a0 fe 00 00 00 00	*(u64 *)(r10 - 0x160) = r1
    9622	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9623	7b 1a c0 fe 00 00 00 00	*(u64 *)(r10 - 0x140) = r1
    9624	7b 1a e0 fe 00 00 00 00	*(u64 *)(r10 - 0x120) = r1
    9625	7b 1a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r1
    9626	7b 1a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r1
    9627	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9628	7b 1a b8 fe 00 00 00 00	*(u64 *)(r10 - 0x148) = r1
    9629	7b 1a d8 fe 00 00 00 00	*(u64 *)(r10 - 0x128) = r1
    9630	7b 1a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r1
    9631	7b 1a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r1
    9632	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9633	7b 1a b0 fe 00 00 00 00	*(u64 *)(r10 - 0x150) = r1
    9634	7b 1a d0 fe 00 00 00 00	*(u64 *)(r10 - 0x130) = r1
    9635	7b 1a f0 fe 00 00 00 00	*(u64 *)(r10 - 0x110) = r1
    9636	7b 1a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r1
    9637	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9638	7b 1a a8 fe 00 00 00 00	*(u64 *)(r10 - 0x158) = r1
    9639	7b 1a c8 fe 00 00 00 00	*(u64 *)(r10 - 0x138) = r1
    9640	7b 1a e8 fe 00 00 00 00	*(u64 *)(r10 - 0x118) = r1
    9641	7b 1a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r1
    9642	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9643	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
    9644	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9645	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r1
    9646	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9647	7b 1a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r1
    9648	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9649	7b 1a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r1
    9650	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9651	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
    9652	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9653	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
    9654	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9655	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
    9656	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9657	7b 1a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r1
    9658	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9659	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
    9660	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9661	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
    9662	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9663	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
    9664	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9665	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
    9666	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9667	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
    9668	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9669	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
    9670	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9671	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
    9672	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9673	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
    9674	73 9a e2 fc 00 00 00 00	*(u8 *)(r10 - 0x31e) = r9
    9675	73 8a e1 fc 00 00 00 00	*(u8 *)(r10 - 0x31f) = r8
    9676	73 6a e0 fc 00 00 00 00	*(u8 *)(r10 - 0x320) = r6
    9677	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
    9678	7b 1a 3b fe 00 00 00 00	*(u64 *)(r10 - 0x1c5) = r1
    9679	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
    9680	7b 1a 33 fe 00 00 00 00	*(u64 *)(r10 - 0x1cd) = r1
    9681	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
    9682	7b 1a 2b fe 00 00 00 00	*(u64 *)(r10 - 0x1d5) = r1
    9683	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
    9684	7b 1a 23 fe 00 00 00 00	*(u64 *)(r10 - 0x1dd) = r1
    9685	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
    9686	7b 1a 1b fe 00 00 00 00	*(u64 *)(r10 - 0x1e5) = r1
    9687	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
    9688	7b 1a 13 fe 00 00 00 00	*(u64 *)(r10 - 0x1ed) = r1
    9689	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
    9690	7b 1a 0b fe 00 00 00 00	*(u64 *)(r10 - 0x1f5) = r1
    9691	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
    9692	7b 1a 03 fe 00 00 00 00	*(u64 *)(r10 - 0x1fd) = r1
    9693	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
    9694	7b 1a fb fd 00 00 00 00	*(u64 *)(r10 - 0x205) = r1
    9695	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
    9696	7b 1a f3 fd 00 00 00 00	*(u64 *)(r10 - 0x20d) = r1
    9697	79 a1 50 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb0)
    9698	7b 1a eb fd 00 00 00 00	*(u64 *)(r10 - 0x215) = r1
    9699	79 a1 48 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xb8)
    9700	7b 1a e3 fd 00 00 00 00	*(u64 *)(r10 - 0x21d) = r1
    9701	79 a1 40 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc0)
    9702	7b 1a db fd 00 00 00 00	*(u64 *)(r10 - 0x225) = r1
    9703	79 a1 38 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xc8)
    9704	7b 1a d3 fd 00 00 00 00	*(u64 *)(r10 - 0x22d) = r1
    9705	79 a1 30 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd0)
    9706	7b 1a cb fd 00 00 00 00	*(u64 *)(r10 - 0x235) = r1
    9707	79 a1 28 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xd8)
    9708	7b 1a c3 fd 00 00 00 00	*(u64 *)(r10 - 0x23d) = r1
    9709	79 a1 20 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe0)
    9710	7b 1a bb fd 00 00 00 00	*(u64 *)(r10 - 0x245) = r1
    9711	79 a1 18 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xe8)
    9712	7b 1a b3 fd 00 00 00 00	*(u64 *)(r10 - 0x24d) = r1
    9713	79 a1 10 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf0)
    9714	7b 1a ab fd 00 00 00 00	*(u64 *)(r10 - 0x255) = r1
    9715	79 a1 08 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xf8)
    9716	7b 1a a3 fd 00 00 00 00	*(u64 *)(r10 - 0x25d) = r1
    9717	79 a1 00 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x100)
    9718	7b 1a 9b fd 00 00 00 00	*(u64 *)(r10 - 0x265) = r1
    9719	79 a1 f8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x108)
    9720	7b 1a 93 fd 00 00 00 00	*(u64 *)(r10 - 0x26d) = r1
    9721	79 a1 f0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x110)
    9722	7b 1a 8b fd 00 00 00 00	*(u64 *)(r10 - 0x275) = r1
    9723	79 a1 e8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x118)
    9724	7b 1a 83 fd 00 00 00 00	*(u64 *)(r10 - 0x27d) = r1
    9725	79 a1 e0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x120)
    9726	7b 1a 7b fd 00 00 00 00	*(u64 *)(r10 - 0x285) = r1
    9727	79 a1 d8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x128)
    9728	7b 1a 73 fd 00 00 00 00	*(u64 *)(r10 - 0x28d) = r1
    9729	79 a1 d0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x130)
    9730	7b 1a 6b fd 00 00 00 00	*(u64 *)(r10 - 0x295) = r1
    9731	79 a1 c8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x138)
    9732	7b 1a 63 fd 00 00 00 00	*(u64 *)(r10 - 0x29d) = r1
    9733	79 a1 c0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x140)
    9734	7b 1a 5b fd 00 00 00 00	*(u64 *)(r10 - 0x2a5) = r1
    9735	79 a1 b8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x148)
    9736	7b 1a 53 fd 00 00 00 00	*(u64 *)(r10 - 0x2ad) = r1
    9737	79 a1 b0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x150)
    9738	7b 1a 4b fd 00 00 00 00	*(u64 *)(r10 - 0x2b5) = r1
    9739	79 a1 a8 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x158)
    9740	7b 1a 43 fd 00 00 00 00	*(u64 *)(r10 - 0x2bd) = r1
    9741	79 a1 a0 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x160)
    9742	7b 1a 3b fd 00 00 00 00	*(u64 *)(r10 - 0x2c5) = r1
    9743	79 a1 98 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x168)
    9744	7b 1a 33 fd 00 00 00 00	*(u64 *)(r10 - 0x2cd) = r1
    9745	79 a1 90 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x170)
    9746	7b 1a 2b fd 00 00 00 00	*(u64 *)(r10 - 0x2d5) = r1
    9747	79 a1 88 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x178)
    9748	7b 1a 23 fd 00 00 00 00	*(u64 *)(r10 - 0x2dd) = r1
    9749	79 a1 80 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x180)
    9750	7b 1a 1b fd 00 00 00 00	*(u64 *)(r10 - 0x2e5) = r1
    9751	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    9752	7b 1a 13 fd 00 00 00 00	*(u64 *)(r10 - 0x2ed) = r1
    9753	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    9754	7b 1a 0b fd 00 00 00 00	*(u64 *)(r10 - 0x2f5) = r1
    9755	79 a1 68 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x198)
    9756	7b 1a 03 fd 00 00 00 00	*(u64 *)(r10 - 0x2fd) = r1
    9757	79 a1 60 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a0)
    9758	7b 1a fb fc 00 00 00 00	*(u64 *)(r10 - 0x305) = r1
    9759	79 a1 58 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1a8)
    9760	7b 1a f3 fc 00 00 00 00	*(u64 *)(r10 - 0x30d) = r1
    9761	79 a1 50 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b0)
    9762	7b 1a eb fc 00 00 00 00	*(u64 *)(r10 - 0x315) = r1
    9763	79 a1 48 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1b8)
    9764	7b 1a e3 fc 00 00 00 00	*(u64 *)(r10 - 0x31d) = r1
    9765	b7 01 00 00 20 00 00 00	r1 = 0x20
    9766	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
    9767	b7 01 00 00 60 01 00 00	r1 = 0x160
    9768	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
    9769	7b 7a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r7
    9770	bf a1 00 00 00 00 00 00	r1 = r10
    9771	07 01 00 00 d0 fc ff ff	r1 += -0x330
    9772	bf a2 00 00 00 00 00 00	r2 = r10
    9773	07 02 00 00 e3 fc ff ff	r2 += -0x31d
    9774	bf a3 00 00 00 00 00 00	r3 = r10
    9775	07 03 00 00 43 fe ff ff	r3 += -0x1bd
    9776	85 10 00 00 94 05 00 00	call 0x594 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    9777	79 a4 d8 fc 00 00 00 00	r4 = *(u64 *)(r10 - 0x328)
    9778	79 a3 d0 fc 00 00 00 00	r3 = *(u64 *)(r10 - 0x330)
    9779	bf a6 00 00 00 00 00 00	r6 = r10
    9780	07 06 00 00 48 fe ff ff	r6 += -0x1b8
    9781	bf a2 00 00 00 00 00 00	r2 = r10
    9782	07 02 00 00 a8 ff ff ff	r2 += -0x58
    9783	bf 61 00 00 00 00 00 00	r1 = r6
    9784	85 10 00 00 63 03 00 00	call 0x363 ; <core::iter::adapters::zip::Zip<A,B>::new>
    9785	bf a1 00 00 00 00 00 00	r1 = r10
    9786	07 01 00 00 a8 ff ff ff	r1 += -0x58
    9787	bf 62 00 00 00 00 00 00	r2 = r6
    9788	85 10 00 00 f2 03 00 00	call 0x3f2 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    9789	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
    9790	7b 1a 68 fe 00 00 00 00	*(u64 *)(r10 - 0x198) = r1
    9791	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
    9792	7b 1a 60 fe 00 00 00 00	*(u64 *)(r10 - 0x1a0) = r1
    9793	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
    9794	7b 1a 58 fe 00 00 00 00	*(u64 *)(r10 - 0x1a8) = r1
    9795	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
    9796	7b 1a 50 fe 00 00 00 00	*(u64 *)(r10 - 0x1b0) = r1
    9797	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
    9798	7b 1a 48 fe 00 00 00 00	*(u64 *)(r10 - 0x1b8) = r1
    9799	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
    9800	7b 1a 78 fe 00 00 00 00	*(u64 *)(r10 - 0x188) = r1
    9801	79 a8 d0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x30)
    9802	7b 8a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r8
    9803	2d 81 11 00 00 00 00 00	if r1 > r8 goto +0x11 <LBB24_10>

0000000000013260 <LBB24_7>
    9804	85 10 00 00 21 05 00 00	call 0x521 ; <<core::slice::iter::Chunks<T> as core::iter::adapters::zip::TrustedRandomAccess>::may_have_side_effect>
    9805	15 00 33 00 00 00 00 00	if r0 == 0x0 goto +0x33 <LBB24_12>
    9806	79 a6 70 fe 00 00 00 00	r6 = *(u64 *)(r10 - 0x190)
    9807	bf a1 00 00 00 00 00 00	r1 = r10
    9808	07 01 00 00 48 fe ff ff	r1 += -0x1b8
    9809	85 10 00 00 20 05 00 00	call 0x520 ; <core::iter::adapters::zip::TrustedRandomAccess::size>
    9810	3d 06 2e 00 00 00 00 00	if r6 >= r0 goto +0x2e <LBB24_12>
    9811	79 a3 70 fe 00 00 00 00	r3 = *(u64 *)(r10 - 0x190)
    9812	bf a1 00 00 00 00 00 00	r1 = r10
    9813	07 01 00 00 b0 fc ff ff	r1 += -0x350
    9814	bf a2 00 00 00 00 00 00	r2 = r10
    9815	07 02 00 00 48 fe ff ff	r2 += -0x1b8
    9816	85 10 00 00 6f 05 00 00	call 0x56f ; <<core::slice::iter::Chunks<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked>
    9817	79 a1 70 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x190)
    9818	07 01 00 00 01 00 00 00	r1 += 0x1
    9819	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    9820	05 00 24 00 00 00 00 00	goto +0x24 <LBB24_12>

00000000000132e8 <LBB24_10>
    9821	bf a7 00 00 00 00 00 00	r7 = r10
    9822	07 07 00 00 60 fe ff ff	r7 += -0x1a0
    9823	05 00 11 00 00 00 00 00	goto +0x11 <LBB24_11>

0000000000013300 <LBB24_14>
    9824	bf a1 00 00 00 00 00 00	r1 = r10
    9825	07 01 00 00 e0 ff ff ff	r1 += -0x20
    9826	bf 62 00 00 00 00 00 00	r2 = r6
    9827	bf 93 00 00 00 00 00 00	r3 = r9
    9828	85 10 00 00 9f 08 00 00	call 0x89f ; <solana_program::pubkey::Pubkey::new>
    9829	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
    9830	7b 18 18 00 00 00 00 00	*(u64 *)(r8 + 0x18) = r1
    9831	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
    9832	7b 18 10 00 00 00 00 00	*(u64 *)(r8 + 0x10) = r1
    9833	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
    9834	7b 18 08 00 00 00 00 00	*(u64 *)(r8 + 0x8) = r1
    9835	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
    9836	7b 18 00 00 00 00 00 00	*(u64 *)(r8 + 0x0) = r1
    9837	79 a8 70 fe 00 00 00 00	r8 = *(u64 *)(r10 - 0x190)
    9838	79 a1 78 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x188)
    9839	2d 81 01 00 00 00 00 00	if r1 > r8 goto +0x1 <LBB24_11>
    9840	05 00 db ff 00 00 00 00	goto -0x25 <LBB24_7>

0000000000013388 <LBB24_11>
    9841	bf 81 00 00 00 00 00 00	r1 = r8
    9842	07 01 00 00 01 00 00 00	r1 += 0x1
    9843	7b 1a 70 fe 00 00 00 00	*(u64 *)(r10 - 0x190) = r1
    9844	bf a1 00 00 00 00 00 00	r1 = r10
    9845	07 01 00 00 c0 fc ff ff	r1 += -0x340
    9846	bf a2 00 00 00 00 00 00	r2 = r10
    9847	07 02 00 00 48 fe ff ff	r2 += -0x1b8
    9848	bf 83 00 00 00 00 00 00	r3 = r8
    9849	85 10 00 00 4e 05 00 00	call 0x54e ; <<core::slice::iter::Chunks<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked>
    9850	79 a9 c8 fc 00 00 00 00	r9 = *(u64 *)(r10 - 0x338)
    9851	79 a6 c0 fc 00 00 00 00	r6 = *(u64 *)(r10 - 0x340)
    9852	bf 71 00 00 00 00 00 00	r1 = r7
    9853	bf 82 00 00 00 00 00 00	r2 = r8
    9854	85 10 00 00 5d 05 00 00	call 0x55d ; <<core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked>
    9855	bf 08 00 00 00 00 00 00	r8 = r0
    9856	55 06 df ff 00 00 00 00	if r6 != 0x0 goto -0x21 <LBB24_14>

0000000000013408 <LBB24_12>
    9857	61 a1 3f fe 00 00 00 00	r1 = *(u32 *)(r10 - 0x1c1)
    9858	79 a2 a8 fc 00 00 00 00	r2 = *(u64 *)(r10 - 0x358)
    9859	63 12 60 01 00 00 00 00	*(u32 *)(r2 + 0x160) = r1
    9860	79 a1 38 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1c8)
    9861	7b 12 59 01 00 00 00 00	*(u64 *)(r2 + 0x159) = r1
    9862	79 a1 30 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d0)
    9863	7b 12 51 01 00 00 00 00	*(u64 *)(r2 + 0x151) = r1
    9864	79 a1 28 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1d8)
    9865	7b 12 49 01 00 00 00 00	*(u64 *)(r2 + 0x149) = r1
    9866	79 a1 20 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e0)
    9867	7b 12 41 01 00 00 00 00	*(u64 *)(r2 + 0x141) = r1
    9868	79 a1 18 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1e8)
    9869	7b 12 39 01 00 00 00 00	*(u64 *)(r2 + 0x139) = r1
    9870	79 a1 10 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f0)
    9871	7b 12 31 01 00 00 00 00	*(u64 *)(r2 + 0x131) = r1
    9872	79 a1 08 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f8)
    9873	7b 12 29 01 00 00 00 00	*(u64 *)(r2 + 0x129) = r1
    9874	79 a1 00 fe 00 00 00 00	r1 = *(u64 *)(r10 - 0x200)
    9875	7b 12 21 01 00 00 00 00	*(u64 *)(r2 + 0x121) = r1
    9876	79 a1 f8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x208)
    9877	7b 12 19 01 00 00 00 00	*(u64 *)(r2 + 0x119) = r1
    9878	79 a1 f0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x210)
    9879	7b 12 11 01 00 00 00 00	*(u64 *)(r2 + 0x111) = r1
    9880	79 a1 e8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x218)
    9881	7b 12 09 01 00 00 00 00	*(u64 *)(r2 + 0x109) = r1
    9882	79 a1 e0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x220)
    9883	7b 12 01 01 00 00 00 00	*(u64 *)(r2 + 0x101) = r1
    9884	79 a1 d8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x228)
    9885	7b 12 f9 00 00 00 00 00	*(u64 *)(r2 + 0xf9) = r1
    9886	79 a1 d0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x230)
    9887	7b 12 f1 00 00 00 00 00	*(u64 *)(r2 + 0xf1) = r1
    9888	79 a1 c8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x238)
    9889	7b 12 e9 00 00 00 00 00	*(u64 *)(r2 + 0xe9) = r1
    9890	79 a1 c0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x240)
    9891	7b 12 e1 00 00 00 00 00	*(u64 *)(r2 + 0xe1) = r1
    9892	79 a1 b8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x248)
    9893	7b 12 d9 00 00 00 00 00	*(u64 *)(r2 + 0xd9) = r1
    9894	79 a1 b0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x250)
    9895	7b 12 d1 00 00 00 00 00	*(u64 *)(r2 + 0xd1) = r1
    9896	79 a1 a8 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x258)
    9897	7b 12 c9 00 00 00 00 00	*(u64 *)(r2 + 0xc9) = r1
    9898	79 a1 a0 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x260)
    9899	7b 12 c1 00 00 00 00 00	*(u64 *)(r2 + 0xc1) = r1
    9900	79 a1 98 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x268)
    9901	7b 12 b9 00 00 00 00 00	*(u64 *)(r2 + 0xb9) = r1
    9902	79 a1 90 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x270)
    9903	7b 12 b1 00 00 00 00 00	*(u64 *)(r2 + 0xb1) = r1
    9904	79 a1 88 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x278)
    9905	7b 12 a9 00 00 00 00 00	*(u64 *)(r2 + 0xa9) = r1
    9906	79 a1 80 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x280)
    9907	7b 12 a1 00 00 00 00 00	*(u64 *)(r2 + 0xa1) = r1
    9908	79 a1 78 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x288)
    9909	7b 12 99 00 00 00 00 00	*(u64 *)(r2 + 0x99) = r1
    9910	79 a1 70 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x290)
    9911	7b 12 91 00 00 00 00 00	*(u64 *)(r2 + 0x91) = r1
    9912	79 a1 68 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x298)
    9913	7b 12 89 00 00 00 00 00	*(u64 *)(r2 + 0x89) = r1
    9914	79 a1 60 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a0)
    9915	7b 12 81 00 00 00 00 00	*(u64 *)(r2 + 0x81) = r1
    9916	79 a1 58 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2a8)
    9917	7b 12 79 00 00 00 00 00	*(u64 *)(r2 + 0x79) = r1
    9918	79 a1 50 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b0)
    9919	7b 12 71 00 00 00 00 00	*(u64 *)(r2 + 0x71) = r1
    9920	79 a1 48 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2b8)
    9921	7b 12 69 00 00 00 00 00	*(u64 *)(r2 + 0x69) = r1
    9922	79 a1 40 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c0)
    9923	7b 12 61 00 00 00 00 00	*(u64 *)(r2 + 0x61) = r1
    9924	79 a1 38 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2c8)
    9925	7b 12 59 00 00 00 00 00	*(u64 *)(r2 + 0x59) = r1
    9926	79 a1 30 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d0)
    9927	7b 12 51 00 00 00 00 00	*(u64 *)(r2 + 0x51) = r1
    9928	79 a1 28 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2d8)
    9929	7b 12 49 00 00 00 00 00	*(u64 *)(r2 + 0x49) = r1
    9930	79 a1 20 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e0)
    9931	7b 12 41 00 00 00 00 00	*(u64 *)(r2 + 0x41) = r1
    9932	79 a1 18 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2e8)
    9933	7b 12 39 00 00 00 00 00	*(u64 *)(r2 + 0x39) = r1
    9934	79 a1 10 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f0)
    9935	7b 12 31 00 00 00 00 00	*(u64 *)(r2 + 0x31) = r1
    9936	79 a1 08 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f8)
    9937	7b 12 29 00 00 00 00 00	*(u64 *)(r2 + 0x29) = r1
    9938	79 a1 00 fd 00 00 00 00	r1 = *(u64 *)(r10 - 0x300)
    9939	7b 12 21 00 00 00 00 00	*(u64 *)(r2 + 0x21) = r1
    9940	79 a1 f8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x308)
    9941	7b 12 19 00 00 00 00 00	*(u64 *)(r2 + 0x19) = r1
    9942	79 a1 f0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x310)
    9943	7b 12 11 00 00 00 00 00	*(u64 *)(r2 + 0x11) = r1
    9944	79 a1 e8 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x318)
    9945	7b 12 09 00 00 00 00 00	*(u64 *)(r2 + 0x9) = r1
    9946	79 a1 e0 fc 00 00 00 00	r1 = *(u64 *)(r10 - 0x320)
    9947	7b 12 01 00 00 00 00 00	*(u64 *)(r2 + 0x1) = r1
    9948	b7 01 00 00 00 00 00 00	r1 = 0x0
    9949	73 12 00 00 00 00 00 00	*(u8 *)(r2 + 0x0) = r1

00000000000136f0 <LBB24_13>
    9950	95 00 00 00 00 00 00 00	exit

00000000000136f8 <<spl_token::state::Multisig as solana_program::program_pack::Pack>::pack_into_slice>
    9951	bf 26 00 00 00 00 00 00	r6 = r2
    9952	bf 14 00 00 00 00 00 00	r4 = r1
    9953	25 03 06 00 62 01 00 00	if r3 > 0x162 goto +0x6 <LBB25_2>
    9954	b7 01 00 00 63 01 00 00	r1 = 0x163
    9955	bf 32 00 00 00 00 00 00	r2 = r3
    9956	18 03 00 00 f8 4d 02 00 00 00 00 00 00 00 00 00	r3 = 0x24df8 ll
    9958	85 10 00 00 5b 0a 00 00	call 0xa5b ; <core::slice::index::slice_end_index_len_fail>
    9959	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000013740 <LBB25_2>
    9960	71 41 00 00 00 00 00 00	r1 = *(u8 *)(r4 + 0x0)
    9961	73 16 00 00 00 00 00 00	*(u8 *)(r6 + 0x0) = r1
    9962	71 41 01 00 00 00 00 00	r1 = *(u8 *)(r4 + 0x1)
    9963	73 16 01 00 00 00 00 00	*(u8 *)(r6 + 0x1) = r1
    9964	71 41 02 00 00 00 00 00	r1 = *(u8 *)(r4 + 0x2)
    9965	73 16 02 00 00 00 00 00	*(u8 *)(r6 + 0x2) = r1
    9966	bf 42 00 00 00 00 00 00	r2 = r4
    9967	07 02 00 00 03 00 00 00	r2 += 0x3
    9968	07 04 00 00 63 01 00 00	r4 += 0x163
    9969	bf a7 00 00 00 00 00 00	r7 = r10
    9970	07 07 00 00 e8 ff ff ff	r7 += -0x18
    9971	bf 71 00 00 00 00 00 00	r1 = r7
    9972	bf 43 00 00 00 00 00 00	r3 = r4
    9973	85 10 00 00 97 04 00 00	call 0x497 ; <core::iter::adapters::enumerate::Enumerate<I>::new>
    9974	bf a1 00 00 00 00 00 00	r1 = r10
    9975	07 01 00 00 d0 ff ff ff	r1 += -0x30
    9976	bf 72 00 00 00 00 00 00	r2 = r7
    9977	85 10 00 00 c4 04 00 00	call 0x4c4 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
    9978	79 a8 d8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x28)
    9979	79 a2 d0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x30)
    9980	1d 28 15 00 00 00 00 00	if r8 == r2 goto +0x15 <LBB25_9>
    9981	79 a7 e0 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x20)
    9982	67 07 00 00 05 00 00 00	r7 <<= 0x5
    9983	07 07 00 00 20 00 00 00	r7 += 0x20

0000000000013800 <LBB25_4>
    9984	15 07 13 00 00 00 00 00	if r7 == 0x0 goto +0x13 <LBB25_6>
    9985	25 07 18 00 60 01 00 00	if r7 > 0x160 goto +0x18 <LBB25_7>
    9986	bf 29 00 00 00 00 00 00	r9 = r2
    9987	07 09 00 00 20 00 00 00	r9 += 0x20
    9988	bf a1 00 00 00 00 00 00	r1 = r10
    9989	07 01 00 00 c0 ff ff ff	r1 += -0x40
    9990	85 10 00 00 20 08 00 00	call 0x820 ; <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
    9991	bf 61 00 00 00 00 00 00	r1 = r6
    9992	0f 71 00 00 00 00 00 00	r1 += r7
    9993	07 01 00 00 e3 ff ff ff	r1 += -0x1d
    9994	79 a4 c8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x38)
    9995	79 a3 c0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x40)
    9996	b7 02 00 00 20 00 00 00	r2 = 0x20
    9997	85 10 00 00 ab f7 ff ff	call -0x855 ; <core::slice::<impl [T]>::copy_from_slice>
    9998	07 07 00 00 20 00 00 00	r7 += 0x20
    9999	bf 92 00 00 00 00 00 00	r2 = r9
   10000	1d 98 01 00 00 00 00 00	if r8 == r9 goto +0x1 <LBB25_9>
   10001	05 00 ee ff 00 00 00 00	goto -0x12 <LBB25_4>

0000000000013890 <LBB25_9>
   10002	85 10 00 00 b4 f7 ff ff	call -0x84c ; <<T as core::convert::From<T>>::from>
   10003	95 00 00 00 00 00 00 00	exit

00000000000138a0 <LBB25_6>
   10004	b7 01 00 00 e0 ff ff ff	r1 = -0x20
   10005	bf 72 00 00 00 00 00 00	r2 = r7
   10006	18 03 00 00 10 4e 02 00 00 00 00 00 00 00 00 00	r3 = 0x24e10 ll
   10008	85 10 00 00 45 0a 00 00	call 0xa45 ; <core::slice::index::slice_index_order_fail>
   10009	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000138d0 <LBB25_7>
   10010	bf 71 00 00 00 00 00 00	r1 = r7
   10011	b7 02 00 00 60 01 00 00	r2 = 0x160
   10012	18 03 00 00 10 4e 02 00 00 00 00 00 00 00 00 00	r3 = 0x24e10 ll
   10014	85 10 00 00 23 0a 00 00	call 0xa23 ; <core::slice::index::slice_end_index_len_fail>
   10015	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000013900 <solana_program::decode_error::DecodeError::decode_custom_error_to_enum>
   10016	67 01 00 00 20 00 00 00	r1 <<= 0x20
   10017	77 01 00 00 20 00 00 00	r1 >>= 0x20
   10018	65 01 08 00 08 00 00 00	if r1 s> 0x8 goto +0x8 <LBB0_13>
   10019	65 01 0e 00 03 00 00 00	if r1 s> 0x3 goto +0xe <LBB0_7>
   10020	65 01 2b 00 01 00 00 00	if r1 s> 0x1 goto +0x2b <LBB0_5>
   10021	b7 00 00 00 00 00 00 00	r0 = 0x0
   10022	15 01 43 00 00 00 00 00	if r1 == 0x0 goto +0x43 <LBB0_45>
   10023	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB0_26>
   10024	05 00 40 00 00 00 00 00	goto +0x40 <LBB0_43>

0000000000013948 <LBB0_26>
   10025	b7 00 00 00 01 00 00 00	r0 = 0x1
   10026	05 00 3f 00 00 00 00 00	goto +0x3f <LBB0_45>

0000000000013958 <LBB0_13>
   10027	65 01 0c 00 0d 00 00 00	if r1 s> 0xd goto +0xc <LBB0_20>
   10028	65 01 11 00 0a 00 00 00	if r1 s> 0xa goto +0x11 <LBB0_17>
   10029	15 01 27 00 09 00 00 00	if r1 == 0x9 goto +0x27 <LBB0_34>
   10030	15 01 01 00 0a 00 00 00	if r1 == 0xa goto +0x1 <LBB0_35>
   10031	05 00 39 00 00 00 00 00	goto +0x39 <LBB0_43>

0000000000013980 <LBB0_35>
   10032	b7 00 00 00 0a 00 00 00	r0 = 0xa
   10033	05 00 38 00 00 00 00 00	goto +0x38 <LBB0_45>

0000000000013990 <LBB0_7>
   10034	65 01 11 00 05 00 00 00	if r1 s> 0x5 goto +0x11 <LBB0_10>
   10035	15 01 23 00 04 00 00 00	if r1 == 0x4 goto +0x23 <LBB0_29>
   10036	15 01 01 00 05 00 00 00	if r1 == 0x5 goto +0x1 <LBB0_30>
   10037	05 00 33 00 00 00 00 00	goto +0x33 <LBB0_43>

00000000000139b0 <LBB0_30>
   10038	b7 00 00 00 05 00 00 00	r0 = 0x5
   10039	05 00 32 00 00 00 00 00	goto +0x32 <LBB0_45>

00000000000139c0 <LBB0_20>
   10040	65 01 11 00 0f 00 00 00	if r1 s> 0xf goto +0x11 <LBB0_23>
   10041	15 01 1f 00 0e 00 00 00	if r1 == 0xe goto +0x1f <LBB0_39>
   10042	15 01 01 00 0f 00 00 00	if r1 == 0xf goto +0x1 <LBB0_40>
   10043	05 00 2d 00 00 00 00 00	goto +0x2d <LBB0_43>

00000000000139e0 <LBB0_40>
   10044	b7 00 00 00 0f 00 00 00	r0 = 0xf
   10045	05 00 2c 00 00 00 00 00	goto +0x2c <LBB0_45>

00000000000139f0 <LBB0_17>
   10046	15 01 1c 00 0b 00 00 00	if r1 == 0xb goto +0x1c <LBB0_36>
   10047	15 01 1d 00 0c 00 00 00	if r1 == 0xc goto +0x1d <LBB0_37>
   10048	15 01 01 00 0d 00 00 00	if r1 == 0xd goto +0x1 <LBB0_38>
   10049	05 00 27 00 00 00 00 00	goto +0x27 <LBB0_43>

0000000000013a10 <LBB0_38>
   10050	b7 00 00 00 0d 00 00 00	r0 = 0xd
   10051	05 00 26 00 00 00 00 00	goto +0x26 <LBB0_45>

0000000000013a20 <LBB0_10>
   10052	15 01 1a 00 06 00 00 00	if r1 == 0x6 goto +0x1a <LBB0_31>
   10053	15 01 1b 00 07 00 00 00	if r1 == 0x7 goto +0x1b <LBB0_32>
   10054	15 01 01 00 08 00 00 00	if r1 == 0x8 goto +0x1 <LBB0_33>
   10055	05 00 21 00 00 00 00 00	goto +0x21 <LBB0_43>

0000000000013a40 <LBB0_33>
   10056	b7 00 00 00 08 00 00 00	r0 = 0x8
   10057	05 00 20 00 00 00 00 00	goto +0x20 <LBB0_45>

0000000000013a50 <LBB0_23>
   10058	15 01 18 00 10 00 00 00	if r1 == 0x10 goto +0x18 <LBB0_41>
   10059	15 01 19 00 11 00 00 00	if r1 == 0x11 goto +0x19 <LBB0_42>
   10060	15 01 01 00 12 00 00 00	if r1 == 0x12 goto +0x1 <LBB0_44>
   10061	05 00 1b 00 00 00 00 00	goto +0x1b <LBB0_43>

0000000000013a70 <LBB0_44>
   10062	b7 00 00 00 12 00 00 00	r0 = 0x12
   10063	05 00 1a 00 00 00 00 00	goto +0x1a <LBB0_45>

0000000000013a80 <LBB0_5>
   10064	15 01 16 00 02 00 00 00	if r1 == 0x2 goto +0x16 <LBB0_27>
   10065	15 01 01 00 03 00 00 00	if r1 == 0x3 goto +0x1 <LBB0_28>
   10066	05 00 16 00 00 00 00 00	goto +0x16 <LBB0_43>

0000000000013a98 <LBB0_28>
   10067	b7 00 00 00 03 00 00 00	r0 = 0x3
   10068	05 00 15 00 00 00 00 00	goto +0x15 <LBB0_45>

0000000000013aa8 <LBB0_34>
   10069	b7 00 00 00 09 00 00 00	r0 = 0x9
   10070	05 00 13 00 00 00 00 00	goto +0x13 <LBB0_45>

0000000000013ab8 <LBB0_29>
   10071	b7 00 00 00 04 00 00 00	r0 = 0x4
   10072	05 00 11 00 00 00 00 00	goto +0x11 <LBB0_45>

0000000000013ac8 <LBB0_39>
   10073	b7 00 00 00 0e 00 00 00	r0 = 0xe
   10074	05 00 0f 00 00 00 00 00	goto +0xf <LBB0_45>

0000000000013ad8 <LBB0_36>
   10075	b7 00 00 00 0b 00 00 00	r0 = 0xb
   10076	05 00 0d 00 00 00 00 00	goto +0xd <LBB0_45>

0000000000013ae8 <LBB0_37>
   10077	b7 00 00 00 0c 00 00 00	r0 = 0xc
   10078	05 00 0b 00 00 00 00 00	goto +0xb <LBB0_45>

0000000000013af8 <LBB0_31>
   10079	b7 00 00 00 06 00 00 00	r0 = 0x6
   10080	05 00 09 00 00 00 00 00	goto +0x9 <LBB0_45>

0000000000013b08 <LBB0_32>
   10081	b7 00 00 00 07 00 00 00	r0 = 0x7
   10082	05 00 07 00 00 00 00 00	goto +0x7 <LBB0_45>

0000000000013b18 <LBB0_41>
   10083	b7 00 00 00 10 00 00 00	r0 = 0x10
   10084	05 00 05 00 00 00 00 00	goto +0x5 <LBB0_45>

0000000000013b28 <LBB0_42>
   10085	b7 00 00 00 11 00 00 00	r0 = 0x11
   10086	05 00 03 00 00 00 00 00	goto +0x3 <LBB0_45>

0000000000013b38 <LBB0_27>
   10087	b7 00 00 00 02 00 00 00	r0 = 0x2
   10088	05 00 01 00 00 00 00 00	goto +0x1 <LBB0_45>

0000000000013b48 <LBB0_43>
   10089	b7 00 00 00 13 00 00 00	r0 = 0x13

0000000000013b50 <LBB0_45>
   10090	95 00 00 00 00 00 00 00	exit

0000000000013b58 <<T as core::convert::Into<U>>::into>
   10091	85 10 00 00 59 f8 ff ff	call -0x7a7 ; <spl_token::error::<impl core::convert::From<spl_token::error::TokenError> for solana_program::program_error::ProgramError>::from>
   10092	95 00 00 00 00 00 00 00	exit

0000000000013b68 <spl_token::processor::<impl solana_program::program_error::PrintProgramError for spl_token::error::TokenError>::print>
   10093	71 11 00 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x0)
   10094	65 01 07 00 08 00 00 00	if r1 s> 0x8 goto +0x7 <LBB2_5>
   10095	65 01 0d 00 03 00 00 00	if r1 s> 0x3 goto +0xd <LBB2_9>
   10096	65 01 2a 00 01 00 00 00	if r1 s> 0x1 goto +0x2a <LBB2_24>
   10097	15 01 2e 00 00 00 00 00	if r1 == 0x0 goto +0x2e <LBB2_26>
   10098	18 01 00 00 77 36 02 00 00 00 00 00 00 00 00 00	r1 = 0x23677 ll
   10100	b7 02 00 00 19 00 00 00	r2 = 0x19
   10101	05 00 54 00 00 00 00 00	goto +0x54 <LBB2_38>

0000000000013bb0 <LBB2_5>
   10102	65 01 0c 00 0d 00 00 00	if r1 s> 0xd goto +0xc <LBB2_12>
   10103	65 01 11 00 0a 00 00 00	if r1 s> 0xa goto +0x11 <LBB2_15>
   10104	15 01 2b 00 09 00 00 00	if r1 == 0x9 goto +0x2b <LBB2_27>
   10105	18 01 00 00 29 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x23529 ll
   10107	b7 02 00 00 31 00 00 00	r2 = 0x31
   10108	05 00 4d 00 00 00 00 00	goto +0x4d <LBB2_38>

0000000000013be8 <LBB2_9>
   10109	65 01 11 00 05 00 00 00	if r1 s> 0x5 goto +0x11 <LBB2_18>
   10110	15 01 48 00 04 00 00 00	if r1 == 0x4 goto +0x48 <LBB2_36>
   10111	18 01 00 00 ef 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x235ef ll
   10113	b7 02 00 00 2e 00 00 00	r2 = 0x2e
   10114	05 00 47 00 00 00 00 00	goto +0x47 <LBB2_38>

0000000000013c18 <LBB2_12>
   10115	65 01 11 00 0f 00 00 00	if r1 s> 0xf goto +0x11 <LBB2_21>
   10116	15 01 23 00 0e 00 00 00	if r1 == 0xe goto +0x23 <LBB2_28>
   10117	18 01 00 00 4f 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x2344f ll
   10119	b7 02 00 00 38 00 00 00	r2 = 0x38
   10120	05 00 41 00 00 00 00 00	goto +0x41 <LBB2_38>

0000000000013c48 <LBB2_15>
   10121	15 01 21 00 0b 00 00 00	if r1 == 0xb goto +0x21 <LBB2_29>
   10122	15 01 24 00 0c 00 00 00	if r1 == 0xc goto +0x24 <LBB2_30>
   10123	18 01 00 00 a2 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x234a2 ll
   10125	b7 02 00 00 2a 00 00 00	r2 = 0x2a
   10126	05 00 3b 00 00 00 00 00	goto +0x3b <LBB2_38>

0000000000013c78 <LBB2_18>
   10127	15 01 23 00 06 00 00 00	if r1 == 0x6 goto +0x23 <LBB2_31>
   10128	15 01 26 00 07 00 00 00	if r1 == 0x7 goto +0x26 <LBB2_32>
   10129	18 01 00 00 77 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x23577 ll
   10131	b7 02 00 00 29 00 00 00	r2 = 0x29
   10132	05 00 35 00 00 00 00 00	goto +0x35 <LBB2_38>

0000000000013ca8 <LBB2_21>
   10133	15 01 25 00 10 00 00 00	if r1 == 0x10 goto +0x25 <LBB2_33>
   10134	15 01 28 00 11 00 00 00	if r1 == 0x11 goto +0x28 <LBB2_34>
   10135	18 01 00 00 da 33 02 00 00 00 00 00 00 00 00 00	r1 = 0x233da ll
   10137	b7 02 00 00 30 00 00 00	r2 = 0x30
   10138	05 00 2f 00 00 00 00 00	goto +0x2f <LBB2_38>

0000000000013cd8 <LBB2_24>
   10139	15 01 27 00 02 00 00 00	if r1 == 0x2 goto +0x27 <LBB2_35>
   10140	18 01 00 00 38 36 02 00 00 00 00 00 00 00 00 00	r1 = 0x23638 ll
   10142	b7 02 00 00 2c 00 00 00	r2 = 0x2c
   10143	05 00 2a 00 00 00 00 00	goto +0x2a <LBB2_38>

0000000000013d00 <LBB2_26>
   10144	18 01 00 00 90 36 02 00 00 00 00 00 00 00 00 00	r1 = 0x23690 ll
   10146	b7 02 00 00 32 00 00 00	r2 = 0x32
   10147	05 00 26 00 00 00 00 00	goto +0x26 <LBB2_38>

0000000000013d20 <LBB2_27>
   10148	18 01 00 00 5a 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x2355a ll
   10150	b7 02 00 00 1d 00 00 00	r2 = 0x1d
   10151	05 00 22 00 00 00 00 00	goto +0x22 <LBB2_38>

0000000000013d40 <LBB2_28>
   10152	18 01 00 00 87 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x23487 ll
   10154	05 00 1e 00 00 00 00 00	goto +0x1e <LBB2_37>

0000000000013d58 <LBB2_29>
   10155	18 01 00 00 e6 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x234e6 ll
   10157	b7 02 00 00 43 00 00 00	r2 = 0x43
   10158	05 00 1b 00 00 00 00 00	goto +0x1b <LBB2_38>

0000000000013d78 <LBB2_30>
   10159	18 01 00 00 cc 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x234cc ll
   10161	b7 02 00 00 1a 00 00 00	r2 = 0x1a
   10162	05 00 17 00 00 00 00 00	goto +0x17 <LBB2_38>

0000000000013d98 <LBB2_31>
   10163	18 01 00 00 c9 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x235c9 ll
   10165	b7 02 00 00 26 00 00 00	r2 = 0x26
   10166	05 00 13 00 00 00 00 00	goto +0x13 <LBB2_38>

0000000000013db8 <LBB2_32>
   10167	18 01 00 00 a0 35 02 00 00 00 00 00 00 00 00 00	r1 = 0x235a0 ll
   10169	b7 02 00 00 29 00 00 00	r2 = 0x29
   10170	05 00 0f 00 00 00 00 00	goto +0xf <LBB2_38>

0000000000013dd8 <LBB2_33>
   10171	18 01 00 00 22 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x23422 ll
   10173	b7 02 00 00 2d 00 00 00	r2 = 0x2d
   10174	05 00 0b 00 00 00 00 00	goto +0xb <LBB2_38>

0000000000013df8 <LBB2_34>
   10175	18 01 00 00 0a 34 02 00 00 00 00 00 00 00 00 00	r1 = 0x2340a ll
   10177	b7 02 00 00 18 00 00 00	r2 = 0x18
   10178	05 00 07 00 00 00 00 00	goto +0x7 <LBB2_38>

0000000000013e18 <LBB2_35>
   10179	18 01 00 00 64 36 02 00 00 00 00 00 00 00 00 00	r1 = 0x23664 ll
   10181	b7 02 00 00 13 00 00 00	r2 = 0x13
   10182	05 00 03 00 00 00 00 00	goto +0x3 <LBB2_38>

0000000000013e38 <LBB2_36>
   10183	18 01 00 00 1d 36 02 00 00 00 00 00 00 00 00 00	r1 = 0x2361d ll

0000000000013e48 <LBB2_37>
   10185	b7 02 00 00 1b 00 00 00	r2 = 0x1b

0000000000013e50 <LBB2_38>
   10186	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
   10187	95 00 00 00 00 00 00 00	exit

0000000000013e60 <core::ptr::drop_in_place>
   10188	95 00 00 00 00 00 00 00	exit

0000000000013e68 <alloc::raw_vec::finish_grow>
   10189	bf 38 00 00 00 00 00 00	r8 = r3
   10190	bf 27 00 00 00 00 00 00	r7 = r2
   10191	bf 16 00 00 00 00 00 00	r6 = r1
   10192	15 08 10 00 00 00 00 00	if r8 == 0x0 goto +0x10 <LBB1_11>
   10193	79 41 00 00 00 00 00 00	r1 = *(u64 *)(r4 + 0x0)
   10194	55 01 06 00 00 00 00 00	if r1 != 0x0 goto +0x6 <LBB1_4>
   10195	15 07 21 00 00 00 00 00	if r7 == 0x0 goto +0x21 <LBB1_9>
   10196	bf 71 00 00 00 00 00 00	r1 = r7
   10197	bf 82 00 00 00 00 00 00	r2 = r8
   10198	85 10 00 00 09 04 00 00	call 0x409 ; <__rust_alloc>
   10199	15 00 18 00 00 00 00 00	if r0 == 0x0 goto +0x18 <LBB1_8>
   10200	05 00 1d 00 00 00 00 00	goto +0x1d <LBB1_10>

0000000000013ec8 <LBB1_4>
   10201	79 42 08 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x8)
   10202	55 02 10 00 00 00 00 00	if r2 != 0x0 goto +0x10 <LBB1_7>
   10203	15 07 19 00 00 00 00 00	if r7 == 0x0 goto +0x19 <LBB1_9>
   10204	bf 71 00 00 00 00 00 00	r1 = r7
   10205	bf 82 00 00 00 00 00 00	r2 = r8
   10206	85 10 00 00 01 04 00 00	call 0x401 ; <__rust_alloc>
   10207	15 00 10 00 00 00 00 00	if r0 == 0x0 goto +0x10 <LBB1_8>
   10208	05 00 15 00 00 00 00 00	goto +0x15 <LBB1_10>

0000000000013f08 <LBB1_11>
   10209	bf a1 00 00 00 00 00 00	r1 = r10
   10210	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10211	bf 72 00 00 00 00 00 00	r2 = r7
   10212	b7 03 00 00 00 00 00 00	r3 = 0x0
   10213	85 10 00 00 be 03 00 00	call 0x3be ; <<T as core::convert::From<T>>::from>
   10214	79 a7 f8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x8)
   10215	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   10216	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   10217	b7 01 00 00 01 00 00 00	r1 = 0x1
   10218	05 00 0d 00 00 00 00 00	goto +0xd <LBB1_12>

0000000000013f58 <LBB1_7>
   10219	bf 83 00 00 00 00 00 00	r3 = r8
   10220	bf 74 00 00 00 00 00 00	r4 = r7
   10221	85 10 00 00 f6 03 00 00	call 0x3f6 ; <__rust_realloc>
   10222	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB1_8>
   10223	05 00 06 00 00 00 00 00	goto +0x6 <LBB1_10>

0000000000013f80 <LBB1_8>
   10224	85 10 00 00 b2 03 00 00	call 0x3b2 ; <bincode::config::Options::with_fixint_encoding>
   10225	7b 76 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r7
   10226	b7 01 00 00 01 00 00 00	r1 = 0x1
   10227	bf 87 00 00 00 00 00 00	r7 = r8
   10228	05 00 03 00 00 00 00 00	goto +0x3 <LBB1_12>

0000000000013fa8 <LBB1_9>
   10229	bf 80 00 00 00 00 00 00	r0 = r8

0000000000013fb0 <LBB1_10>
   10230	7b 06 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r0
   10231	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000013fc0 <LBB1_12>
   10232	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   10233	7b 76 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r7
   10234	95 00 00 00 00 00 00 00	exit

0000000000013fd8 <alloc::raw_vec::RawVec<T,A>::ptr>
   10235	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   10236	95 00 00 00 00 00 00 00	exit

0000000000013fe8 <alloc::raw_vec::RawVec<T,A>::ptr>
   10237	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   10238	95 00 00 00 00 00 00 00	exit

0000000000013ff8 <alloc::raw_vec::RawVec<T,A>::reserve>
   10239	bf 16 00 00 00 00 00 00	r6 = r1
   10240	79 68 08 00 00 00 00 00	r8 = *(u64 *)(r6 + 0x8)
   10241	bf 81 00 00 00 00 00 00	r1 = r8
   10242	1f 21 00 00 00 00 00 00	r1 -= r2
   10243	3d 31 69 00 00 00 00 00	if r1 >= r3 goto +0x69 <LBB6_27>
   10244	bf 27 00 00 00 00 00 00	r7 = r2
   10245	0f 37 00 00 00 00 00 00	r7 += r3
   10246	b7 01 00 00 01 00 00 00	r1 = 0x1
   10247	2d 72 01 00 00 00 00 00	if r2 > r7 goto +0x1 <LBB6_3>
   10248	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000014048 <LBB6_3>
   10249	57 01 00 00 01 00 00 00	r1 &= 0x1
   10250	55 01 63 00 00 00 00 00	if r1 != 0x0 goto +0x63 <LBB6_21>
   10251	bf a1 00 00 00 00 00 00	r1 = r10
   10252	07 01 00 00 c0 ff ff ff	r1 += -0x40
   10253	85 10 00 00 84 03 00 00	call 0x384 ; <core::alloc::layout::size_align>
   10254	67 08 00 00 01 00 00 00	r8 <<= 0x1
   10255	2d 78 01 00 00 00 00 00	if r8 > r7 goto +0x1 <LBB6_6>
   10256	bf 78 00 00 00 00 00 00	r8 = r7

0000000000014088 <LBB6_6>
   10257	7b 6a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r6
   10258	25 08 01 00 08 00 00 00	if r8 > 0x8 goto +0x1 <LBB6_8>
   10259	b7 08 00 00 08 00 00 00	r8 = 0x8

00000000000140a0 <LBB6_8>
   10260	79 a6 c8 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x38)
   10261	bf 69 00 00 00 00 00 00	r9 = r6
   10262	07 09 00 00 ff ff ff ff	r9 += -0x1
   10263	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
   10264	bf 92 00 00 00 00 00 00	r2 = r9
   10265	0f 12 00 00 00 00 00 00	r2 += r1
   10266	bf 67 00 00 00 00 00 00	r7 = r6
   10267	87 07 00 00 00 00 00 00	r7 = -r7
   10268	5f 72 00 00 00 00 00 00	r2 &= r7
   10269	bf a1 00 00 00 00 00 00	r1 = r10
   10270	07 01 00 00 b0 ff ff ff	r1 += -0x50
   10271	b7 03 00 00 00 00 00 00	r3 = 0x0
   10272	bf 84 00 00 00 00 00 00	r4 = r8
   10273	b7 05 00 00 00 00 00 00	r5 = 0x0
   10274	85 10 00 00 29 18 00 00	call 0x1829 ; <__multi3>
   10275	b7 01 00 00 01 00 00 00	r1 = 0x1
   10276	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   10277	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB6_10>
   10278	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000014138 <LBB6_10>
   10279	55 01 04 00 01 00 00 00	if r1 != 0x1 goto +0x4 <LBB6_13>
   10280	85 10 00 00 7a 03 00 00	call 0x37a ; <bincode::config::Options::with_fixint_encoding>

0000000000014148 <LBB6_12>
   10281	85 10 00 00 79 03 00 00	call 0x379 ; <bincode::config::Options::with_fixint_encoding>
   10282	b7 06 00 00 00 00 00 00	r6 = 0x0
   10283	05 00 28 00 00 00 00 00	goto +0x28 <LBB6_17>

0000000000014160 <LBB6_13>
   10284	15 06 fc ff 00 00 00 00	if r6 == 0x0 goto -0x4 <LBB6_12>
   10285	bf 61 00 00 00 00 00 00	r1 = r6
   10286	77 01 00 00 01 00 00 00	r1 >>= 0x1
   10287	18 02 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r2 = 0x5555555555555555 ll
   10289	5f 21 00 00 00 00 00 00	r1 &= r2
   10290	bf 62 00 00 00 00 00 00	r2 = r6
   10291	1f 12 00 00 00 00 00 00	r2 -= r1
   10292	18 01 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r1 = 0x3333333333333333 ll
   10294	bf 23 00 00 00 00 00 00	r3 = r2
   10295	5f 13 00 00 00 00 00 00	r3 &= r1
   10296	77 02 00 00 02 00 00 00	r2 >>= 0x2
   10297	5f 12 00 00 00 00 00 00	r2 &= r1
   10298	0f 23 00 00 00 00 00 00	r3 += r2
   10299	bf 31 00 00 00 00 00 00	r1 = r3
   10300	77 01 00 00 04 00 00 00	r1 >>= 0x4
   10301	0f 13 00 00 00 00 00 00	r3 += r1
   10302	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   10304	5f 13 00 00 00 00 00 00	r3 &= r1
   10305	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   10307	2f 13 00 00 00 00 00 00	r3 *= r1
   10308	77 03 00 00 38 00 00 00	r3 >>= 0x38
   10309	15 03 0b 00 01 00 00 00	if r3 == 0x1 goto +0xb <LBB6_16>
   10310	bf a3 00 00 00 00 00 00	r3 = r10
   10311	07 03 00 00 e8 ff ff ff	r3 += -0x18
   10312	18 01 00 00 11 37 02 00 00 00 00 00 00 00 00 00	r1 = 0x23711 ll
   10314	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   10315	18 04 00 00 40 4e 02 00 00 00 00 00 00 00 00 00	r4 = 0x24e40 ll
   10317	18 05 00 00 28 4e 02 00 00 00 00 00 00 00 00 00	r5 = 0x24e28 ll
   10319	85 10 00 00 89 0d 00 00	call 0xd89 ; <core::result::unwrap_failed>
   10320	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000014288 <LBB6_16>
   10321	79 a8 b0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x50)
   10322	0f 98 00 00 00 00 00 00	r8 += r9
   10323	5f 78 00 00 00 00 00 00	r8 &= r7

00000000000142a0 <LBB6_17>
   10324	79 a9 88 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x78)
   10325	79 97 08 00 00 00 00 00	r7 = *(u64 *)(r9 + 0x8)
   10326	15 07 07 00 00 00 00 00	if r7 == 0x0 goto +0x7 <LBB6_19>
   10327	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
   10328	85 10 00 00 5a 03 00 00	call 0x35a ; <<T as core::convert::Into<U>>::into>
   10329	b7 01 00 00 01 00 00 00	r1 = 0x1
   10330	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   10331	7b 7a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r7
   10332	7b 0a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r0
   10333	05 00 02 00 00 00 00 00	goto +0x2 <LBB6_20>

00000000000142f0 <LBB6_19>
   10334	b7 01 00 00 00 00 00 00	r1 = 0x0
   10335	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1

0000000000014300 <LBB6_20>
   10336	bf a1 00 00 00 00 00 00	r1 = r10
   10337	07 01 00 00 d0 ff ff ff	r1 += -0x30
   10338	bf a4 00 00 00 00 00 00	r4 = r10
   10339	07 04 00 00 e8 ff ff ff	r4 += -0x18
   10340	bf 82 00 00 00 00 00 00	r2 = r8
   10341	bf 63 00 00 00 00 00 00	r3 = r6
   10342	85 10 00 00 66 ff ff ff	call -0x9a ; <alloc::raw_vec::finish_grow>
   10343	79 a3 e0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x20)
   10344	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)
   10345	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
   10346	15 01 0b 00 01 00 00 00	if r1 == 0x1 goto +0xb <LBB6_22>
   10347	7b 39 08 00 00 00 00 00	*(u64 *)(r9 + 0x8) = r3
   10348	7b 29 00 00 00 00 00 00	*(u64 *)(r9 + 0x0) = r2

0000000000014368 <LBB6_27>
   10349	95 00 00 00 00 00 00 00	exit

0000000000014370 <LBB6_21>
   10350	bf a1 00 00 00 00 00 00	r1 = r10
   10351	07 01 00 00 90 ff ff ff	r1 += -0x70
   10352	bf 72 00 00 00 00 00 00	r2 = r7
   10353	b7 03 00 00 00 00 00 00	r3 = 0x0
   10354	85 10 00 00 31 03 00 00	call 0x331 ; <<T as core::convert::From<T>>::from>
   10355	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
   10356	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
   10357	05 00 05 00 00 00 00 00	goto +0x5 <LBB6_23>

00000000000143b0 <LBB6_22>
   10358	bf a1 00 00 00 00 00 00	r1 = r10
   10359	07 01 00 00 a0 ff ff ff	r1 += -0x60
   10360	85 10 00 00 2b 03 00 00	call 0x32b ; <<T as core::convert::From<T>>::from>
   10361	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
   10362	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)

00000000000143d8 <LBB6_23>
   10363	55 02 02 00 00 00 00 00	if r2 != 0x0 goto +0x2 <LBB6_25>
   10364	85 10 00 00 a6 07 00 00	call 0x7a6 ; <alloc::raw_vec::capacity_overflow>
   10365	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000143f0 <LBB6_25>
   10366	85 10 00 00 0a 08 00 00	call 0x80a ; <alloc::alloc::handle_alloc_error>
   10367	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000014400 <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>
   10368	79 16 08 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x8)
   10369	15 06 06 00 00 00 00 00	if r6 == 0x0 goto +0x6 <LBB8_2>
   10370	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   10371	85 10 00 00 2f 03 00 00	call 0x32f ; <<T as core::convert::Into<U>>::into>
   10372	bf 01 00 00 00 00 00 00	r1 = r0
   10373	bf 62 00 00 00 00 00 00	r2 = r6
   10374	b7 03 00 00 01 00 00 00	r3 = 0x1
   10375	85 10 00 00 5a 03 00 00	call 0x35a ; <__rust_dealloc>

0000000000014440 <LBB8_2>
   10376	95 00 00 00 00 00 00 00	exit

0000000000014448 <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>
   10377	79 16 08 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x8)
   10378	15 06 08 00 00 00 00 00	if r6 == 0x0 goto +0x8 <LBB9_3>
   10379	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   10380	85 10 00 00 26 03 00 00	call 0x326 ; <<T as core::convert::Into<U>>::into>
   10381	27 06 00 00 30 00 00 00	r6 *= 0x30
   10382	15 06 04 00 00 00 00 00	if r6 == 0x0 goto +0x4 <LBB9_3>
   10383	bf 01 00 00 00 00 00 00	r1 = r0
   10384	bf 62 00 00 00 00 00 00	r2 = r6
   10385	b7 03 00 00 08 00 00 00	r3 = 0x8
   10386	85 10 00 00 4f 03 00 00	call 0x34f ; <__rust_dealloc>

0000000000014498 <LBB9_3>
   10387	95 00 00 00 00 00 00 00	exit

00000000000144a0 <core::ptr::drop_in_place>
   10388	95 00 00 00 00 00 00 00	exit

00000000000144a8 <bincode::de::Deserializer<R,O>::with_bincode_read>
   10389	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10390	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10391	95 00 00 00 00 00 00 00	exit

00000000000144c0 <<&mut bincode::de::Deserializer<R,O> as serde::de::Deserializer>::deserialize_struct>
   10392	bf 27 00 00 00 00 00 00	r7 = r2
   10393	7b 1a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r1
   10394	79 56 08 f0 00 00 00 00	r6 = *(u64 *)(r5 - 0xff8)
   10395	15 06 13 00 00 00 00 00	if r6 == 0x0 goto +0x13 <LBB2_7>
   10396	bf 71 00 00 00 00 00 00	r1 = r7
   10397	85 10 00 00 d2 02 00 00	call 0x2d2 ; <<bincode::config::WithOtherLimit<O,L> as bincode::config::internal::InternalOptions>::limit>
   10398	b7 01 00 00 00 00 00 00	r1 = 0x0
   10399	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   10400	79 79 08 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x8)
   10401	b7 01 00 00 08 00 00 00	r1 = 0x8
   10402	2d 91 0e 00 00 00 00 00	if r1 > r9 goto +0xe <LBB2_3>
   10403	79 78 00 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x0)
   10404	bf a1 00 00 00 00 00 00	r1 = r10
   10405	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10406	b7 02 00 00 08 00 00 00	r2 = 0x8
   10407	bf 83 00 00 00 00 00 00	r3 = r8
   10408	b7 04 00 00 08 00 00 00	r4 = 0x8
   10409	85 10 00 00 0f f6 ff ff	call -0x9f1 ; <core::slice::<impl [T]>::copy_from_slice>
   10410	07 09 00 00 f8 ff ff ff	r9 += -0x8
   10411	7b 97 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r9
   10412	07 08 00 00 08 00 00 00	r8 += 0x8
   10413	7b 87 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r8
   10414	05 00 0a 00 00 00 00 00	goto +0xa <LBB2_4>

0000000000014578 <LBB2_7>
   10415	b7 01 00 00 00 00 00 00	r1 = 0x0
   10416	05 00 ac 00 00 00 00 00	goto +0xac <LBB2_8>

0000000000014588 <LBB2_3>
   10417	bf a1 00 00 00 00 00 00	r1 = r10
   10418	07 01 00 00 e0 ff ff ff	r1 += -0x20
   10419	b7 02 00 00 11 00 00 00	r2 = 0x11
   10420	85 10 00 00 73 01 00 00	call 0x173 ; <<T as core::convert::Into<U>>::into>
   10421	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   10422	bf 21 00 00 00 00 00 00	r1 = r2
   10423	57 01 00 00 ff 00 00 00	r1 &= 0xff
   10424	55 01 55 00 03 00 00 00	if r1 != 0x3 goto +0x55 <LBB2_6>

00000000000145c8 <LBB2_4>
   10425	bf a1 00 00 00 00 00 00	r1 = r10
   10426	07 01 00 00 c0 ff ff ff	r1 += -0x40
   10427	bf a2 00 00 00 00 00 00	r2 = r10
   10428	07 02 00 00 f0 ff ff ff	r2 += -0x10
   10429	b7 03 00 00 08 00 00 00	r3 = 0x8
   10430	85 10 00 00 f6 02 00 00	call 0x2f6 ; <<T as core::convert::TryInto<U>>::try_into>
   10431	79 a2 c0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x40)
   10432	bf 21 00 00 00 00 00 00	r1 = r2
   10433	57 01 00 00 01 00 00 00	r1 &= 0x1
   10434	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB2_9>

0000000000014618 <LBB2_5>
   10435	bf a3 00 00 00 00 00 00	r3 = r10
   10436	07 03 00 00 f8 ff ff ff	r3 += -0x8
   10437	18 01 00 00 57 37 02 00 00 00 00 00 00 00 00 00	r1 = 0x23757 ll
   10439	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   10440	18 04 00 00 90 4e 02 00 00 00 00 00 00 00 00 00	r4 = 0x24e90 ll
   10442	18 05 00 00 b0 4e 02 00 00 00 00 00 00 00 00 00	r5 = 0x24eb0 ll
   10444	85 10 00 00 0c 0d 00 00	call 0xd0c ; <core::result::unwrap_failed>
   10445	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000014670 <LBB2_9>
   10446	15 06 83 00 01 00 00 00	if r6 == 0x1 goto +0x83 <LBB2_17>
   10447	7b 2a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r2
   10448	71 a1 c8 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x38)
   10449	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
   10450	bf 71 00 00 00 00 00 00	r1 = r7
   10451	85 10 00 00 9c 02 00 00	call 0x29c ; <<bincode::config::WithOtherLimit<O,L> as bincode::config::internal::InternalOptions>::limit>
   10452	b7 01 00 00 00 00 00 00	r1 = 0x0
   10453	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   10454	79 79 08 00 00 00 00 00	r9 = *(u64 *)(r7 + 0x8)
   10455	b7 01 00 00 08 00 00 00	r1 = 0x8
   10456	2d 91 0c 00 00 00 00 00	if r1 > r9 goto +0xc <LBB2_12>
   10457	79 78 00 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x0)
   10458	bf a1 00 00 00 00 00 00	r1 = r10
   10459	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10460	b7 02 00 00 08 00 00 00	r2 = 0x8
   10461	bf 83 00 00 00 00 00 00	r3 = r8
   10462	b7 04 00 00 08 00 00 00	r4 = 0x8
   10463	85 10 00 00 d9 f5 ff ff	call -0xa27 ; <core::slice::<impl [T]>::copy_from_slice>
   10464	07 09 00 00 f8 ff ff ff	r9 += -0x8
   10465	7b 97 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r9
   10466	07 08 00 00 08 00 00 00	r8 += 0x8
   10467	7b 87 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r8
   10468	05 00 08 00 00 00 00 00	goto +0x8 <LBB2_13>

0000000000014728 <LBB2_12>
   10469	bf a1 00 00 00 00 00 00	r1 = r10
   10470	07 01 00 00 b0 ff ff ff	r1 += -0x50
   10471	b7 02 00 00 11 00 00 00	r2 = 0x11
   10472	85 10 00 00 3f 01 00 00	call 0x13f ; <<T as core::convert::Into<U>>::into>
   10473	79 a2 b0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x50)
   10474	bf 21 00 00 00 00 00 00	r1 = r2
   10475	57 01 00 00 ff 00 00 00	r1 &= 0xff
   10476	55 01 50 00 03 00 00 00	if r1 != 0x3 goto +0x50 <LBB2_15>

0000000000014768 <LBB2_13>
   10477	bf a1 00 00 00 00 00 00	r1 = r10
   10478	07 01 00 00 90 ff ff ff	r1 += -0x70
   10479	bf a2 00 00 00 00 00 00	r2 = r10
   10480	07 02 00 00 f0 ff ff ff	r2 += -0x10
   10481	b7 03 00 00 08 00 00 00	r3 = 0x8
   10482	85 10 00 00 c2 02 00 00	call 0x2c2 ; <<T as core::convert::TryInto<U>>::try_into>
   10483	79 a9 90 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x70)
   10484	bf 91 00 00 00 00 00 00	r1 = r9
   10485	57 01 00 00 01 00 00 00	r1 &= 0x1
   10486	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB2_18>
   10487	05 00 cb ff 00 00 00 00	goto -0x35 <LBB2_5>

00000000000147c0 <LBB2_18>
   10488	15 06 63 00 02 00 00 00	if r6 == 0x2 goto +0x63 <LBB2_27>
   10489	71 a1 98 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x68)
   10490	7b 1a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r1
   10491	bf 71 00 00 00 00 00 00	r1 = r7
   10492	85 10 00 00 73 02 00 00	call 0x273 ; <<bincode::config::WithOtherLimit<O,L> as bincode::config::internal::InternalOptions>::limit>
   10493	b7 08 00 00 00 00 00 00	r8 = 0x0
   10494	73 8a f0 ff 00 00 00 00	*(u8 *)(r10 - 0x10) = r8
   10495	79 76 08 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x8)
   10496	15 06 18 00 00 00 00 00	if r6 == 0x0 goto +0x18 <LBB2_21>
   10497	79 78 00 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x0)
   10498	bf a1 00 00 00 00 00 00	r1 = r10
   10499	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10500	b7 02 00 00 01 00 00 00	r2 = 0x1
   10501	bf 83 00 00 00 00 00 00	r3 = r8
   10502	b7 04 00 00 01 00 00 00	r4 = 0x1
   10503	85 10 00 00 b1 f5 ff ff	call -0xa4f ; <core::slice::<impl [T]>::copy_from_slice>
   10504	07 06 00 00 ff ff ff ff	r6 += -0x1
   10505	7b 67 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r6
   10506	07 08 00 00 01 00 00 00	r8 += 0x1
   10507	7b 87 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r8
   10508	71 a8 f0 ff 00 00 00 00	r8 = *(u8 *)(r10 - 0x10)
   10509	05 00 13 00 00 00 00 00	goto +0x13 <LBB2_22>

0000000000014870 <LBB2_6>
   10510	79 a3 e8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x18)
   10511	bf a1 00 00 00 00 00 00	r1 = r10
   10512	07 01 00 00 d0 ff ff ff	r1 += -0x30
   10513	85 10 00 00 11 01 00 00	call 0x111 ; <<T as core::convert::From<T>>::from>
   10514	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)
   10515	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
   10516	85 10 00 00 11 01 00 00	call 0x111 ; <<T as core::convert::Into<U>>::into>
   10517	bf 01 00 00 00 00 00 00	r1 = r0
   10518	85 10 00 00 ae f5 ff ff	call -0xa52 ; <<T as core::convert::From<T>>::from>
   10519	bf 01 00 00 00 00 00 00	r1 = r0
   10520	05 00 0e 00 00 00 00 00	goto +0xe <LBB2_25>

00000000000148c8 <LBB2_21>
   10521	bf a1 00 00 00 00 00 00	r1 = r10
   10522	07 01 00 00 80 ff ff ff	r1 += -0x80
   10523	b7 02 00 00 11 00 00 00	r2 = 0x11
   10524	85 10 00 00 0b 01 00 00	call 0x10b ; <<T as core::convert::Into<U>>::into>
   10525	79 a2 80 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x80)
   10526	bf 21 00 00 00 00 00 00	r1 = r2
   10527	57 01 00 00 ff 00 00 00	r1 &= 0xff
   10528	55 01 25 00 03 00 00 00	if r1 != 0x3 goto +0x25 <LBB2_23>

0000000000014908 <LBB2_22>
   10529	b7 01 00 00 00 00 00 00	r1 = 0x0
   10530	57 08 00 00 ff 00 00 00	r8 &= 0xff
   10531	67 08 00 00 08 00 00 00	r8 <<= 0x8

0000000000014920 <LBB2_24>
   10532	bf 82 00 00 00 00 00 00	r2 = r8
   10533	57 02 00 00 01 00 00 00	r2 &= 0x1
   10534	15 02 05 00 00 00 00 00	if r2 == 0x0 goto +0x5 <LBB2_28>

0000000000014938 <LBB2_25>
   10535	85 10 00 00 9d f5 ff ff	call -0xa63 ; <<T as core::convert::From<T>>::from>

0000000000014940 <LBB2_26>
   10536	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
   10537	7b 01 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r0
   10538	b7 06 00 00 01 00 00 00	r6 = 0x1
   10539	05 00 0f 00 00 00 00 00	goto +0xf <LBB2_29>

0000000000014960 <LBB2_28>
   10540	79 a2 60 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xa0)
   10541	77 02 00 00 08 00 00 00	r2 >>= 0x8
   10542	79 a1 58 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa8)
   10543	67 01 00 00 38 00 00 00	r1 <<= 0x38
   10544	77 09 00 00 08 00 00 00	r9 >>= 0x8
   10545	79 a3 50 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0xb0)
   10546	67 03 00 00 38 00 00 00	r3 <<= 0x38
   10547	4f 12 00 00 00 00 00 00	r2 |= r1
   10548	4f 39 00 00 00 00 00 00	r9 |= r3
   10549	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
   10550	7b 91 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r9
   10551	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   10552	77 08 00 00 08 00 00 00	r8 >>= 0x8
   10553	73 81 18 00 00 00 00 00	*(u8 *)(r1 + 0x18) = r8
   10554	b7 06 00 00 00 00 00 00	r6 = 0x0

00000000000149d8 <LBB2_29>
   10555	7b 61 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r6
   10556	95 00 00 00 00 00 00 00	exit

00000000000149e8 <LBB2_15>
   10557	79 a3 b8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x48)
   10558	bf a1 00 00 00 00 00 00	r1 = r10
   10559	07 01 00 00 a0 ff ff ff	r1 += -0x60
   10560	85 10 00 00 e2 00 00 00	call 0xe2 ; <<T as core::convert::From<T>>::from>
   10561	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
   10562	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
   10563	85 10 00 00 59 06 00 00	call 0x659 ; <bincode::error::<impl core::convert::From<std::io::error::Error> for alloc::boxed::Box<bincode::error::ErrorKind>>::from>
   10564	bf 01 00 00 00 00 00 00	r1 = r0
   10565	05 00 e1 ff 00 00 00 00	goto -0x1f <LBB2_25>

0000000000014a30 <LBB2_23>
   10566	79 a3 88 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x78)
   10567	bf a1 00 00 00 00 00 00	r1 = r10
   10568	07 01 00 00 70 ff ff ff	r1 += -0x90
   10569	85 10 00 00 d9 00 00 00	call 0xd9 ; <<T as core::convert::From<T>>::from>
   10570	79 a2 78 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x88)
   10571	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
   10572	85 10 00 00 d9 00 00 00	call 0xd9 ; <<T as core::convert::Into<U>>::into>
   10573	bf 01 00 00 00 00 00 00	r1 = r0
   10574	85 10 00 00 76 f5 ff ff	call -0xa8a ; <<T as core::convert::From<T>>::from>
   10575	bf 01 00 00 00 00 00 00	r1 = r0
   10576	b7 08 00 00 01 00 00 00	r8 = 0x1
   10577	05 00 d2 ff 00 00 00 00	goto -0x2e <LBB2_24>

0000000000014a90 <LBB2_17>
   10578	b7 06 00 00 01 00 00 00	r6 = 0x1
   10579	b7 01 00 00 01 00 00 00	r1 = 0x1
   10580	18 02 00 00 60 4e 02 00 00 00 00 00 00 00 00 00	r2 = 0x24e60 ll
   10582	18 03 00 00 70 4e 02 00 00 00 00 00 00 00 00 00	r3 = 0x24e70 ll
   10584	85 10 00 00 6f f5 ff ff	call -0xa91 ; <serde::de::Error::invalid_length>
   10585	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
   10586	7b 01 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r0
   10587	05 00 df ff 00 00 00 00	goto -0x21 <LBB2_29>

0000000000014ae0 <LBB2_27>
   10588	b7 01 00 00 02 00 00 00	r1 = 0x2

0000000000014ae8 <LBB2_8>
   10589	18 02 00 00 60 4e 02 00 00 00 00 00 00 00 00 00	r2 = 0x24e60 ll
   10591	18 03 00 00 70 4e 02 00 00 00 00 00 00 00 00 00	r3 = 0x24e70 ll
   10593	85 10 00 00 66 f5 ff ff	call -0xa9a ; <serde::de::Error::invalid_length>
   10594	05 00 c5 ff 00 00 00 00	goto -0x3b <LBB2_26>

0000000000014b18 <solana_program::account_info::next_account_info>
   10595	79 23 00 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x0)
   10596	79 24 08 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x8)
   10597	5d 43 0c 00 00 00 00 00	if r3 != r4 goto +0xc <LBB0_2>
   10598	b7 02 00 00 0a 00 00 00	r2 = 0xa
   10599	63 2a e0 ff 00 00 00 00	*(u32 *)(r10 - 0x20) = r2
   10600	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   10601	7b 21 20 00 00 00 00 00	*(u64 *)(r1 + 0x20) = r2
   10602	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
   10603	7b 21 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r2
   10604	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   10605	7b 21 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r2
   10606	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   10607	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   10608	b7 02 00 00 01 00 00 00	r2 = 0x1
   10609	05 00 07 00 00 00 00 00	goto +0x7 <LBB0_3>

0000000000014b90 <LBB0_2>
   10610	bf 34 00 00 00 00 00 00	r4 = r3
   10611	07 04 00 00 30 00 00 00	r4 += 0x30
   10612	7b 42 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r4
   10613	b7 02 00 00 0a 00 00 00	r2 = 0xa
   10614	63 2a e0 ff 00 00 00 00	*(u32 *)(r10 - 0x20) = r2
   10615	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10616	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000014bc8 <LBB0_3>
   10617	bf a3 00 00 00 00 00 00	r3 = r10
   10618	07 03 00 00 e0 ff ff ff	r3 += -0x20
   10619	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10620	95 00 00 00 00 00 00 00	exit

0000000000014be8 <<&T as core::fmt::Display>::fmt>
   10621	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   10622	85 10 00 00 a3 0d 00 00	call 0xda3 ; <<core::fmt::Arguments as core::fmt::Display>::fmt>
   10623	95 00 00 00 00 00 00 00	exit

0000000000014c00 <core::fmt::ArgumentV1::new>
   10624	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10625	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10626	95 00 00 00 00 00 00 00	exit

0000000000014c18 <core::fmt::ArgumentV1::new>
   10627	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10628	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10629	95 00 00 00 00 00 00 00	exit

0000000000014c30 <core::fmt::Write::write_fmt>
   10630	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   10631	79 21 28 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x28)
   10632	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   10633	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   10634	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   10635	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
   10636	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   10637	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   10638	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   10639	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   10640	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   10641	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   10642	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   10643	bf a1 00 00 00 00 00 00	r1 = r10
   10644	07 01 00 00 c8 ff ff ff	r1 += -0x38
   10645	bf a3 00 00 00 00 00 00	r3 = r10
   10646	07 03 00 00 d0 ff ff ff	r3 += -0x30
   10647	18 02 00 00 c8 4e 02 00 00 00 00 00 00 00 00 00	r2 = 0x24ec8 ll
   10649	85 10 00 00 9c 0d 00 00	call 0xd9c ; <core::fmt::write>
   10650	95 00 00 00 00 00 00 00	exit

0000000000014cd8 <core::ptr::drop_in_place>
   10651	95 00 00 00 00 00 00 00	exit

0000000000014ce0 <core::iter::adapters::zip::Zip<A,B>::new>
   10652	bf 16 00 00 00 00 00 00	r6 = r1
   10653	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   10654	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   10655	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   10656	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   10657	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   10658	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   10659	7b 4a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r4
   10660	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   10661	bf a1 00 00 00 00 00 00	r1 = r10
   10662	07 01 00 00 d8 ff ff ff	r1 += -0x28
   10663	85 10 00 00 ca 01 00 00	call 0x1ca ; <core::iter::adapters::zip::TrustedRandomAccess::size>
   10664	bf 07 00 00 00 00 00 00	r7 = r0
   10665	bf a1 00 00 00 00 00 00	r1 = r10
   10666	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10667	85 10 00 00 dc 01 00 00	call 0x1dc ; <core::iter::adapters::zip::TrustedRandomAccess::size>
   10668	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
   10669	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   10670	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   10671	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   10672	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   10673	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
   10674	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   10675	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
   10676	7b 26 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r2
   10677	7b 16 20 00 00 00 00 00	*(u64 *)(r6 + 0x20) = r1
   10678	b7 01 00 00 00 00 00 00	r1 = 0x0
   10679	7b 16 28 00 00 00 00 00	*(u64 *)(r6 + 0x28) = r1
   10680	2d 07 01 00 00 00 00 00	if r7 > r0 goto +0x1 <LBB10_2>
   10681	bf 70 00 00 00 00 00 00	r0 = r7

0000000000014dd0 <LBB10_2>
   10682	7b 06 30 00 00 00 00 00	*(u64 *)(r6 + 0x30) = r0
   10683	95 00 00 00 00 00 00 00	exit

0000000000014de0 <<&mut W as core::fmt::Write>::write_char>
   10684	bf 27 00 00 00 00 00 00	r7 = r2
   10685	79 16 00 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x0)
   10686	bf 71 00 00 00 00 00 00	r1 = r7
   10687	67 01 00 00 20 00 00 00	r1 <<= 0x20
   10688	77 01 00 00 20 00 00 00	r1 >>= 0x20
   10689	b7 02 00 00 80 00 00 00	r2 = 0x80
   10690	2d 12 17 00 00 00 00 00	if r2 > r1 goto +0x17 <LBB11_7>
   10691	b7 02 00 00 00 00 00 00	r2 = 0x0
   10692	63 2a fc ff 00 00 00 00	*(u32 *)(r10 - 0x4) = r2
   10693	b7 02 00 00 00 08 00 00	r2 = 0x800
   10694	2d 12 22 00 00 00 00 00	if r2 > r1 goto +0x22 <LBB11_3>
   10695	bf 71 00 00 00 00 00 00	r1 = r7
   10696	67 01 00 00 20 00 00 00	r1 <<= 0x20
   10697	77 01 00 00 20 00 00 00	r1 >>= 0x20
   10698	b7 02 00 00 00 00 01 00	r2 = 0x10000
   10699	2d 12 01 00 00 00 00 00	if r2 > r1 goto +0x1 <LBB11_4>
   10700	05 00 25 00 00 00 00 00	goto +0x25 <LBB11_5>

0000000000014e68 <LBB11_4>
   10701	57 07 00 00 3f 00 00 00	r7 &= 0x3f
   10702	47 07 00 00 80 00 00 00	r7 |= 0x80
   10703	73 7a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r7
   10704	bf 12 00 00 00 00 00 00	r2 = r1
   10705	77 02 00 00 0c 00 00 00	r2 >>= 0xc
   10706	47 02 00 00 e0 00 00 00	r2 |= 0xe0
   10707	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   10708	77 01 00 00 06 00 00 00	r1 >>= 0x6
   10709	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   10710	47 01 00 00 80 00 00 00	r1 |= 0x80
   10711	73 1a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r1
   10712	b7 03 00 00 03 00 00 00	r3 = 0x3
   10713	05 00 29 00 00 00 00 00	goto +0x29 <LBB11_6>

0000000000014ed0 <LBB11_7>
   10714	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   10715	79 62 10 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x10)
   10716	5d 12 03 00 00 00 00 00	if r2 != r1 goto +0x3 <LBB11_9>
   10717	bf 61 00 00 00 00 00 00	r1 = r6
   10718	b7 02 00 00 01 00 00 00	r2 = 0x1
   10719	85 10 00 00 84 f4 ff ff	call -0xb7c ; <alloc::vec::Vec<T,A>::reserve>

0000000000014f00 <LBB11_9>
   10720	bf 61 00 00 00 00 00 00	r1 = r6
   10721	85 10 00 00 1b fe ff ff	call -0x1e5 ; <alloc::raw_vec::RawVec<T,A>::ptr>
   10722	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   10723	0f 10 00 00 00 00 00 00	r0 += r1
   10724	73 70 00 00 00 00 00 00	*(u8 *)(r0 + 0x0) = r7
   10725	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   10726	07 01 00 00 01 00 00 00	r1 += 0x1
   10727	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
   10728	05 00 1e 00 00 00 00 00	goto +0x1e <LBB11_10>

0000000000014f48 <LBB11_3>
   10729	bf 71 00 00 00 00 00 00	r1 = r7
   10730	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   10731	47 01 00 00 80 00 00 00	r1 |= 0x80
   10732	73 1a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r1
   10733	77 07 00 00 06 00 00 00	r7 >>= 0x6
   10734	47 07 00 00 c0 00 00 00	r7 |= 0xc0
   10735	73 7a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r7
   10736	b7 03 00 00 02 00 00 00	r3 = 0x2
   10737	05 00 11 00 00 00 00 00	goto +0x11 <LBB11_6>

0000000000014f90 <LBB11_5>
   10738	57 07 00 00 3f 00 00 00	r7 &= 0x3f
   10739	47 07 00 00 80 00 00 00	r7 |= 0x80
   10740	73 7a ff ff 00 00 00 00	*(u8 *)(r10 - 0x1) = r7
   10741	bf 12 00 00 00 00 00 00	r2 = r1
   10742	77 02 00 00 12 00 00 00	r2 >>= 0x12
   10743	47 02 00 00 f0 00 00 00	r2 |= 0xf0
   10744	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   10745	bf 12 00 00 00 00 00 00	r2 = r1
   10746	77 02 00 00 06 00 00 00	r2 >>= 0x6
   10747	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   10748	47 02 00 00 80 00 00 00	r2 |= 0x80
   10749	73 2a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r2
   10750	77 01 00 00 0c 00 00 00	r1 >>= 0xc
   10751	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   10752	47 01 00 00 80 00 00 00	r1 |= 0x80
   10753	73 1a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r1
   10754	b7 03 00 00 04 00 00 00	r3 = 0x4

0000000000015018 <LBB11_6>
   10755	bf a2 00 00 00 00 00 00	r2 = r10
   10756	07 02 00 00 fc ff ff ff	r2 += -0x4
   10757	bf 61 00 00 00 00 00 00	r1 = r6
   10758	85 10 00 00 42 f4 ff ff	call -0xbbe ; <alloc::vec::Vec<T,A>::extend_from_slice>

0000000000015038 <LBB11_10>
   10759	b7 00 00 00 00 00 00 00	r0 = 0x0
   10760	95 00 00 00 00 00 00 00	exit

0000000000015048 <<&mut W as core::fmt::Write>::write_fmt>
   10761	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   10762	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   10763	79 21 28 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x28)
   10764	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   10765	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   10766	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   10767	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
   10768	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   10769	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   10770	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   10771	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   10772	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   10773	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   10774	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   10775	bf a1 00 00 00 00 00 00	r1 = r10
   10776	07 01 00 00 c8 ff ff ff	r1 += -0x38
   10777	bf a3 00 00 00 00 00 00	r3 = r10
   10778	07 03 00 00 d0 ff ff ff	r3 += -0x30
   10779	18 02 00 00 c8 4e 02 00 00 00 00 00 00 00 00 00	r2 = 0x24ec8 ll
   10781	85 10 00 00 18 0d 00 00	call 0xd18 ; <core::fmt::write>
   10782	95 00 00 00 00 00 00 00	exit

00000000000150f8 <<&mut W as core::fmt::Write>::write_str>
   10783	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   10784	85 10 00 00 28 f4 ff ff	call -0xbd8 ; <alloc::vec::Vec<T,A>::extend_from_slice>
   10785	b7 00 00 00 00 00 00 00	r0 = 0x0
   10786	95 00 00 00 00 00 00 00	exit

0000000000015118 <<T as core::convert::From<T>>::from>
   10787	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10788	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10789	95 00 00 00 00 00 00 00	exit

0000000000015130 <<T as core::convert::Into<U>>::into>
   10790	85 10 00 00 76 05 00 00	call 0x576 ; <bincode::error::<impl core::convert::From<std::io::error::Error> for alloc::boxed::Box<bincode::error::ErrorKind>>::from>
   10791	95 00 00 00 00 00 00 00	exit

0000000000015140 <<T as core::convert::Into<U>>::into>
   10792	b7 03 00 00 00 00 00 00	r3 = 0x0
   10793	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10794	57 02 00 00 ff 00 00 00	r2 &= 0xff
   10795	67 02 00 00 08 00 00 00	r2 <<= 0x8
   10796	47 02 00 00 01 00 00 00	r2 |= 0x1
   10797	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10798	95 00 00 00 00 00 00 00	exit

0000000000015178 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
   10799	79 23 30 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x30)
   10800	7b 31 30 00 00 00 00 00	*(u64 *)(r1 + 0x30) = r3
   10801	79 23 28 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x28)
   10802	7b 31 28 00 00 00 00 00	*(u64 *)(r1 + 0x28) = r3
   10803	79 23 20 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x20)
   10804	7b 31 20 00 00 00 00 00	*(u64 *)(r1 + 0x20) = r3
   10805	79 23 18 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x18)
   10806	7b 31 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r3
   10807	79 23 10 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x10)
   10808	7b 31 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r3
   10809	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   10810	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   10811	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   10812	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10813	95 00 00 00 00 00 00 00	exit

00000000000151f0 <spl_token::native_mint::id>
   10814	18 02 00 00 98 a0 f0 00 00 00 00 00 00 00 00 01	r2 = 0x100000000f0a098 ll
   10816	7b 21 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r2
   10817	18 02 00 00 da c4 39 dc 00 00 00 00 1a eb 3b 55	r2 = 0x553beb1adc39c4da ll
   10819	7b 21 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r2
   10820	18 02 00 00 fb 68 7f 63 00 00 00 00 46 18 c0 35	r2 = 0x35c01846637f68fb ll
   10822	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   10823	18 02 00 00 06 9b 88 57 00 00 00 00 fe ab 81 84	r2 = -0x7b7e5401a87764fa ll
   10825	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   10826	95 00 00 00 00 00 00 00	exit

0000000000015258 <entrypoint>
   10827	bf 12 00 00 00 00 00 00	r2 = r1
   10828	bf a1 00 00 00 00 00 00	r1 = r10
   10829	07 01 00 00 90 ff ff ff	r1 += -0x70
   10830	85 10 00 00 72 03 00 00	call 0x372 ; <solana_program::entrypoint::deserialize>
   10831	79 a6 90 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x70)
   10832	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
   10833	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
   10834	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
   10835	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
   10836	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
   10837	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
   10838	79 a7 b8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x48)
   10839	79 a8 b0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x50)
   10840	bf a1 00 00 00 00 00 00	r1 = r10
   10841	07 01 00 00 68 ff ff ff	r1 += -0x98
   10842	bf a2 00 00 00 00 00 00	r2 = r10
   10843	07 02 00 00 78 ff ff ff	r2 += -0x88
   10844	85 10 00 00 1d f4 ff ff	call -0xbe3 ; <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
   10845	79 a4 70 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x90)
   10846	79 a3 68 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x98)
   10847	7b 8a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r8
   10848	7b 7a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r7
   10849	bf a5 00 00 00 00 00 00	r5 = r10
   10850	bf a1 00 00 00 00 00 00	r1 = r10
   10851	07 01 00 00 e0 ff ff ff	r1 += -0x20
   10852	bf 62 00 00 00 00 00 00	r2 = r6
   10853	85 10 00 00 86 ee ff ff	call -0x117a ; <spl_token::processor::Processor::process>
   10854	61 a1 e0 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x20)
   10855	55 01 02 00 10 00 00 00	if r1 != 0x10 goto +0x2 <LBB0_2>
   10856	b7 06 00 00 00 00 00 00	r6 = 0x0
   10857	05 00 23 00 00 00 00 00	goto +0x23 <LBB0_4>

0000000000015350 <LBB0_2>
   10858	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   10859	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   10860	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   10861	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   10862	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   10863	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
   10864	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   10865	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
   10866	bf a1 00 00 00 00 00 00	r1 = r10
   10867	07 01 00 00 90 ff ff ff	r1 += -0x70
   10868	85 10 00 00 d4 f4 ff ff	call -0xb2c ; <<solana_program::program_error::ProgramError as solana_program::program_error::PrintProgramError>::print>
   10869	79 a1 94 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x6c)
   10870	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   10871	79 a1 9c ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x64)
   10872	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   10873	79 a1 a4 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x5c)
   10874	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   10875	61 a1 ac ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x54)
   10876	63 1a d8 ff 00 00 00 00	*(u32 *)(r10 - 0x28) = r1
   10877	b7 06 00 00 00 00 00 00	r6 = 0x0
   10878	61 a1 90 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x70)
   10879	15 01 0d 00 10 00 00 00	if r1 == 0x10 goto +0xd <LBB0_4>
   10880	63 1a 90 ff 00 00 00 00	*(u32 *)(r10 - 0x70) = r1
   10881	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
   10882	7b 1a 94 ff 00 00 00 00	*(u64 *)(r10 - 0x6c) = r1
   10883	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
   10884	7b 1a 9c ff 00 00 00 00	*(u64 *)(r10 - 0x64) = r1
   10885	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
   10886	7b 1a a4 ff 00 00 00 00	*(u64 *)(r10 - 0x5c) = r1
   10887	61 a1 d8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x28)
   10888	63 1a ac ff 00 00 00 00	*(u32 *)(r10 - 0x54) = r1
   10889	bf a1 00 00 00 00 00 00	r1 = r10
   10890	07 01 00 00 90 ff ff ff	r1 += -0x70
   10891	85 10 00 00 2d f5 ff ff	call -0xad3 ; <<T as core::convert::Into<U>>::into>
   10892	bf 06 00 00 00 00 00 00	r6 = r0

0000000000015468 <LBB0_4>
   10893	bf a7 00 00 00 00 00 00	r7 = r10
   10894	07 07 00 00 78 ff ff ff	r7 += -0x88
   10895	bf 71 00 00 00 00 00 00	r1 = r7
   10896	85 10 00 00 d7 f3 ff ff	call -0xc29 ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
   10897	bf 71 00 00 00 00 00 00	r1 = r7
   10898	85 10 00 00 f6 fd ff ff	call -0x20a ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>
   10899	bf 60 00 00 00 00 00 00	r0 = r6
   10900	95 00 00 00 00 00 00 00	exit

00000000000154a8 <__rg_alloc>
   10901	18 03 00 00 00 00 00 00 00 00 00 00 03 00 00 00	r3 = 0x300000000 ll
   10903	79 33 00 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x0)
   10904	18 04 00 00 00 80 00 00 00 00 00 00 03 00 00 00	r4 = 0x300008000 ll
   10906	15 03 01 00 00 00 00 00	if r3 == 0x0 goto +0x1 <LBB1_2>
   10907	bf 34 00 00 00 00 00 00	r4 = r3

00000000000154e0 <LBB1_2>
   10908	bf 43 00 00 00 00 00 00	r3 = r4
   10909	1f 13 00 00 00 00 00 00	r3 -= r1
   10910	b7 00 00 00 00 00 00 00	r0 = 0x0
   10911	b7 05 00 00 01 00 00 00	r5 = 0x1
   10912	2d 43 01 00 00 00 00 00	if r3 > r4 goto +0x1 <LBB1_4>
   10913	b7 05 00 00 00 00 00 00	r5 = 0x0

0000000000015510 <LBB1_4>
   10914	b7 01 00 00 00 00 00 00	r1 = 0x0
   10915	55 05 01 00 00 00 00 00	if r5 != 0x0 goto +0x1 <LBB1_6>
   10916	bf 31 00 00 00 00 00 00	r1 = r3

0000000000015528 <LBB1_6>
   10917	87 02 00 00 00 00 00 00	r2 = -r2
   10918	5f 21 00 00 00 00 00 00	r1 &= r2
   10919	18 02 00 00 08 00 00 00 00 00 00 00 03 00 00 00	r2 = 0x300000008 ll
   10921	2d 12 04 00 00 00 00 00	if r2 > r1 goto +0x4 <LBB1_8>
   10922	18 02 00 00 00 00 00 00 00 00 00 00 03 00 00 00	r2 = 0x300000000 ll
   10924	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0x0) = r1
   10925	bf 10 00 00 00 00 00 00	r0 = r1

0000000000015570 <LBB1_8>
   10926	95 00 00 00 00 00 00 00	exit

0000000000015578 <__rg_dealloc>
   10927	95 00 00 00 00 00 00 00	exit

0000000000015580 <__rg_realloc>
   10928	bf 45 00 00 00 00 00 00	r5 = r4
   10929	bf 34 00 00 00 00 00 00	r4 = r3
   10930	bf 23 00 00 00 00 00 00	r3 = r2
   10931	bf 12 00 00 00 00 00 00	r2 = r1
   10932	18 01 00 00 d8 37 02 00 00 00 00 00 00 00 00 00	r1 = 0x237d8 ll
   10934	85 10 00 00 30 f3 ff ff	call -0xcd0 ; <core::alloc::global::GlobalAlloc::realloc>
   10935	95 00 00 00 00 00 00 00	exit

00000000000155c0 <__rg_alloc_zeroed>
   10936	bf 23 00 00 00 00 00 00	r3 = r2
   10937	bf 12 00 00 00 00 00 00	r2 = r1
   10938	18 01 00 00 d8 37 02 00 00 00 00 00 00 00 00 00	r1 = 0x237d8 ll
   10940	85 10 00 00 0d f3 ff ff	call -0xcf3 ; <core::alloc::global::GlobalAlloc::alloc_zeroed>
   10941	95 00 00 00 00 00 00 00	exit

00000000000155f0 <custom_panic>
   10942	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   10943	bf a1 00 00 00 00 00 00	r1 = r10
   10944	07 01 00 00 90 ff ff ff	r1 += -0x70
   10945	bf a2 00 00 00 00 00 00	r2 = r10
   10946	07 02 00 00 a0 ff ff ff	r2 += -0x60
   10947	18 03 00 00 80 f5 00 00 00 00 00 00 00 00 00 00	r3 = 0xf580 ll
   10949	85 10 00 00 ba fe ff ff	call -0x146 ; <core::fmt::ArgumentV1::new>
   10950	bf a1 00 00 00 00 00 00	r1 = r10
   10951	07 01 00 00 f0 ff ff ff	r1 += -0x10
   10952	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   10953	b7 01 00 00 00 00 00 00	r1 = 0x0
   10954	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   10955	b7 01 00 00 01 00 00 00	r1 = 0x1
   10956	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   10957	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   10958	18 01 00 00 f8 4e 02 00 00 00 00 00 00 00 00 00	r1 = 0x24ef8 ll
   10960	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   10961	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
   10962	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   10963	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
   10964	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   10965	bf a6 00 00 00 00 00 00	r6 = r10
   10966	07 06 00 00 a8 ff ff ff	r6 += -0x58
   10967	bf a2 00 00 00 00 00 00	r2 = r10
   10968	07 02 00 00 c0 ff ff ff	r2 += -0x40
   10969	bf 61 00 00 00 00 00 00	r1 = r6
   10970	85 10 00 00 52 05 00 00	call 0x552 ; <alloc::fmt::format>
   10971	bf a1 00 00 00 00 00 00	r1 = r10
   10972	07 01 00 00 80 ff ff ff	r1 += -0x80
   10973	bf 62 00 00 00 00 00 00	r2 = r6
   10974	85 10 00 00 a3 f3 ff ff	call -0xc5d ; <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
   10975	79 a2 88 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x78)
   10976	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
   10977	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
   10978	bf 61 00 00 00 00 00 00	r1 = r6
   10979	85 10 00 00 94 f3 ff ff	call -0xc6c ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
   10980	bf 61 00 00 00 00 00 00	r1 = r6
   10981	85 10 00 00 9a fd ff ff	call -0x266 ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>
   10982	95 00 00 00 00 00 00 00	exit

0000000000015738 <solana_program::rent::_::<impl serde::de::Deserialize for solana_program::rent::Rent>::deserialize>
   10983	18 03 00 00 08 4f 02 00 00 00 00 00 00 00 00 00	r3 = 0x24f08 ll
   10985	7b 3a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r3
   10986	b7 03 00 00 03 00 00 00	r3 = 0x3
   10987	7b 3a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r3
   10988	bf a5 00 00 00 00 00 00	r5 = r10
   10989	18 03 00 00 f0 37 02 00 00 00 00 00 00 00 00 00	r3 = 0x237f0 ll
   10991	b7 04 00 00 04 00 00 00	r4 = 0x4
   10992	85 10 00 00 a7 fd ff ff	call -0x259 ; <<&mut bincode::de::Deserializer<R,O> as serde::de::Deserializer>::deserialize_struct>
   10993	95 00 00 00 00 00 00 00	exit

0000000000015790 <solana_program::sysvar::Sysvar::from_account_info>
   10994	bf 27 00 00 00 00 00 00	r7 = r2
   10995	bf 16 00 00 00 00 00 00	r6 = r1
   10996	bf 71 00 00 00 00 00 00	r1 = r7
   10997	85 10 00 00 10 01 00 00	call 0x110 ; <solana_program::account_info::AccountInfo::unsigned_key>
   10998	bf 01 00 00 00 00 00 00	r1 = r0
   10999	85 10 00 00 79 04 00 00	call 0x479 ; <solana_program::sysvar::rent::<impl solana_program::sysvar::SysvarId for solana_program::rent::Rent>::check_id>
   11000	15 00 0f 00 00 00 00 00	if r0 == 0x0 goto +0xf <LBB1_14>
   11001	79 78 10 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x10)
   11002	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
   11003	07 02 00 00 01 00 00 00	r2 += 0x1
   11004	65 02 0f 00 00 00 00 00	if r2 s> 0x0 goto +0xf <LBB1_3>
   11005	bf a3 00 00 00 00 00 00	r3 = r10
   11006	07 03 00 00 c0 ff ff ff	r3 += -0x40
   11007	18 01 00 00 8a 38 02 00 00 00 00 00 00 00 00 00	r1 = 0x2388a ll
   11009	b7 02 00 00 18 00 00 00	r2 = 0x18
   11010	18 04 00 00 50 4f 02 00 00 00 00 00 00 00 00 00	r4 = 0x24f50 ll
   11012	18 05 00 00 38 4f 02 00 00 00 00 00 00 00 00 00	r5 = 0x24f38 ll
   11014	85 10 00 00 d2 0a 00 00	call 0xad2 ; <core::result::unwrap_failed>
   11015	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000015840 <LBB1_14>
   11016	b7 01 00 00 01 00 00 00	r1 = 0x1
   11017	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   11018	63 16 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r1
   11019	05 00 52 00 00 00 00 00	goto +0x52 <LBB1_15>

0000000000015860 <LBB1_3>
   11020	bf 87 00 00 00 00 00 00	r7 = r8
   11021	07 07 00 00 10 00 00 00	r7 += 0x10
   11022	bf 71 00 00 00 00 00 00	r1 = r7
   11023	85 10 00 00 92 f4 ff ff	call -0xb6e ; <core::cell::Cell<T>::replace>
   11024	79 82 18 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x18)
   11025	79 83 20 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x20)
   11026	bf a1 00 00 00 00 00 00	r1 = r10
   11027	07 01 00 00 c0 ff ff ff	r1 += -0x40
   11028	85 10 00 00 29 f4 ff ff	call -0xbd7 ; <bincode::deserialize>
   11029	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
   11030	55 01 22 00 01 00 00 00	if r1 != 0x1 goto +0x22 <LBB1_12>
   11031	79 a8 c8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x38)
   11032	71 81 00 00 00 00 00 00	r1 = *(u8 *)(r8 + 0x0)
   11033	bf 12 00 00 00 00 00 00	r2 = r1
   11034	07 02 00 00 ff ff ff ff	r2 += -0x1
   11035	b7 03 00 00 07 00 00 00	r3 = 0x7
   11036	2d 23 2c 00 00 00 00 00	if r3 > r2 goto +0x2c <LBB1_11>
   11037	55 01 25 00 00 00 00 00	if r1 != 0x0 goto +0x25 <LBB1_10>
   11038	71 81 08 00 00 00 00 00	r1 = *(u8 *)(r8 + 0x8)
   11039	b7 02 00 00 02 00 00 00	r2 = 0x2
   11040	2d 12 28 00 00 00 00 00	if r2 > r1 goto +0x28 <LBB1_11>
   11041	79 89 10 00 00 00 00 00	r9 = *(u64 *)(r8 + 0x10)
   11042	79 91 08 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x8)
   11043	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   11044	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
   11045	8d 00 00 00 02 00 00 00	callx r2
   11046	79 91 08 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x8)
   11047	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   11048	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r2
   11049	79 11 08 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x8)
   11050	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   11051	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
   11052	85 10 00 00 86 00 00 00	call 0x86 ; <<T as core::convert::Into<U>>::into>
   11053	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   11054	15 02 03 00 00 00 00 00	if r2 == 0x0 goto +0x3 <LBB1_9>
   11055	bf 01 00 00 00 00 00 00	r1 = r0
   11056	79 a3 b0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x50)
   11057	85 10 00 00 b0 00 00 00	call 0xb0 ; <__rust_dealloc>

0000000000015990 <LBB1_9>
   11058	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
   11059	85 10 00 00 7f 00 00 00	call 0x7f ; <<T as core::convert::Into<U>>::into>
   11060	bf 01 00 00 00 00 00 00	r1 = r0
   11061	b7 02 00 00 18 00 00 00	r2 = 0x18
   11062	b7 03 00 00 08 00 00 00	r3 = 0x8
   11063	85 10 00 00 aa 00 00 00	call 0xaa ; <__rust_dealloc>
   11064	05 00 10 00 00 00 00 00	goto +0x10 <LBB1_11>

00000000000159c8 <LBB1_12>
   11065	bf a1 00 00 00 00 00 00	r1 = r10
   11066	07 01 00 00 c8 ff ff ff	r1 += -0x38
   11067	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   11068	7b 26 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r2
   11069	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
   11070	7b 26 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r2
   11071	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   11072	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   11073	b7 01 00 00 00 00 00 00	r1 = 0x0
   11074	05 00 16 00 00 00 00 00	goto +0x16 <LBB1_13>

0000000000015a18 <LBB1_10>
   11075	bf 89 00 00 00 00 00 00	r9 = r8
   11076	07 09 00 00 08 00 00 00	r9 += 0x8
   11077	bf 91 00 00 00 00 00 00	r1 = r9
   11078	85 10 00 00 31 f3 ff ff	call -0xccf ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
   11079	bf 91 00 00 00 00 00 00	r1 = r9
   11080	85 10 00 00 37 fd ff ff	call -0x2c9 ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>

0000000000015a48 <LBB1_11>
   11081	bf 81 00 00 00 00 00 00	r1 = r8
   11082	85 10 00 00 68 00 00 00	call 0x68 ; <<T as core::convert::Into<U>>::into>
   11083	bf 01 00 00 00 00 00 00	r1 = r0
   11084	b7 02 00 00 20 00 00 00	r2 = 0x20
   11085	b7 03 00 00 08 00 00 00	r3 = 0x8
   11086	85 10 00 00 93 00 00 00	call 0x93 ; <__rust_dealloc>
   11087	b7 01 00 00 01 00 00 00	r1 = 0x1
   11088	63 16 08 00 00 00 00 00	*(u32 *)(r6 + 0x8) = r1
   11089	79 a2 e4 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x1c)
   11090	7b 26 0c 00 00 00 00 00	*(u64 *)(r6 + 0xc) = r2
   11091	79 a2 ec ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x14)
   11092	7b 26 14 00 00 00 00 00	*(u64 *)(r6 + 0x14) = r2
   11093	79 a2 f4 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0xc)
   11094	7b 26 1c 00 00 00 00 00	*(u64 *)(r6 + 0x1c) = r2
   11095	61 a2 fc ff 00 00 00 00	r2 = *(u32 *)(r10 - 0x4)
   11096	63 26 24 00 00 00 00 00	*(u32 *)(r6 + 0x24) = r2

0000000000015ac8 <LBB1_13>
   11097	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   11098	79 72 00 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x0)
   11099	07 02 00 00 ff ff ff ff	r2 += -0x1
   11100	bf 71 00 00 00 00 00 00	r1 = r7
   11101	85 10 00 00 44 f4 ff ff	call -0xbbc ; <core::cell::Cell<T>::replace>

0000000000015af0 <LBB1_15>
   11102	95 00 00 00 00 00 00 00	exit

0000000000015af8 <core::ops::range::RangeInclusive<Idx>::contains>
   11103	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   11104	79 13 00 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x0)
   11105	3d 32 02 00 00 00 00 00	if r2 >= r3 goto +0x2 <LBB2_2>

0000000000015b10 <LBB2_1>
   11106	b7 00 00 00 00 00 00 00	r0 = 0x0
   11107	05 00 08 00 00 00 00 00	goto +0x8 <LBB2_5>

0000000000015b20 <LBB2_2>
   11108	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   11109	71 11 10 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x10)
   11110	55 01 03 00 01 00 00 00	if r1 != 0x1 goto +0x3 <LBB2_4>
   11111	b7 00 00 00 01 00 00 00	r0 = 0x1
   11112	2d 23 03 00 00 00 00 00	if r3 > r2 goto +0x3 <LBB2_5>
   11113	05 00 f8 ff 00 00 00 00	goto -0x8 <LBB2_1>

0000000000015b50 <LBB2_4>
   11114	b7 00 00 00 01 00 00 00	r0 = 0x1
   11115	2d 32 f6 ff 00 00 00 00	if r2 > r3 goto -0xa <LBB2_1>

0000000000015b60 <LBB2_5>
   11116	95 00 00 00 00 00 00 00	exit

0000000000015b68 <core::ptr::drop_in_place>
   11117	95 00 00 00 00 00 00 00	exit

0000000000015b70 <<core::slice::iter::Chunks<T> as core::iter::adapters::zip::TrustedRandomAccess>::may_have_side_effect>
   11118	b7 00 00 00 00 00 00 00	r0 = 0x0
   11119	95 00 00 00 00 00 00 00	exit

0000000000015b80 <<bincode::config::WithOtherLimit<O,L> as bincode::config::internal::InternalOptions>::limit>
   11120	bf 10 00 00 00 00 00 00	r0 = r1
   11121	95 00 00 00 00 00 00 00	exit

0000000000015b90 <core::iter::adapters::zip::TrustedRandomAccess::size>
   11122	b7 00 00 00 00 00 00 00	r0 = 0x0
   11123	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
   11124	15 02 0b 00 00 00 00 00	if r2 == 0x0 goto +0xb <LBB4_5>
   11125	79 11 10 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x10)
   11126	15 01 0a 00 00 00 00 00	if r1 == 0x0 goto +0xa <LBB4_6>
   11127	bf 20 00 00 00 00 00 00	r0 = r2
   11128	3f 10 00 00 00 00 00 00	r0 /= r1
   11129	bf 03 00 00 00 00 00 00	r3 = r0
   11130	2f 13 00 00 00 00 00 00	r3 *= r1
   11131	1f 32 00 00 00 00 00 00	r2 -= r3
   11132	b7 01 00 00 01 00 00 00	r1 = 0x1
   11133	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB4_4>
   11134	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000015bf8 <LBB4_4>
   11135	0f 10 00 00 00 00 00 00	r0 += r1

0000000000015c00 <LBB4_5>
   11136	95 00 00 00 00 00 00 00	exit

0000000000015c08 <LBB4_6>
   11137	18 01 00 00 f0 38 02 00 00 00 00 00 00 00 00 00	r1 = 0x238f0 ll
   11139	b7 02 00 00 19 00 00 00	r2 = 0x19
   11140	18 03 00 00 70 4f 02 00 00 00 00 00 00 00 00 00	r3 = 0x24f70 ll
   11142	85 10 00 00 5d 0b 00 00	call 0xb5d ; <core::panicking::panic>
   11143	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000015c40 <core::iter::adapters::zip::TrustedRandomAccess::size>
   11144	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   11145	79 10 08 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x8)
   11146	1f 20 00 00 00 00 00 00	r0 -= r2
   11147	77 00 00 00 05 00 00 00	r0 >>= 0x5
   11148	95 00 00 00 00 00 00 00	exit

0000000000015c68 <core::iter::adapters::enumerate::Enumerate<I>::new>
   11149	b7 04 00 00 00 00 00 00	r4 = 0x0
   11150	7b 41 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r4
   11151	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11152	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11153	95 00 00 00 00 00 00 00	exit

0000000000015c90 <core::alloc::layout::size_align>
   11154	b7 02 00 00 01 00 00 00	r2 = 0x1
   11155	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   11156	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11157	95 00 00 00 00 00 00 00	exit

0000000000015cb0 <core::slice::iter::Iter<T>::as_slice>
   11158	79 23 00 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x0)
   11159	7b 31 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r3
   11160	79 22 08 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x8)
   11161	1f 32 00 00 00 00 00 00	r2 -= r3
   11162	37 02 00 00 30 00 00 00	r2 /= 0x30
   11163	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   11164	95 00 00 00 00 00 00 00	exit

0000000000015ce8 <core::slice::iter::Iter<T>::as_slice>
   11165	79 23 00 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x0)
   11166	7b 31 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r3
   11167	79 22 08 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x8)
   11168	1f 32 00 00 00 00 00 00	r2 -= r3
   11169	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   11170	95 00 00 00 00 00 00 00	exit

0000000000015d18 <bincode::config::Options::with_fixint_encoding>
   11171	95 00 00 00 00 00 00 00	exit

0000000000015d20 <<T as core::convert::From<T>>::from>
   11172	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11173	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11174	95 00 00 00 00 00 00 00	exit

0000000000015d38 <<T as core::convert::Into<U>>::into>
   11175	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
   11176	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   11177	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   11178	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
   11179	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
   11180	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   11181	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   11182	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   11183	bf a1 00 00 00 00 00 00	r1 = r10
   11184	07 01 00 00 e0 ff ff ff	r1 += -0x20
   11185	85 10 00 00 72 f3 ff ff	call -0xc8e ; <<alloc::boxed::Box<T> as core::convert::From<T>>::from>
   11186	95 00 00 00 00 00 00 00	exit

0000000000015d98 <<T as core::convert::Into<U>>::into>
   11187	bf 10 00 00 00 00 00 00	r0 = r1
   11188	95 00 00 00 00 00 00 00	exit

0000000000015da8 <<T as core::convert::TryInto<U>>::try_into>
   11189	bf 16 00 00 00 00 00 00	r6 = r1
   11190	bf a1 00 00 00 00 00 00	r1 = r10
   11191	07 01 00 00 f0 ff ff ff	r1 += -0x10
   11192	85 10 00 00 ec f3 ff ff	call -0xc14 ; <core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from>
   11193	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   11194	71 a2 f8 ff 00 00 00 00	r2 = *(u8 *)(r10 - 0x8)
   11195	73 26 08 00 00 00 00 00	*(u8 *)(r6 + 0x8) = r2
   11196	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   11197	95 00 00 00 00 00 00 00	exit

0000000000015df0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
   11198	79 23 10 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x10)
   11199	7b 31 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r3
   11200	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   11201	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11202	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   11203	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11204	95 00 00 00 00 00 00 00	exit

0000000000015e28 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
   11205	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11206	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11207	95 00 00 00 00 00 00 00	exit

0000000000015e40 <<core::slice::iter::Chunks<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked>
   11208	79 25 10 00 00 00 00 00	r5 = *(u64 *)(r2 + 0x10)
   11209	bf 54 00 00 00 00 00 00	r4 = r5
   11210	2f 34 00 00 00 00 00 00	r4 *= r3
   11211	bf 40 00 00 00 00 00 00	r0 = r4
   11212	0f 50 00 00 00 00 00 00	r0 += r5
   11213	b7 05 00 00 01 00 00 00	r5 = 0x1
   11214	2d 04 01 00 00 00 00 00	if r4 > r0 goto +0x1 <LBB18_2>
   11215	b7 05 00 00 00 00 00 00	r5 = 0x0

0000000000015e80 <LBB18_2>
   11216	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   11217	bf 36 00 00 00 00 00 00	r6 = r3
   11218	2d 30 01 00 00 00 00 00	if r0 > r3 goto +0x1 <LBB18_4>
   11219	bf 06 00 00 00 00 00 00	r6 = r0

0000000000015ea0 <LBB18_4>
   11220	55 05 01 00 00 00 00 00	if r5 != 0x0 goto +0x1 <LBB18_6>
   11221	bf 63 00 00 00 00 00 00	r3 = r6

0000000000015eb0 <LBB18_6>
   11222	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   11223	0f 42 00 00 00 00 00 00	r2 += r4
   11224	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11225	1f 43 00 00 00 00 00 00	r3 -= r4
   11226	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11227	95 00 00 00 00 00 00 00	exit

0000000000015ee0 <<core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked>
   11228	67 02 00 00 05 00 00 00	r2 <<= 0x5
   11229	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   11230	0f 20 00 00 00 00 00 00	r0 += r2
   11231	95 00 00 00 00 00 00 00	exit

0000000000015f00 <__rust_alloc>
   11232	85 10 00 00 b4 fe ff ff	call -0x14c ; <__rg_alloc>
   11233	95 00 00 00 00 00 00 00	exit

0000000000015f10 <__rust_dealloc>
   11234	85 10 00 00 cc fe ff ff	call -0x134 ; <__rg_dealloc>
   11235	95 00 00 00 00 00 00 00	exit

0000000000015f20 <__rust_realloc>
   11236	85 10 00 00 cb fe ff ff	call -0x135 ; <__rg_realloc>
   11237	95 00 00 00 00 00 00 00	exit

0000000000015f30 <__rust_alloc_zeroed>
   11238	85 10 00 00 d1 fe ff ff	call -0x12f ; <__rg_alloc_zeroed>
   11239	95 00 00 00 00 00 00 00	exit

0000000000015f40 <__rust_alloc_error_handler>
   11240	85 10 00 00 42 04 00 00	call 0x442 ; <__rg_oom>
   11241	95 00 00 00 00 00 00 00	exit

0000000000015f50 <core::ptr::drop_in_place>
   11242	95 00 00 00 00 00 00 00	exit

0000000000015f58 <core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from>
   11243	b7 04 00 00 01 00 00 00	r4 = 0x1
   11244	55 03 09 00 20 00 00 00	if r3 != 0x20 goto +0x9 <LBB22_2>
   11245	79 23 18 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x18)
   11246	7b 31 19 00 00 00 00 00	*(u64 *)(r1 + 0x19) = r3
   11247	79 23 10 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x10)
   11248	7b 31 11 00 00 00 00 00	*(u64 *)(r1 + 0x11) = r3
   11249	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   11250	7b 31 09 00 00 00 00 00	*(u64 *)(r1 + 0x9) = r3
   11251	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   11252	7b 21 01 00 00 00 00 00	*(u64 *)(r1 + 0x1) = r2
   11253	b7 04 00 00 00 00 00 00	r4 = 0x0

0000000000015fb0 <LBB22_2>
   11254	73 41 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r4
   11255	95 00 00 00 00 00 00 00	exit

0000000000015fc0 <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
   11256	bf 25 00 00 00 00 00 00	r5 = r2
   11257	b7 00 00 00 00 00 00 00	r0 = 0x0
   11258	5d 45 09 00 00 00 00 00	if r5 != r4 goto +0x9 <LBB24_4>
   11259	b7 00 00 00 01 00 00 00	r0 = 0x1
   11260	1d 31 07 00 00 00 00 00	if r1 == r3 goto +0x7 <LBB24_4>
   11261	bf 32 00 00 00 00 00 00	r2 = r3
   11262	bf 53 00 00 00 00 00 00	r3 = r5
   11263	85 10 00 00 91 11 00 00	call 0x1191 ; <memcmp>
   11264	bf 01 00 00 00 00 00 00	r1 = r0
   11265	b7 00 00 00 01 00 00 00	r0 = 0x1
   11266	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB24_4>
   11267	b7 00 00 00 00 00 00 00	r0 = 0x0

0000000000016020 <LBB24_4>
   11268	57 00 00 00 01 00 00 00	r0 &= 0x1
   11269	95 00 00 00 00 00 00 00	exit

0000000000016030 <solana_program::account_info::AccountInfo::unsigned_key>
   11270	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   11271	95 00 00 00 00 00 00 00	exit

0000000000016040 <solana_program::account_info::AccountInfo::lamports>
   11272	79 18 08 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x8)
   11273	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
   11274	07 02 00 00 01 00 00 00	r2 += 0x1
   11275	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB32_2>
   11276	bf a3 00 00 00 00 00 00	r3 = r10
   11277	07 03 00 00 f8 ff ff ff	r3 += -0x8
   11278	18 01 00 00 09 39 02 00 00 00 00 00 00 00 00 00	r1 = 0x23909 ll
   11280	b7 02 00 00 18 00 00 00	r2 = 0x18
   11281	18 04 00 00 88 4f 02 00 00 00 00 00 00 00 00 00	r4 = 0x24f88 ll
   11283	18 05 00 00 a8 4f 02 00 00 00 00 00 00 00 00 00	r5 = 0x24fa8 ll
   11285	85 10 00 00 c3 09 00 00	call 0x9c3 ; <core::result::unwrap_failed>
   11286	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000160b8 <LBB32_2>
   11287	bf 86 00 00 00 00 00 00	r6 = r8
   11288	07 06 00 00 10 00 00 00	r6 += 0x10
   11289	bf 61 00 00 00 00 00 00	r1 = r6
   11290	85 10 00 00 df 02 00 00	call 0x2df ; <core::cell::Cell<T>::replace>
   11291	79 81 18 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x18)
   11292	79 17 00 00 00 00 00 00	r7 = *(u64 *)(r1 + 0x0)
   11293	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
   11294	07 02 00 00 ff ff ff ff	r2 += -0x1
   11295	bf 61 00 00 00 00 00 00	r1 = r6
   11296	85 10 00 00 d9 02 00 00	call 0x2d9 ; <core::cell::Cell<T>::replace>
   11297	bf 70 00 00 00 00 00 00	r0 = r7
   11298	95 00 00 00 00 00 00 00	exit

0000000000016118 <solana_program::account_info::AccountInfo::data_len>
   11299	79 18 10 00 00 00 00 00	r8 = *(u64 *)(r1 + 0x10)
   11300	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
   11301	07 02 00 00 01 00 00 00	r2 += 0x1
   11302	65 02 0b 00 00 00 00 00	if r2 s> 0x0 goto +0xb <LBB34_2>
   11303	bf a3 00 00 00 00 00 00	r3 = r10
   11304	07 03 00 00 f8 ff ff ff	r3 += -0x8
   11305	18 01 00 00 09 39 02 00 00 00 00 00 00 00 00 00	r1 = 0x23909 ll
   11307	b7 02 00 00 18 00 00 00	r2 = 0x18
   11308	18 04 00 00 88 4f 02 00 00 00 00 00 00 00 00 00	r4 = 0x24f88 ll
   11310	18 05 00 00 c0 4f 02 00 00 00 00 00 00 00 00 00	r5 = 0x24fc0 ll
   11312	85 10 00 00 a8 09 00 00	call 0x9a8 ; <core::result::unwrap_failed>
   11313	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016190 <LBB34_2>
   11314	bf 86 00 00 00 00 00 00	r6 = r8
   11315	07 06 00 00 10 00 00 00	r6 += 0x10
   11316	bf 61 00 00 00 00 00 00	r1 = r6
   11317	85 10 00 00 c4 02 00 00	call 0x2c4 ; <core::cell::Cell<T>::replace>
   11318	79 87 20 00 00 00 00 00	r7 = *(u64 *)(r8 + 0x20)
   11319	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x10)
   11320	07 02 00 00 ff ff ff ff	r2 += -0x1
   11321	bf 61 00 00 00 00 00 00	r1 = r6
   11322	85 10 00 00 bf 02 00 00	call 0x2bf ; <core::cell::Cell<T>::replace>
   11323	bf 70 00 00 00 00 00 00	r0 = r7
   11324	95 00 00 00 00 00 00 00	exit

00000000000161e8 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
   11325	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   11326	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11327	95 00 00 00 00 00 00 00	exit

0000000000016200 <alloc::rc::Rc<T>::from_inner>
   11328	bf 10 00 00 00 00 00 00	r0 = r1
   11329	95 00 00 00 00 00 00 00	exit

0000000000016210 <alloc::rc::Rc<T>::new>
   11330	bf 16 00 00 00 00 00 00	r6 = r1
   11331	b7 01 00 00 28 00 00 00	r1 = 0x28
   11332	b7 02 00 00 08 00 00 00	r2 = 0x8
   11333	85 10 00 00 9a ff ff ff	call -0x66 ; <__rust_alloc>
   11334	55 00 05 00 00 00 00 00	if r0 != 0x0 goto +0x5 <LBB29_2>
   11335	85 10 00 00 bb 02 00 00	call 0x2bb ; <<T as core::convert::From<T>>::from>
   11336	b7 01 00 00 28 00 00 00	r1 = 0x28
   11337	b7 02 00 00 08 00 00 00	r2 = 0x8
   11338	85 10 00 00 3e 04 00 00	call 0x43e ; <alloc::alloc::handle_alloc_error>
   11339	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016260 <LBB29_2>
   11340	b7 01 00 00 01 00 00 00	r1 = 0x1
   11341	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
   11342	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r1
   11343	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   11344	7b 10 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r1
   11345	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   11346	7b 10 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r1
   11347	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   11348	7b 10 20 00 00 00 00 00	*(u64 *)(r0 + 0x20) = r1
   11349	95 00 00 00 00 00 00 00	exit

00000000000162b0 <alloc::rc::Rc<T>::new>
   11350	bf 27 00 00 00 00 00 00	r7 = r2
   11351	bf 16 00 00 00 00 00 00	r6 = r1
   11352	b7 01 00 00 20 00 00 00	r1 = 0x20
   11353	b7 02 00 00 08 00 00 00	r2 = 0x8
   11354	85 10 00 00 85 ff ff ff	call -0x7b ; <__rust_alloc>
   11355	55 00 05 00 00 00 00 00	if r0 != 0x0 goto +0x5 <LBB30_2>
   11356	85 10 00 00 a6 02 00 00	call 0x2a6 ; <<T as core::convert::From<T>>::from>
   11357	b7 01 00 00 20 00 00 00	r1 = 0x20
   11358	b7 02 00 00 08 00 00 00	r2 = 0x8
   11359	85 10 00 00 29 04 00 00	call 0x429 ; <alloc::alloc::handle_alloc_error>
   11360	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016308 <LBB30_2>
   11361	7b 70 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r7
   11362	7b 60 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r6
   11363	b7 01 00 00 01 00 00 00	r1 = 0x1
   11364	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
   11365	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r1
   11366	95 00 00 00 00 00 00 00	exit

0000000000016338 <solana_program::sysvar::rent::check_id>
   11367	b7 02 00 00 20 00 00 00	r2 = 0x20
   11368	18 03 00 00 84 39 02 00 00 00 00 00 00 00 00 00	r3 = 0x23984 ll
   11370	b7 04 00 00 20 00 00 00	r4 = 0x20
   11371	85 10 00 00 8c ff ff ff	call -0x74 ; <core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
   11372	95 00 00 00 00 00 00 00	exit

0000000000016368 <core::ptr::const_ptr::<impl *const T>::align_offset>
   11373	bf 23 00 00 00 00 00 00	r3 = r2
   11374	77 03 00 00 01 00 00 00	r3 >>= 0x1
   11375	18 04 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r4 = 0x5555555555555555 ll
   11377	5f 43 00 00 00 00 00 00	r3 &= r4
   11378	bf 24 00 00 00 00 00 00	r4 = r2
   11379	1f 34 00 00 00 00 00 00	r4 -= r3
   11380	18 03 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r3 = 0x3333333333333333 ll
   11382	bf 45 00 00 00 00 00 00	r5 = r4
   11383	5f 35 00 00 00 00 00 00	r5 &= r3
   11384	77 04 00 00 02 00 00 00	r4 >>= 0x2
   11385	5f 34 00 00 00 00 00 00	r4 &= r3
   11386	0f 45 00 00 00 00 00 00	r5 += r4
   11387	bf 53 00 00 00 00 00 00	r3 = r5
   11388	77 03 00 00 04 00 00 00	r3 >>= 0x4
   11389	0f 35 00 00 00 00 00 00	r5 += r3
   11390	18 03 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r3 = 0xf0f0f0f0f0f0f0f ll
   11392	5f 35 00 00 00 00 00 00	r5 &= r3
   11393	18 03 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r3 = 0x101010101010101 ll
   11395	2f 35 00 00 00 00 00 00	r5 *= r3
   11396	77 05 00 00 38 00 00 00	r5 >>= 0x38
   11397	55 05 02 00 01 00 00 00	if r5 != 0x1 goto +0x2 <LBB8_2>
   11398	85 10 00 00 a4 02 00 00	call 0x2a4 ; <core::ptr::align_offset>
   11399	95 00 00 00 00 00 00 00	exit

0000000000016440 <LBB8_2>
   11400	18 01 00 00 a4 39 02 00 00 00 00 00 00 00 00 00	r1 = 0x239a4 ll
   11402	b7 02 00 00 29 00 00 00	r2 = 0x29
   11403	18 03 00 00 d8 4f 02 00 00 00 00 00 00 00 00 00	r3 = 0x24fd8 ll
   11405	85 10 00 00 56 0a 00 00	call 0xa56 ; <core::panicking::panic>
   11406	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016478 <core::ptr::drop_in_place>
   11407	95 00 00 00 00 00 00 00	exit

0000000000016480 <alloc::raw_vec::finish_grow>
   11408	bf 38 00 00 00 00 00 00	r8 = r3
   11409	bf 27 00 00 00 00 00 00	r7 = r2
   11410	bf 16 00 00 00 00 00 00	r6 = r1
   11411	15 08 10 00 00 00 00 00	if r8 == 0x0 goto +0x10 <LBB1_11>
   11412	79 41 00 00 00 00 00 00	r1 = *(u64 *)(r4 + 0x0)
   11413	55 01 06 00 00 00 00 00	if r1 != 0x0 goto +0x6 <LBB1_4>
   11414	15 07 21 00 00 00 00 00	if r7 == 0x0 goto +0x21 <LBB1_9>
   11415	bf 71 00 00 00 00 00 00	r1 = r7
   11416	bf 82 00 00 00 00 00 00	r2 = r8
   11417	85 10 00 00 46 ff ff ff	call -0xba ; <__rust_alloc>
   11418	15 00 18 00 00 00 00 00	if r0 == 0x0 goto +0x18 <LBB1_8>
   11419	05 00 1d 00 00 00 00 00	goto +0x1d <LBB1_10>

00000000000164e0 <LBB1_4>
   11420	79 42 08 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x8)
   11421	55 02 10 00 00 00 00 00	if r2 != 0x0 goto +0x10 <LBB1_7>
   11422	15 07 19 00 00 00 00 00	if r7 == 0x0 goto +0x19 <LBB1_9>
   11423	bf 71 00 00 00 00 00 00	r1 = r7
   11424	bf 82 00 00 00 00 00 00	r2 = r8
   11425	85 10 00 00 3e ff ff ff	call -0xc2 ; <__rust_alloc>
   11426	15 00 10 00 00 00 00 00	if r0 == 0x0 goto +0x10 <LBB1_8>
   11427	05 00 15 00 00 00 00 00	goto +0x15 <LBB1_10>

0000000000016520 <LBB1_11>
   11428	bf a1 00 00 00 00 00 00	r1 = r10
   11429	07 01 00 00 f0 ff ff ff	r1 += -0x10
   11430	bf 72 00 00 00 00 00 00	r2 = r7
   11431	b7 03 00 00 00 00 00 00	r3 = 0x0
   11432	85 10 00 00 57 02 00 00	call 0x257 ; <<T as core::convert::From<T>>::from>
   11433	79 a7 f8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x8)
   11434	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   11435	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   11436	b7 01 00 00 01 00 00 00	r1 = 0x1
   11437	05 00 0d 00 00 00 00 00	goto +0xd <LBB1_12>

0000000000016570 <LBB1_7>
   11438	bf 83 00 00 00 00 00 00	r3 = r8
   11439	bf 74 00 00 00 00 00 00	r4 = r7
   11440	85 10 00 00 33 ff ff ff	call -0xcd ; <__rust_realloc>
   11441	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB1_8>
   11442	05 00 06 00 00 00 00 00	goto +0x6 <LBB1_10>

0000000000016598 <LBB1_8>
   11443	85 10 00 00 4f 02 00 00	call 0x24f ; <<T as core::convert::From<T>>::from>
   11444	7b 76 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r7
   11445	b7 01 00 00 01 00 00 00	r1 = 0x1
   11446	bf 87 00 00 00 00 00 00	r7 = r8
   11447	05 00 03 00 00 00 00 00	goto +0x3 <LBB1_12>

00000000000165c0 <LBB1_9>
   11448	bf 80 00 00 00 00 00 00	r0 = r8

00000000000165c8 <LBB1_10>
   11449	7b 06 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r0
   11450	b7 01 00 00 00 00 00 00	r1 = 0x0

00000000000165d8 <LBB1_12>
   11451	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   11452	7b 76 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r7
   11453	95 00 00 00 00 00 00 00	exit

00000000000165f0 <alloc::raw_vec::RawVec<T,A>::allocate_in>
   11454	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
   11455	bf 29 00 00 00 00 00 00	r9 = r2
   11456	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   11457	bf a1 00 00 00 00 00 00	r1 = r10
   11458	07 01 00 00 e8 ff ff ff	r1 += -0x18
   11459	85 10 00 00 f7 00 00 00	call 0xf7 ; <core::alloc::layout::size_align>
   11460	79 a6 f0 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x10)
   11461	bf 67 00 00 00 00 00 00	r7 = r6
   11462	07 07 00 00 ff ff ff ff	r7 += -0x1
   11463	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   11464	bf 72 00 00 00 00 00 00	r2 = r7
   11465	0f 12 00 00 00 00 00 00	r2 += r1
   11466	bf 68 00 00 00 00 00 00	r8 = r6
   11467	87 08 00 00 00 00 00 00	r8 = -r8
   11468	5f 82 00 00 00 00 00 00	r2 &= r8
   11469	bf a1 00 00 00 00 00 00	r1 = r10
   11470	07 01 00 00 d8 ff ff ff	r1 += -0x28
   11471	b7 03 00 00 00 00 00 00	r3 = 0x0
   11472	bf 94 00 00 00 00 00 00	r4 = r9
   11473	b7 05 00 00 00 00 00 00	r5 = 0x0
   11474	85 10 00 00 79 13 00 00	call 0x1379 ; <__multi3>
   11475	b7 01 00 00 01 00 00 00	r1 = 0x1
   11476	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   11477	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB9_2>
   11478	b7 01 00 00 00 00 00 00	r1 = 0x0

00000000000166b8 <LBB9_2>
   11479	55 01 04 00 01 00 00 00	if r1 != 0x1 goto +0x4 <LBB9_5>
   11480	85 10 00 00 e7 00 00 00	call 0xe7 ; <<T as core::convert::From<T>>::from>

00000000000166c8 <LBB9_4>
   11481	85 10 00 00 e6 00 00 00	call 0xe6 ; <<T as core::convert::From<T>>::from>
   11482	85 10 00 00 48 03 00 00	call 0x348 ; <alloc::raw_vec::capacity_overflow>
   11483	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000166e0 <LBB9_5>
   11484	15 06 fc ff 00 00 00 00	if r6 == 0x0 goto -0x4 <LBB9_4>
   11485	bf 61 00 00 00 00 00 00	r1 = r6
   11486	77 01 00 00 01 00 00 00	r1 >>= 0x1
   11487	18 02 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r2 = 0x5555555555555555 ll
   11489	5f 21 00 00 00 00 00 00	r1 &= r2
   11490	bf 62 00 00 00 00 00 00	r2 = r6
   11491	1f 12 00 00 00 00 00 00	r2 -= r1
   11492	18 01 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r1 = 0x3333333333333333 ll
   11494	bf 23 00 00 00 00 00 00	r3 = r2
   11495	5f 13 00 00 00 00 00 00	r3 &= r1
   11496	77 02 00 00 02 00 00 00	r2 >>= 0x2
   11497	5f 12 00 00 00 00 00 00	r2 &= r1
   11498	0f 23 00 00 00 00 00 00	r3 += r2
   11499	bf 31 00 00 00 00 00 00	r1 = r3
   11500	77 01 00 00 04 00 00 00	r1 >>= 0x4
   11501	0f 13 00 00 00 00 00 00	r3 += r1
   11502	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   11504	5f 13 00 00 00 00 00 00	r3 &= r1
   11505	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   11507	2f 13 00 00 00 00 00 00	r3 *= r1
   11508	77 03 00 00 38 00 00 00	r3 >>= 0x38
   11509	15 03 0b 00 01 00 00 00	if r3 == 0x1 goto +0xb <LBB9_8>
   11510	bf a3 00 00 00 00 00 00	r3 = r10
   11511	07 03 00 00 f8 ff ff ff	r3 += -0x8
   11512	18 01 00 00 6c 3a 02 00 00 00 00 00 00 00 00 00	r1 = 0x23a6c ll
   11514	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   11515	18 04 00 00 08 50 02 00 00 00 00 00 00 00 00 00	r4 = 0x25008 ll
   11517	18 05 00 00 f0 4f 02 00 00 00 00 00 00 00 00 00	r5 = 0x24ff0 ll
   11519	85 10 00 00 d9 08 00 00	call 0x8d9 ; <core::result::unwrap_failed>
   11520	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016808 <LBB9_8>
   11521	79 a9 d8 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x28)
   11522	0f 79 00 00 00 00 00 00	r9 += r7
   11523	5f 89 00 00 00 00 00 00	r9 &= r8
   11524	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
   11525	15 01 06 00 00 00 00 00	if r1 == 0x0 goto +0x6 <LBB9_11>
   11526	15 09 10 00 00 00 00 00	if r9 == 0x0 goto +0x10 <LBB9_14>
   11527	bf 91 00 00 00 00 00 00	r1 = r9
   11528	bf 62 00 00 00 00 00 00	r2 = r6
   11529	85 10 00 00 dc fe ff ff	call -0x124 ; <__rust_alloc_zeroed>
   11530	15 00 07 00 00 00 00 00	if r0 == 0x0 goto +0x7 <LBB9_13>
   11531	05 00 0c 00 00 00 00 00	goto +0xc <LBB9_15>

0000000000016860 <LBB9_11>
   11532	15 09 0a 00 00 00 00 00	if r9 == 0x0 goto +0xa <LBB9_14>
   11533	bf 91 00 00 00 00 00 00	r1 = r9
   11534	bf 62 00 00 00 00 00 00	r2 = r6
   11535	85 10 00 00 d0 fe ff ff	call -0x130 ; <__rust_alloc>
   11536	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB9_13>
   11537	05 00 06 00 00 00 00 00	goto +0x6 <LBB9_15>

0000000000016890 <LBB9_13>
   11538	85 10 00 00 f0 01 00 00	call 0x1f0 ; <<T as core::convert::From<T>>::from>
   11539	bf 91 00 00 00 00 00 00	r1 = r9
   11540	bf 62 00 00 00 00 00 00	r2 = r6
   11541	85 10 00 00 73 03 00 00	call 0x373 ; <alloc::alloc::handle_alloc_error>
   11542	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000168b8 <LBB9_14>
   11543	bf 60 00 00 00 00 00 00	r0 = r6

00000000000168c0 <LBB9_15>
   11544	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
   11545	7b 01 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r0
   11546	37 09 00 00 30 00 00 00	r9 /= 0x30
   11547	7b 91 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r9
   11548	95 00 00 00 00 00 00 00	exit

00000000000168e8 <alloc::raw_vec::RawVec<T,A>::ptr>
   11549	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   11550	95 00 00 00 00 00 00 00	exit

00000000000168f8 <alloc::raw_vec::RawVec<T,A>::ptr>
   11551	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   11552	95 00 00 00 00 00 00 00	exit

0000000000016908 <alloc::raw_vec::RawVec<T,A>::reserve>
   11553	bf 16 00 00 00 00 00 00	r6 = r1
   11554	79 68 08 00 00 00 00 00	r8 = *(u64 *)(r6 + 0x8)
   11555	bf 81 00 00 00 00 00 00	r1 = r8
   11556	1f 21 00 00 00 00 00 00	r1 -= r2
   11557	3d 31 6b 00 00 00 00 00	if r1 >= r3 goto +0x6b <LBB18_27>
   11558	bf 27 00 00 00 00 00 00	r7 = r2
   11559	0f 37 00 00 00 00 00 00	r7 += r3
   11560	b7 01 00 00 01 00 00 00	r1 = 0x1
   11561	2d 72 01 00 00 00 00 00	if r2 > r7 goto +0x1 <LBB18_3>
   11562	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000016958 <LBB18_3>
   11563	57 01 00 00 01 00 00 00	r1 &= 0x1
   11564	55 01 65 00 00 00 00 00	if r1 != 0x0 goto +0x65 <LBB18_21>
   11565	bf a1 00 00 00 00 00 00	r1 = r10
   11566	07 01 00 00 c0 ff ff ff	r1 += -0x40
   11567	85 10 00 00 8b 00 00 00	call 0x8b ; <core::alloc::layout::size_align>
   11568	67 08 00 00 01 00 00 00	r8 <<= 0x1
   11569	2d 78 01 00 00 00 00 00	if r8 > r7 goto +0x1 <LBB18_6>
   11570	bf 78 00 00 00 00 00 00	r8 = r7

0000000000016998 <LBB18_6>
   11571	7b 6a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r6
   11572	25 08 01 00 04 00 00 00	if r8 > 0x4 goto +0x1 <LBB18_8>
   11573	b7 08 00 00 04 00 00 00	r8 = 0x4

00000000000169b0 <LBB18_8>
   11574	79 a6 c8 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x38)
   11575	bf 69 00 00 00 00 00 00	r9 = r6
   11576	07 09 00 00 ff ff ff ff	r9 += -0x1
   11577	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
   11578	bf 92 00 00 00 00 00 00	r2 = r9
   11579	0f 12 00 00 00 00 00 00	r2 += r1
   11580	bf 67 00 00 00 00 00 00	r7 = r6
   11581	87 07 00 00 00 00 00 00	r7 = -r7
   11582	5f 72 00 00 00 00 00 00	r2 &= r7
   11583	bf a1 00 00 00 00 00 00	r1 = r10
   11584	07 01 00 00 b0 ff ff ff	r1 += -0x50
   11585	b7 03 00 00 00 00 00 00	r3 = 0x0
   11586	bf 84 00 00 00 00 00 00	r4 = r8
   11587	b7 05 00 00 00 00 00 00	r5 = 0x0
   11588	85 10 00 00 07 13 00 00	call 0x1307 ; <__multi3>
   11589	b7 01 00 00 01 00 00 00	r1 = 0x1
   11590	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   11591	55 02 01 00 00 00 00 00	if r2 != 0x0 goto +0x1 <LBB18_10>
   11592	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000016a48 <LBB18_10>
   11593	55 01 04 00 01 00 00 00	if r1 != 0x1 goto +0x4 <LBB18_13>
   11594	85 10 00 00 75 00 00 00	call 0x75 ; <<T as core::convert::From<T>>::from>

0000000000016a58 <LBB18_12>
   11595	85 10 00 00 74 00 00 00	call 0x74 ; <<T as core::convert::From<T>>::from>
   11596	b7 06 00 00 00 00 00 00	r6 = 0x0
   11597	05 00 28 00 00 00 00 00	goto +0x28 <LBB18_17>

0000000000016a70 <LBB18_13>
   11598	15 06 fc ff 00 00 00 00	if r6 == 0x0 goto -0x4 <LBB18_12>
   11599	bf 61 00 00 00 00 00 00	r1 = r6
   11600	77 01 00 00 01 00 00 00	r1 >>= 0x1
   11601	18 02 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r2 = 0x5555555555555555 ll
   11603	5f 21 00 00 00 00 00 00	r1 &= r2
   11604	bf 62 00 00 00 00 00 00	r2 = r6
   11605	1f 12 00 00 00 00 00 00	r2 -= r1
   11606	18 01 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r1 = 0x3333333333333333 ll
   11608	bf 23 00 00 00 00 00 00	r3 = r2
   11609	5f 13 00 00 00 00 00 00	r3 &= r1
   11610	77 02 00 00 02 00 00 00	r2 >>= 0x2
   11611	5f 12 00 00 00 00 00 00	r2 &= r1
   11612	0f 23 00 00 00 00 00 00	r3 += r2
   11613	bf 31 00 00 00 00 00 00	r1 = r3
   11614	77 01 00 00 04 00 00 00	r1 >>= 0x4
   11615	0f 13 00 00 00 00 00 00	r3 += r1
   11616	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   11618	5f 13 00 00 00 00 00 00	r3 &= r1
   11619	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   11621	2f 13 00 00 00 00 00 00	r3 *= r1
   11622	77 03 00 00 38 00 00 00	r3 >>= 0x38
   11623	15 03 0b 00 01 00 00 00	if r3 == 0x1 goto +0xb <LBB18_16>
   11624	bf a3 00 00 00 00 00 00	r3 = r10
   11625	07 03 00 00 e8 ff ff ff	r3 += -0x18
   11626	18 01 00 00 6c 3a 02 00 00 00 00 00 00 00 00 00	r1 = 0x23a6c ll
   11628	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   11629	18 04 00 00 08 50 02 00 00 00 00 00 00 00 00 00	r4 = 0x25008 ll
   11631	18 05 00 00 f0 4f 02 00 00 00 00 00 00 00 00 00	r5 = 0x24ff0 ll
   11633	85 10 00 00 67 08 00 00	call 0x867 ; <core::result::unwrap_failed>
   11634	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016b98 <LBB18_16>
   11635	79 a8 b0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x50)
   11636	0f 98 00 00 00 00 00 00	r8 += r9
   11637	5f 78 00 00 00 00 00 00	r8 &= r7

0000000000016bb0 <LBB18_17>
   11638	79 a9 88 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x78)
   11639	79 97 08 00 00 00 00 00	r7 = *(u64 *)(r9 + 0x8)
   11640	15 07 08 00 00 00 00 00	if r7 == 0x0 goto +0x8 <LBB18_19>
   11641	79 91 00 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x0)
   11642	85 10 00 00 82 01 00 00	call 0x182 ; <<T as core::convert::Into<U>>::into>
   11643	b7 01 00 00 08 00 00 00	r1 = 0x8
   11644	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   11645	27 07 00 00 30 00 00 00	r7 *= 0x30
   11646	7b 7a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r7
   11647	7b 0a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r0
   11648	05 00 02 00 00 00 00 00	goto +0x2 <LBB18_20>

0000000000016c08 <LBB18_19>
   11649	b7 01 00 00 00 00 00 00	r1 = 0x0
   11650	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1

0000000000016c18 <LBB18_20>
   11651	bf a1 00 00 00 00 00 00	r1 = r10
   11652	07 01 00 00 d0 ff ff ff	r1 += -0x30
   11653	bf a4 00 00 00 00 00 00	r4 = r10
   11654	07 04 00 00 e8 ff ff ff	r4 += -0x18
   11655	bf 82 00 00 00 00 00 00	r2 = r8
   11656	bf 63 00 00 00 00 00 00	r3 = r6
   11657	85 10 00 00 06 ff ff ff	call -0xfa ; <alloc::raw_vec::finish_grow>
   11658	79 a3 e0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x20)
   11659	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)
   11660	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x30)
   11661	15 01 0c 00 01 00 00 00	if r1 == 0x1 goto +0xc <LBB18_22>
   11662	7b 29 00 00 00 00 00 00	*(u64 *)(r9 + 0x0) = r2
   11663	37 03 00 00 30 00 00 00	r3 /= 0x30
   11664	7b 39 08 00 00 00 00 00	*(u64 *)(r9 + 0x8) = r3

0000000000016c88 <LBB18_27>
   11665	95 00 00 00 00 00 00 00	exit

0000000000016c90 <LBB18_21>
   11666	bf a1 00 00 00 00 00 00	r1 = r10
   11667	07 01 00 00 90 ff ff ff	r1 += -0x70
   11668	bf 72 00 00 00 00 00 00	r2 = r7
   11669	b7 03 00 00 00 00 00 00	r3 = 0x0
   11670	85 10 00 00 69 01 00 00	call 0x169 ; <<T as core::convert::From<T>>::from>
   11671	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
   11672	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
   11673	05 00 05 00 00 00 00 00	goto +0x5 <LBB18_23>

0000000000016cd0 <LBB18_22>
   11674	bf a1 00 00 00 00 00 00	r1 = r10
   11675	07 01 00 00 a0 ff ff ff	r1 += -0x60
   11676	85 10 00 00 63 01 00 00	call 0x163 ; <<T as core::convert::From<T>>::from>
   11677	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
   11678	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)

0000000000016cf8 <LBB18_23>
   11679	55 02 02 00 00 00 00 00	if r2 != 0x0 goto +0x2 <LBB18_25>
   11680	85 10 00 00 82 02 00 00	call 0x282 ; <alloc::raw_vec::capacity_overflow>
   11681	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016d10 <LBB18_25>
   11682	85 10 00 00 e6 02 00 00	call 0x2e6 ; <alloc::alloc::handle_alloc_error>
   11683	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000016d20 <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>
   11684	79 16 08 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x8)
   11685	15 06 06 00 00 00 00 00	if r6 == 0x0 goto +0x6 <LBB38_2>
   11686	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   11687	85 10 00 00 55 01 00 00	call 0x155 ; <<T as core::convert::Into<U>>::into>
   11688	bf 01 00 00 00 00 00 00	r1 = r0
   11689	bf 62 00 00 00 00 00 00	r2 = r6
   11690	b7 03 00 00 01 00 00 00	r3 = 0x1
   11691	85 10 00 00 36 fe ff ff	call -0x1ca ; <__rust_dealloc>

0000000000016d60 <LBB38_2>
   11692	95 00 00 00 00 00 00 00	exit

0000000000016d68 <alloc::vec::Vec<T,A>::reserve>
   11693	bf 23 00 00 00 00 00 00	r3 = r2
   11694	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   11695	85 10 00 00 71 ff ff ff	call -0x8f ; <alloc::raw_vec::RawVec<T,A>::reserve>
   11696	95 00 00 00 00 00 00 00	exit

0000000000016d88 <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
   11697	85 10 00 00 6d ff ff ff	call -0x93 ; <alloc::raw_vec::RawVec<T,A>::ptr>
   11698	95 00 00 00 00 00 00 00	exit

0000000000016d98 <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
   11699	bf 26 00 00 00 00 00 00	r6 = r2
   11700	bf 17 00 00 00 00 00 00	r7 = r1
   11701	bf 61 00 00 00 00 00 00	r1 = r6
   11702	85 10 00 00 66 ff ff ff	call -0x9a ; <alloc::raw_vec::RawVec<T,A>::ptr>
   11703	7b 07 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r0
   11704	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   11705	7b 17 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r1
   11706	95 00 00 00 00 00 00 00	exit

0000000000016dd8 <core::alloc::layout::size_align>
   11707	b7 02 00 00 08 00 00 00	r2 = 0x8
   11708	7b 21 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r2
   11709	b7 02 00 00 30 00 00 00	r2 = 0x30
   11710	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   11711	95 00 00 00 00 00 00 00	exit

0000000000016e00 <<T as core::convert::From<T>>::from>
   11712	95 00 00 00 00 00 00 00	exit

0000000000016e08 <solana_program::entrypoint::deserialize>
   11713	bf 28 00 00 00 00 00 00	r8 = r2
   11714	7b 1a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r1
   11715	79 86 00 00 00 00 00 00	r6 = *(u64 *)(r8 + 0x0)
   11716	bf a1 00 00 00 00 00 00	r1 = r10
   11717	07 01 00 00 c0 ff ff ff	r1 += -0x40
   11718	b7 07 00 00 00 00 00 00	r7 = 0x0
   11719	bf 62 00 00 00 00 00 00	r2 = r6
   11720	b7 03 00 00 00 00 00 00	r3 = 0x0
   11721	85 10 00 00 f4 fe ff ff	call -0x10c ; <alloc::raw_vec::RawVec<T,A>::allocate_in>
   11722	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x38)
   11723	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   11724	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x40)
   11725	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   11726	7b 7a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r7
   11727	bf a1 00 00 00 00 00 00	r1 = r10
   11728	07 01 00 00 b0 ff ff ff	r1 += -0x50
   11729	b7 02 00 00 00 00 00 00	r2 = 0x0
   11730	bf 63 00 00 00 00 00 00	r3 = r6
   11731	85 10 00 00 69 fe ff ff	call -0x197 ; <<I as core::iter::traits::collect::IntoIterator>::into_iter>
   11732	b7 07 00 00 08 00 00 00	r7 = 0x8
   11733	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   11734	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
   11735	3d 21 b4 00 00 00 00 00	if r1 >= r2 goto +0xb4 <LBB41_22>
   11736	1f 12 00 00 00 00 00 00	r2 -= r1
   11737	b7 07 00 00 08 00 00 00	r7 = 0x8
   11738	7b 8a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r8
   11739	05 00 20 00 00 00 00 00	goto +0x20 <LBB41_4>

0000000000016ee0 <LBB41_2>
   11740	bf a1 00 00 00 00 00 00	r1 = r10
   11741	07 01 00 00 d0 ff ff ff	r1 += -0x30
   11742	85 10 00 00 3e ff ff ff	call -0xc2 ; <alloc::raw_vec::RawVec<T,A>::ptr>
   11743	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   11744	27 01 00 00 30 00 00 00	r1 *= 0x30
   11745	0f 10 00 00 00 00 00 00	r0 += r1
   11746	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
   11747	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
   11748	7b 60 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r6
   11749	7b 70 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r7
   11750	79 a1 60 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0xa0)
   11751	7b 10 20 00 00 00 00 00	*(u64 *)(r0 + 0x20) = r1
   11752	73 90 2a 00 00 00 00 00	*(u8 *)(r0 + 0x2a) = r9
   11753	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
   11754	73 10 29 00 00 00 00 00	*(u8 *)(r0 + 0x29) = r1
   11755	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
   11756	73 10 28 00 00 00 00 00	*(u8 *)(r0 + 0x28) = r1
   11757	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
   11758	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r1
   11759	71 a1 ec ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x14)
   11760	73 10 2f 00 00 00 00 00	*(u8 *)(r0 + 0x2f) = r1
   11761	61 a1 e8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x18)
   11762	63 10 2b 00 00 00 00 00	*(u32 *)(r0 + 0x2b) = r1
   11763	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   11764	07 01 00 00 01 00 00 00	r1 += 0x1
   11765	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   11766	79 a8 88 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x78)
   11767	79 a7 90 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x70)

0000000000016fc0 <LBB41_3>
   11768	07 07 00 00 08 00 00 00	r7 += 0x8
   11769	79 a2 98 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x68)
   11770	07 02 00 00 ff ff ff ff	r2 += -0x1
   11771	15 02 90 00 00 00 00 00	if r2 == 0x0 goto +0x90 <LBB41_22>

0000000000016fe0 <LBB41_4>
   11772	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
   11773	bf 81 00 00 00 00 00 00	r1 = r8
   11774	0f 71 00 00 00 00 00 00	r1 += r7
   11775	71 19 00 00 00 00 00 00	r9 = *(u8 *)(r1 + 0x0)
   11776	7b 7a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r7
   11777	15 09 38 00 ff 00 00 00	if r9 == 0xff goto +0x38 <LBB41_13>
   11778	bf a1 00 00 00 00 00 00	r1 = r10
   11779	07 01 00 00 a0 ff ff ff	r1 += -0x60
   11780	bf a2 00 00 00 00 00 00	r2 = r10
   11781	07 02 00 00 d0 ff ff ff	r2 += -0x30
   11782	85 10 00 00 ac ff ff ff	call -0x54 ; <<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref>
   11783	79 a2 a8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x58)
   11784	2d 92 05 00 00 00 00 00	if r2 > r9 goto +0x5 <LBB41_7>
   11785	bf 91 00 00 00 00 00 00	r1 = r9
   11786	18 03 00 00 28 50 02 00 00 00 00 00 00 00 00 00	r3 = 0x25028 ll
   11788	85 10 00 00 e9 08 00 00	call 0x8e9 ; <core::panicking::panic_bounds_check>
   11789	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017070 <LBB41_7>
   11790	79 a8 a0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x60)
   11791	27 09 00 00 30 00 00 00	r9 *= 0x30
   11792	bf 87 00 00 00 00 00 00	r7 = r8
   11793	0f 97 00 00 00 00 00 00	r7 += r9
   11794	79 76 08 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x8)
   11795	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   11796	07 02 00 00 01 00 00 00	r2 += 0x1
   11797	25 02 02 00 01 00 00 00	if r2 > 0x1 goto +0x2 <LBB41_9>

00000000000170b0 <LBB41_8>
   11798	85 10 00 00 ff ff ff ff	call -0x1 ; abort
   11799	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000170c0 <LBB41_9>
   11800	71 71 29 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x29)
   11801	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r1
   11802	71 71 28 00 00 00 00 00	r1 = *(u8 *)(r7 + 0x28)
   11803	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
   11804	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
   11805	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
   11806	bf 61 00 00 00 00 00 00	r1 = r6
   11807	85 10 00 00 da 00 00 00	call 0xda ; <core::cell::Cell<T>::replace>
   11808	bf 61 00 00 00 00 00 00	r1 = r6
   11809	85 10 00 00 1e fe ff ff	call -0x1e2 ; <alloc::rc::Rc<T>::from_inner>
   11810	7b 0a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r0
   11811	79 76 10 00 00 00 00 00	r6 = *(u64 *)(r7 + 0x10)
   11812	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   11813	07 02 00 00 01 00 00 00	r2 += 0x1
   11814	25 02 01 00 01 00 00 00	if r2 > 0x1 goto +0x1 <LBB41_11>
   11815	05 00 ee ff 00 00 00 00	goto -0x12 <LBB41_8>

0000000000017140 <LBB41_11>
   11816	bf 61 00 00 00 00 00 00	r1 = r6
   11817	85 10 00 00 d0 00 00 00	call 0xd0 ; <core::cell::Cell<T>::replace>
   11818	0f 98 00 00 00 00 00 00	r8 += r9
   11819	bf 61 00 00 00 00 00 00	r1 = r6
   11820	85 10 00 00 13 fe ff ff	call -0x1ed ; <alloc::rc::Rc<T>::from_inner>
   11821	bf 06 00 00 00 00 00 00	r6 = r0
   11822	79 81 20 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x20)
   11823	7b 1a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r1
   11824	71 89 2a 00 00 00 00 00	r9 = *(u8 *)(r8 + 0x2a)
   11825	79 87 18 00 00 00 00 00	r7 = *(u64 *)(r8 + 0x18)
   11826	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
   11827	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   11828	5d 12 a7 ff 00 00 00 00	if r2 != r1 goto -0x59 <LBB41_2>
   11829	bf a1 00 00 00 00 00 00	r1 = r10
   11830	07 01 00 00 d0 ff ff ff	r1 += -0x30
   11831	b7 02 00 00 01 00 00 00	r2 = 0x1
   11832	85 10 00 00 74 ff ff ff	call -0x8c ; <alloc::vec::Vec<T,A>::reserve>
   11833	05 00 a2 ff 00 00 00 00	goto -0x5e <LBB41_2>

00000000000171d0 <LBB41_13>
   11834	bf 79 00 00 00 00 00 00	r9 = r7
   11835	0f 89 00 00 00 00 00 00	r9 += r8
   11836	71 96 01 00 00 00 00 00	r6 = *(u8 *)(r9 + 0x1)
   11837	71 97 02 00 00 00 00 00	r7 = *(u8 *)(r9 + 0x2)
   11838	71 98 03 00 00 00 00 00	r8 = *(u8 *)(r9 + 0x3)
   11839	bf 92 00 00 00 00 00 00	r2 = r9
   11840	07 02 00 00 48 00 00 00	r2 += 0x48
   11841	b7 01 00 00 00 00 00 00	r1 = 0x0
   11842	85 10 00 00 13 fe ff ff	call -0x1ed ; <alloc::rc::Rc<T>::new>
   11843	7b 0a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r0
   11844	79 91 50 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x50)
   11845	bf 92 00 00 00 00 00 00	r2 = r9
   11846	07 02 00 00 58 00 00 00	r2 += 0x58
   11847	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
   11848	b7 02 00 00 01 00 00 00	r2 = 0x1
   11849	b7 03 00 00 01 00 00 00	r3 = 0x1
   11850	55 08 01 00 00 00 00 00	if r8 != 0x0 goto +0x1 <LBB41_15>
   11851	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000017260 <LBB41_15>
   11852	b7 04 00 00 01 00 00 00	r4 = 0x1
   11853	55 07 01 00 00 00 00 00	if r7 != 0x0 goto +0x1 <LBB41_17>
   11854	b7 04 00 00 00 00 00 00	r4 = 0x0

0000000000017278 <LBB41_17>
   11855	7b 4a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r4
   11856	7b 3a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r3
   11857	55 06 01 00 00 00 00 00	if r6 != 0x0 goto +0x1 <LBB41_19>
   11858	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000017298 <LBB41_19>
   11859	7b 2a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r2
   11860	b7 02 00 00 00 00 00 00	r2 = 0x0
   11861	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   11862	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   11863	79 a6 90 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x70)
   11864	0f 16 00 00 00 00 00 00	r6 += r1
   11865	bf a1 00 00 00 00 00 00	r1 = r10
   11866	07 01 00 00 e8 ff ff ff	r1 += -0x18
   11867	85 10 00 00 e6 fd ff ff	call -0x21a ; <alloc::rc::Rc<T>::new>
   11868	7b 0a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r0
   11869	07 06 00 00 58 28 00 00	r6 += 0x2858
   11870	bf 61 00 00 00 00 00 00	r1 = r6
   11871	b7 02 00 00 08 00 00 00	r2 = 0x8
   11872	85 10 00 00 0c fe ff ff	call -0x1f4 ; <core::ptr::const_ptr::<impl *const T>::align_offset>
   11873	bf 07 00 00 00 00 00 00	r7 = r0
   11874	0f 67 00 00 00 00 00 00	r7 += r6
   11875	bf 98 00 00 00 00 00 00	r8 = r9
   11876	07 08 00 00 28 00 00 00	r8 += 0x28
   11877	07 09 00 00 08 00 00 00	r9 += 0x8
   11878	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
   11879	0f 71 00 00 00 00 00 00	r1 += r7
   11880	79 16 00 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x0)
   11881	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
   11882	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   11883	5d 12 04 00 00 00 00 00	if r2 != r1 goto +0x4 <LBB41_21>
   11884	bf a1 00 00 00 00 00 00	r1 = r10
   11885	07 01 00 00 d0 ff ff ff	r1 += -0x30
   11886	b7 02 00 00 01 00 00 00	r2 = 0x1
   11887	85 10 00 00 3d ff ff ff	call -0xc3 ; <alloc::vec::Vec<T,A>::reserve>

0000000000017380 <LBB41_21>
   11888	bf a1 00 00 00 00 00 00	r1 = r10
   11889	07 01 00 00 d0 ff ff ff	r1 += -0x30
   11890	85 10 00 00 aa fe ff ff	call -0x156 ; <alloc::raw_vec::RawVec<T,A>::ptr>
   11891	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   11892	27 01 00 00 30 00 00 00	r1 *= 0x30
   11893	0f 10 00 00 00 00 00 00	r0 += r1
   11894	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
   11895	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
   11896	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
   11897	7b 10 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r1
   11898	7b 80 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r8
   11899	7b 60 20 00 00 00 00 00	*(u64 *)(r0 + 0x20) = r6
   11900	79 a1 70 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x90)
   11901	73 10 2a 00 00 00 00 00	*(u8 *)(r0 + 0x2a) = r1
   11902	79 a1 68 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x98)
   11903	73 10 29 00 00 00 00 00	*(u8 *)(r0 + 0x29) = r1
   11904	79 a1 78 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x88)
   11905	73 10 28 00 00 00 00 00	*(u8 *)(r0 + 0x28) = r1
   11906	7b 90 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r9
   11907	71 a1 ec ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x14)
   11908	73 10 2f 00 00 00 00 00	*(u8 *)(r0 + 0x2f) = r1
   11909	61 a1 e8 ff 00 00 00 00	r1 = *(u32 *)(r10 - 0x18)
   11910	63 10 2b 00 00 00 00 00	*(u32 *)(r0 + 0x2b) = r1
   11911	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   11912	07 01 00 00 01 00 00 00	r1 += 0x1
   11913	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   11914	79 a8 88 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x78)
   11915	05 00 6c ff 00 00 00 00	goto -0x94 <LBB41_3>

0000000000017460 <LBB41_22>
   11916	bf 81 00 00 00 00 00 00	r1 = r8
   11917	0f 71 00 00 00 00 00 00	r1 += r7
   11918	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   11919	07 07 00 00 08 00 00 00	r7 += 0x8
   11920	bf 12 00 00 00 00 00 00	r2 = r1
   11921	0f 72 00 00 00 00 00 00	r2 += r7
   11922	bf 83 00 00 00 00 00 00	r3 = r8
   11923	0f 23 00 00 00 00 00 00	r3 += r2
   11924	79 a4 58 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0xa8)
   11925	7b 34 00 00 00 00 00 00	*(u64 *)(r4 + 0x0) = r3
   11926	79 a2 d0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x30)
   11927	7b 24 08 00 00 00 00 00	*(u64 *)(r4 + 0x8) = r2
   11928	79 a2 d8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x28)
   11929	7b 24 10 00 00 00 00 00	*(u64 *)(r4 + 0x10) = r2
   11930	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   11931	7b 24 18 00 00 00 00 00	*(u64 *)(r4 + 0x18) = r2
   11932	7b 14 28 00 00 00 00 00	*(u64 *)(r4 + 0x28) = r1
   11933	0f 78 00 00 00 00 00 00	r8 += r7
   11934	7b 84 20 00 00 00 00 00	*(u64 *)(r4 + 0x20) = r8
   11935	95 00 00 00 00 00 00 00	exit

0000000000017500 <solana_program::program_error::<impl core::convert::From<solana_program::program_error::ProgramError> for u64>::from>
   11936	bf 16 00 00 00 00 00 00	r6 = r1
   11937	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0x0)
   11938	65 01 07 00 07 00 00 00	if r1 s> 0x7 goto +0x7 <LBB58_12>
   11939	65 01 0d 00 03 00 00 00	if r1 s> 0x3 goto +0xd <LBB58_7>
   11940	65 01 18 00 01 00 00 00	if r1 s> 0x1 goto +0x18 <LBB58_5>
   11941	15 01 2b 00 00 00 00 00	if r1 == 0x0 goto +0x2b <LBB58_23>
   11942	18 07 00 00 00 00 00 00 00 00 00 00 02 00 00 00	r7 = 0x200000000 ll
   11944	55 01 4f 00 0e 00 00 00	if r1 != 0xe goto +0x4f <LBB58_34>
   11945	05 00 49 00 00 00 00 00	goto +0x49 <LBB58_33>

0000000000017550 <LBB58_12>
   11946	65 01 0c 00 0b 00 00 00	if r1 s> 0xb goto +0xc <LBB58_18>
   11947	65 01 16 00 09 00 00 00	if r1 s> 0x9 goto +0x16 <LBB58_16>
   11948	15 01 2b 00 08 00 00 00	if r1 == 0x8 goto +0x2b <LBB58_29>
   11949	18 07 00 00 00 00 00 00 00 00 00 00 0a 00 00 00	r7 = 0xa00000000 ll
   11951	55 01 48 00 0e 00 00 00	if r1 != 0xe goto +0x48 <LBB58_34>
   11952	05 00 42 00 00 00 00 00	goto +0x42 <LBB58_33>

0000000000017588 <LBB58_7>
   11953	65 01 15 00 05 00 00 00	if r1 s> 0x5 goto +0x15 <LBB58_10>
   11954	15 01 29 00 04 00 00 00	if r1 == 0x4 goto +0x29 <LBB58_27>
   11955	18 07 00 00 00 00 00 00 00 00 00 00 06 00 00 00	r7 = 0x600000000 ll
   11957	55 01 42 00 0e 00 00 00	if r1 != 0xe goto +0x42 <LBB58_34>
   11958	05 00 3c 00 00 00 00 00	goto +0x3c <LBB58_33>

00000000000175b8 <LBB58_18>
   11959	65 01 14 00 0d 00 00 00	if r1 s> 0xd goto +0x14 <LBB58_21>
   11960	15 01 27 00 0c 00 00 00	if r1 == 0xc goto +0x27 <LBB58_31>
   11961	18 07 00 00 00 00 00 00 00 00 00 00 0e 00 00 00	r7 = 0xe00000000 ll
   11963	55 01 3c 00 0e 00 00 00	if r1 != 0xe goto +0x3c <LBB58_34>
   11964	05 00 36 00 00 00 00 00	goto +0x36 <LBB58_33>

00000000000175e8 <LBB58_5>
   11965	15 01 26 00 02 00 00 00	if r1 == 0x2 goto +0x26 <LBB58_26>
   11966	18 07 00 00 00 00 00 00 00 00 00 00 04 00 00 00	r7 = 0x400000000 ll
   11968	55 01 37 00 0e 00 00 00	if r1 != 0xe goto +0x37 <LBB58_34>
   11969	05 00 31 00 00 00 00 00	goto +0x31 <LBB58_33>

0000000000017610 <LBB58_16>
   11970	15 01 25 00 0a 00 00 00	if r1 == 0xa goto +0x25 <LBB58_30>
   11971	18 07 00 00 00 00 00 00 00 00 00 00 0c 00 00 00	r7 = 0xc00000000 ll
   11973	55 01 32 00 0e 00 00 00	if r1 != 0xe goto +0x32 <LBB58_34>
   11974	05 00 2c 00 00 00 00 00	goto +0x2c <LBB58_33>

0000000000017638 <LBB58_10>
   11975	15 01 24 00 06 00 00 00	if r1 == 0x6 goto +0x24 <LBB58_28>
   11976	18 07 00 00 00 00 00 00 00 00 00 00 08 00 00 00	r7 = 0x800000000 ll
   11978	55 01 2d 00 0e 00 00 00	if r1 != 0xe goto +0x2d <LBB58_34>
   11979	05 00 27 00 00 00 00 00	goto +0x27 <LBB58_33>

0000000000017660 <LBB58_21>
   11980	15 01 23 00 0e 00 00 00	if r1 == 0xe goto +0x23 <LBB58_32>
   11981	18 07 00 00 00 00 00 00 00 00 00 00 10 00 00 00	r7 = 0x1000000000 ll
   11983	55 01 28 00 0e 00 00 00	if r1 != 0xe goto +0x28 <LBB58_34>
   11984	05 00 22 00 00 00 00 00	goto +0x22 <LBB58_33>

0000000000017688 <LBB58_23>
   11985	61 62 04 00 00 00 00 00	r2 = *(u32 *)(r6 + 0x4)
   11986	18 07 00 00 00 00 00 00 00 00 00 00 01 00 00 00	r7 = 0x100000000 ll
   11988	15 02 01 00 00 00 00 00	if r2 == 0x0 goto +0x1 <LBB58_25>
   11989	bf 27 00 00 00 00 00 00	r7 = r2

00000000000176b0 <LBB58_25>
   11990	55 01 21 00 0e 00 00 00	if r1 != 0xe goto +0x21 <LBB58_34>
   11991	05 00 1b 00 00 00 00 00	goto +0x1b <LBB58_33>

00000000000176c0 <LBB58_29>
   11992	18 07 00 00 00 00 00 00 00 00 00 00 09 00 00 00	r7 = 0x900000000 ll
   11994	55 01 1d 00 0e 00 00 00	if r1 != 0xe goto +0x1d <LBB58_34>
   11995	05 00 17 00 00 00 00 00	goto +0x17 <LBB58_33>

00000000000176e0 <LBB58_27>
   11996	18 07 00 00 00 00 00 00 00 00 00 00 05 00 00 00	r7 = 0x500000000 ll
   11998	55 01 19 00 0e 00 00 00	if r1 != 0xe goto +0x19 <LBB58_34>
   11999	05 00 13 00 00 00 00 00	goto +0x13 <LBB58_33>

0000000000017700 <LBB58_31>
   12000	18 07 00 00 00 00 00 00 00 00 00 00 0d 00 00 00	r7 = 0xd00000000 ll
   12002	55 01 15 00 0e 00 00 00	if r1 != 0xe goto +0x15 <LBB58_34>
   12003	05 00 0f 00 00 00 00 00	goto +0xf <LBB58_33>

0000000000017720 <LBB58_26>
   12004	18 07 00 00 00 00 00 00 00 00 00 00 03 00 00 00	r7 = 0x300000000 ll
   12006	55 01 11 00 0e 00 00 00	if r1 != 0xe goto +0x11 <LBB58_34>
   12007	05 00 0b 00 00 00 00 00	goto +0xb <LBB58_33>

0000000000017740 <LBB58_30>
   12008	18 07 00 00 00 00 00 00 00 00 00 00 0b 00 00 00	r7 = 0xb00000000 ll
   12010	55 01 0d 00 0e 00 00 00	if r1 != 0xe goto +0xd <LBB58_34>
   12011	05 00 07 00 00 00 00 00	goto +0x7 <LBB58_33>

0000000000017760 <LBB58_28>
   12012	18 07 00 00 00 00 00 00 00 00 00 00 07 00 00 00	r7 = 0x700000000 ll
   12014	55 01 09 00 0e 00 00 00	if r1 != 0xe goto +0x9 <LBB58_34>
   12015	05 00 03 00 00 00 00 00	goto +0x3 <LBB58_33>

0000000000017780 <LBB58_32>
   12016	18 07 00 00 00 00 00 00 00 00 00 00 0f 00 00 00	r7 = 0xf00000000 ll
   12018	55 01 05 00 0e 00 00 00	if r1 != 0xe goto +0x5 <LBB58_34>

0000000000017798 <LBB58_33>
   12019	07 06 00 00 08 00 00 00	r6 += 0x8
   12020	bf 61 00 00 00 00 00 00	r1 = r6
   12021	85 10 00 00 bb fe ff ff	call -0x145 ; <<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop>
   12022	bf 61 00 00 00 00 00 00	r1 = r6
   12023	85 10 00 00 ac fe ff ff	call -0x154 ; <<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop>

00000000000177c0 <LBB58_34>
   12024	bf 70 00 00 00 00 00 00	r0 = r7
   12025	95 00 00 00 00 00 00 00	exit

00000000000177d0 <core::cell::Cell<T>::replace>
   12026	79 10 00 00 00 00 00 00	r0 = *(u64 *)(r1 + 0x0)
   12027	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   12028	95 00 00 00 00 00 00 00	exit

00000000000177e8 <<T as core::convert::Into<U>>::into>
   12029	bf 10 00 00 00 00 00 00	r0 = r1
   12030	95 00 00 00 00 00 00 00	exit

00000000000177f8 <core::ptr::drop_in_place>
   12031	95 00 00 00 00 00 00 00	exit

0000000000017800 <<T as core::convert::From<T>>::from>
   12032	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   12033	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   12034	95 00 00 00 00 00 00 00	exit

0000000000017818 <<T as core::convert::From<T>>::from>
   12035	95 00 00 00 00 00 00 00	exit

0000000000017820 <solana_program::pubkey::Pubkey::new>
   12036	bf 16 00 00 00 00 00 00	r6 = r1
   12037	bf a1 00 00 00 00 00 00	r1 = r10
   12038	07 01 00 00 d0 ff ff ff	r1 += -0x30
   12039	85 10 00 00 e3 fc ff ff	call -0x31d ; <core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from>
   12040	71 a1 d0 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0x30)
   12041	55 01 0b 00 01 00 00 00	if r1 != 0x1 goto +0xb <LBB59_2>
   12042	bf a3 00 00 00 00 00 00	r3 = r10
   12043	07 03 00 00 f8 ff ff ff	r3 += -0x8
   12044	18 01 00 00 55 3b 02 00 00 00 00 00 00 00 00 00	r1 = 0x23b55 ll
   12046	b7 02 00 00 29 00 00 00	r2 = 0x29
   12047	18 04 00 00 40 50 02 00 00 00 00 00 00 00 00 00	r4 = 0x25040 ll
   12049	18 05 00 00 60 50 02 00 00 00 00 00 00 00 00 00	r5 = 0x25060 ll
   12051	85 10 00 00 c5 06 00 00	call 0x6c5 ; <core::result::unwrap_failed>
   12052	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000178a8 <LBB59_2>
   12053	79 a1 e9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x17)
   12054	7b 16 18 00 00 00 00 00	*(u64 *)(r6 + 0x18) = r1
   12055	79 a1 e1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x1f)
   12056	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
   12057	79 a1 d9 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x27)
   12058	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   12059	79 a1 d1 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x2f)
   12060	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   12061	95 00 00 00 00 00 00 00	exit

00000000000178f0 <solana_program::pubkey::Pubkey::new_from_array>
   12062	79 23 18 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x18)
   12063	7b 31 18 00 00 00 00 00	*(u64 *)(r1 + 0x18) = r3
   12064	79 23 10 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x10)
   12065	7b 31 10 00 00 00 00 00	*(u64 *)(r1 + 0x10) = r3
   12066	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   12067	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   12068	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   12069	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   12070	95 00 00 00 00 00 00 00	exit

0000000000017938 <<solana_program::pubkey::Pubkey as core::convert::AsRef<[u8]>>::as_ref>
   12071	b7 03 00 00 20 00 00 00	r3 = 0x20
   12072	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   12073	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   12074	95 00 00 00 00 00 00 00	exit

0000000000017958 <core::ptr::align_offset>
   12075	bf 20 00 00 00 00 00 00	r0 = r2
   12076	0f 10 00 00 00 00 00 00	r0 += r1
   12077	07 00 00 00 ff ff ff ff	r0 += -0x1
   12078	87 02 00 00 00 00 00 00	r2 = -r2
   12079	5f 20 00 00 00 00 00 00	r0 &= r2
   12080	1f 10 00 00 00 00 00 00	r0 -= r1
   12081	95 00 00 00 00 00 00 00	exit

0000000000017990 <solana_program::rent::Rent::minimum_balance>
   12082	bf 16 00 00 00 00 00 00	r6 = r1
   12083	07 02 00 00 80 00 00 00	r2 += 0x80
   12084	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   12085	2f 21 00 00 00 00 00 00	r1 *= r2
   12086	85 10 00 00 ca 0f 00 00	call 0xfca ; <__floatundidf>
   12087	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   12088	bf 02 00 00 00 00 00 00	r2 = r0
   12089	85 10 00 00 04 0e 00 00	call 0xe04 ; <__muldf3>
   12090	bf 06 00 00 00 00 00 00	r6 = r0
   12091	bf 61 00 00 00 00 00 00	r1 = r6
   12092	b7 02 00 00 00 00 00 00	r2 = 0x0
   12093	85 10 00 00 99 0e 00 00	call 0xe99 ; <__gtdf2>
   12094	67 00 00 00 20 00 00 00	r0 <<= 0x20
   12095	c7 00 00 00 20 00 00 00	r0 s>>= 0x20
   12096	bf 61 00 00 00 00 00 00	r1 = r6
   12097	65 00 01 00 00 00 00 00	if r0 s> 0x0 goto +0x1 <LBB45_2>
   12098	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000017a18 <LBB45_2>
   12099	85 10 00 00 79 0e 00 00	call 0xe79 ; <__fixunsdfdi>
   12100	bf 07 00 00 00 00 00 00	r7 = r0
   12101	bf 61 00 00 00 00 00 00	r1 = r6
   12102	18 02 00 00 ff ff ff ff 00 00 00 00 ff ff ef 43	r2 = 0x43efffffffffffff ll
   12104	85 10 00 00 8e 0e 00 00	call 0xe8e ; <__gtdf2>
   12105	bf 01 00 00 00 00 00 00	r1 = r0
   12106	67 01 00 00 20 00 00 00	r1 <<= 0x20
   12107	c7 01 00 00 20 00 00 00	r1 s>>= 0x20
   12108	b7 00 00 00 ff ff ff ff	r0 = -0x1
   12109	65 01 01 00 00 00 00 00	if r1 s> 0x0 goto +0x1 <LBB45_4>
   12110	bf 70 00 00 00 00 00 00	r0 = r7

0000000000017a78 <LBB45_4>
   12111	95 00 00 00 00 00 00 00	exit

0000000000017a80 <solana_program::rent::Rent::is_exempt>
   12112	bf 26 00 00 00 00 00 00	r6 = r2
   12113	bf 17 00 00 00 00 00 00	r7 = r1
   12114	07 03 00 00 80 00 00 00	r3 += 0x80
   12115	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
   12116	2f 31 00 00 00 00 00 00	r1 *= r3
   12117	85 10 00 00 ab 0f 00 00	call 0xfab ; <__floatundidf>
   12118	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
   12119	bf 02 00 00 00 00 00 00	r2 = r0
   12120	85 10 00 00 e5 0d 00 00	call 0xde5 ; <__muldf3>
   12121	bf 07 00 00 00 00 00 00	r7 = r0
   12122	bf 71 00 00 00 00 00 00	r1 = r7
   12123	b7 02 00 00 00 00 00 00	r2 = 0x0
   12124	85 10 00 00 7a 0e 00 00	call 0xe7a ; <__gtdf2>
   12125	67 00 00 00 20 00 00 00	r0 <<= 0x20
   12126	c7 00 00 00 20 00 00 00	r0 s>>= 0x20
   12127	bf 71 00 00 00 00 00 00	r1 = r7
   12128	65 00 01 00 00 00 00 00	if r0 s> 0x0 goto +0x1 <LBB46_2>
   12129	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000017b10 <LBB46_2>
   12130	85 10 00 00 5a 0e 00 00	call 0xe5a ; <__fixunsdfdi>
   12131	bf 08 00 00 00 00 00 00	r8 = r0
   12132	bf 71 00 00 00 00 00 00	r1 = r7
   12133	18 02 00 00 ff ff ff ff 00 00 00 00 ff ff ef 43	r2 = 0x43efffffffffffff ll
   12135	85 10 00 00 6f 0e 00 00	call 0xe6f ; <__gtdf2>
   12136	67 00 00 00 20 00 00 00	r0 <<= 0x20
   12137	c7 00 00 00 20 00 00 00	r0 s>>= 0x20
   12138	b7 01 00 00 ff ff ff ff	r1 = -0x1
   12139	65 00 01 00 00 00 00 00	if r0 s> 0x0 goto +0x1 <LBB46_4>
   12140	bf 81 00 00 00 00 00 00	r1 = r8

0000000000017b68 <LBB46_4>
   12141	b7 00 00 00 01 00 00 00	r0 = 0x1
   12142	3d 16 01 00 00 00 00 00	if r6 >= r1 goto +0x1 <LBB46_6>
   12143	b7 00 00 00 00 00 00 00	r0 = 0x0

0000000000017b80 <LBB46_6>
   12144	95 00 00 00 00 00 00 00	exit

0000000000017b88 <solana_program::sysvar::rent::<impl solana_program::sysvar::SysvarId for solana_program::rent::Rent>::check_id>
   12145	85 10 00 00 f5 fc ff ff	call -0x30b ; <solana_program::sysvar::rent::check_id>
   12146	95 00 00 00 00 00 00 00	exit

0000000000017b98 <<T as core::convert::Into<U>>::into>
   12147	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
   12148	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   12149	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   12150	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
   12151	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
   12152	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   12153	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   12154	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12155	bf a1 00 00 00 00 00 00	r1 = r10
   12156	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12157	85 10 00 00 05 00 00 00	call 0x5 ; <<alloc::boxed::Box<T> as core::convert::From<T>>::from>
   12158	95 00 00 00 00 00 00 00	exit

0000000000017bf8 <bincode::de::read::SliceReader::new>
   12159	7b 31 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r3
   12160	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r2
   12161	95 00 00 00 00 00 00 00	exit

0000000000017c10 <bincode::config::DefaultOptions::new>
   12162	95 00 00 00 00 00 00 00	exit

0000000000017c18 <<alloc::boxed::Box<T> as core::convert::From<T>>::from>
   12163	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
   12164	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   12165	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   12166	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
   12167	79 12 08 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x8)
   12168	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   12169	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   12170	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12171	b7 01 00 00 20 00 00 00	r1 = 0x20
   12172	b7 02 00 00 08 00 00 00	r2 = 0x8
   12173	85 10 00 00 52 fc ff ff	call -0x3ae ; <__rust_alloc>
   12174	55 00 05 00 00 00 00 00	if r0 != 0x0 goto +0x5 <LBB0_2>
   12175	85 10 00 00 f2 ff ff ff	call -0xe ; <bincode::config::DefaultOptions::new>
   12176	b7 01 00 00 20 00 00 00	r1 = 0x20
   12177	b7 02 00 00 08 00 00 00	r2 = 0x8
   12178	85 10 00 00 f6 00 00 00	call 0xf6 ; <alloc::alloc::handle_alloc_error>
   12179	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017ca0 <LBB0_2>
   12180	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   12181	7b 10 18 00 00 00 00 00	*(u64 *)(r0 + 0x18) = r1
   12182	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   12183	7b 10 10 00 00 00 00 00	*(u64 *)(r0 + 0x10) = r1
   12184	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   12185	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 0x8) = r1
   12186	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   12187	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0x0) = r1
   12188	95 00 00 00 00 00 00 00	exit

0000000000017ce8 <bincode::error::<impl core::convert::From<std::io::error::Error> for alloc::boxed::Box<bincode::error::ErrorKind>>::from>
   12189	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r2
   12190	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12191	b7 01 00 00 00 00 00 00	r1 = 0x0
   12192	73 1a e0 ff 00 00 00 00	*(u8 *)(r10 - 0x20) = r1
   12193	bf a1 00 00 00 00 00 00	r1 = r10
   12194	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12195	85 10 00 00 cf ff ff ff	call -0x31 ; <<T as core::convert::Into<U>>::into>
   12196	95 00 00 00 00 00 00 00	exit

0000000000017d28 <<&str as serde::de::Expected>::fmt>
   12197	bf 24 00 00 00 00 00 00	r4 = r2
   12198	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   12199	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   12200	bf 41 00 00 00 00 00 00	r1 = r4
   12201	85 10 00 00 04 0a 00 00	call 0xa04 ; <<core::fmt::Formatter as core::fmt::Write>::write_str>
   12202	95 00 00 00 00 00 00 00	exit

0000000000017d58 <<dyn serde::de::Expected as core::fmt::Display>::fmt>
   12203	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   12204	bf 32 00 00 00 00 00 00	r2 = r3
   12205	8d 00 00 00 04 00 00 00	callx r4
   12206	95 00 00 00 00 00 00 00	exit

0000000000017d78 <std::process::abort>
   12207	85 10 00 00 06 00 00 00	call 0x6 ; <std::sys::bpf::abort_internal>
   12208	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017d88 <std::sys::bpf::sol_log>
   12209	85 10 00 00 ff ff ff ff	call -0x1 ; sol_log_
   12210	95 00 00 00 00 00 00 00	exit

0000000000017d98 <std::sys::bpf::panic>
   12211	85 10 00 00 ff ff ff ff	call -0x1 ; <std::sys::bpf::panic>
   12212	85 10 00 00 ff ff ff ff	call -0x1 ; abort
   12213	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017db0 <std::sys::bpf::abort_internal>
   12214	85 10 00 00 ff ff ff ff	call -0x1 ; abort
   12215	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017dc0 <rust_oom>
   12216	18 01 00 00 7e 3b 02 00 00 00 00 00 00 00 00 00	r1 = 0x23b7e ll
   12218	b7 02 00 00 2e 00 00 00	r2 = 0x2e
   12219	85 10 00 00 f5 ff ff ff	call -0xb ; <std::sys::bpf::sol_log>
   12220	85 10 00 00 f2 ff ff ff	call -0xe ; <std::process::abort>
   12221	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017df0 <rust_begin_unwind>
   12222	bf 16 00 00 00 00 00 00	r6 = r1
   12223	18 01 00 00 ac 3b 02 00 00 00 00 00 00 00 00 00	r1 = 0x23bac ll
   12225	b7 02 00 00 17 00 00 00	r2 = 0x17
   12226	85 10 00 00 ee ff ff ff	call -0x12 ; <std::sys::bpf::sol_log>
   12227	bf 61 00 00 00 00 00 00	r1 = r6
   12228	85 10 00 00 ee ff ff ff	call -0x12 ; <std::sys::bpf::panic>
   12229	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000017e30 <alloc::raw_vec::RawVec<T,A>::try_reserve>
   12230	bf 27 00 00 00 00 00 00	r7 = r2
   12231	bf 16 00 00 00 00 00 00	r6 = r1
   12232	b7 08 00 00 00 00 00 00	r8 = 0x0
   12233	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
   12234	bf 12 00 00 00 00 00 00	r2 = r1
   12235	1f 32 00 00 00 00 00 00	r2 -= r3
   12236	3d 42 2d 00 00 00 00 00	if r2 >= r4 goto +0x2d <LBB6_15>
   12237	bf 35 00 00 00 00 00 00	r5 = r3
   12238	0f 45 00 00 00 00 00 00	r5 += r4
   12239	b7 02 00 00 01 00 00 00	r2 = 0x1
   12240	2d 53 01 00 00 00 00 00	if r3 > r5 goto +0x1 <LBB6_3>
   12241	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000017e90 <LBB6_3>
   12242	57 02 00 00 01 00 00 00	r2 &= 0x1
   12243	55 02 0d 00 00 00 00 00	if r2 != 0x0 goto +0xd <LBB6_12>
   12244	bf 12 00 00 00 00 00 00	r2 = r1
   12245	67 02 00 00 01 00 00 00	r2 <<= 0x1
   12246	2d 52 01 00 00 00 00 00	if r2 > r5 goto +0x1 <LBB6_6>
   12247	bf 52 00 00 00 00 00 00	r2 = r5

0000000000017ec0 <LBB6_6>
   12248	25 02 01 00 08 00 00 00	if r2 > 0x8 goto +0x1 <LBB6_8>
   12249	b7 02 00 00 08 00 00 00	r2 = 0x8

0000000000017ed0 <LBB6_8>
   12250	15 01 0b 00 00 00 00 00	if r1 == 0x0 goto +0xb <LBB6_10>
   12251	79 73 00 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x0)
   12252	b7 04 00 00 01 00 00 00	r4 = 0x1
   12253	7b 4a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r4
   12254	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12255	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
   12256	05 00 07 00 00 00 00 00	goto +0x7 <LBB6_11>

0000000000017f08 <LBB6_12>
   12257	b7 01 00 00 00 00 00 00	r1 = 0x0
   12258	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
   12259	7b 56 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r5
   12260	b7 08 00 00 01 00 00 00	r8 = 0x1
   12261	05 00 14 00 00 00 00 00	goto +0x14 <LBB6_15>

0000000000017f30 <LBB6_10>
   12262	b7 01 00 00 00 00 00 00	r1 = 0x0
   12263	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1

0000000000017f40 <LBB6_11>
   12264	bf a1 00 00 00 00 00 00	r1 = r10
   12265	07 01 00 00 d0 ff ff ff	r1 += -0x30
   12266	b7 08 00 00 01 00 00 00	r8 = 0x1
   12267	bf a4 00 00 00 00 00 00	r4 = r10
   12268	07 04 00 00 e8 ff ff ff	r4 += -0x18
   12269	b7 03 00 00 01 00 00 00	r3 = 0x1
   12270	85 10 00 00 0d 00 00 00	call 0xd ; <alloc::raw_vec::finish_grow>
   12271	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   12272	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
   12273	79 a3 d0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x30)
   12274	15 03 01 00 01 00 00 00	if r3 == 0x1 goto +0x1 <LBB6_14>
   12275	05 00 03 00 00 00 00 00	goto +0x3 <LBB6_13>

0000000000017fa0 <LBB6_14>
   12276	7b 26 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r2
   12277	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   12278	05 00 03 00 00 00 00 00	goto +0x3 <LBB6_15>

0000000000017fb8 <LBB6_13>
   12279	7b 27 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r2
   12280	7b 17 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r1
   12281	b7 08 00 00 00 00 00 00	r8 = 0x0

0000000000017fd0 <LBB6_15>
   12282	7b 86 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r8
   12283	95 00 00 00 00 00 00 00	exit

0000000000017fe0 <alloc::raw_vec::finish_grow>
   12284	bf 38 00 00 00 00 00 00	r8 = r3
   12285	bf 27 00 00 00 00 00 00	r7 = r2
   12286	bf 16 00 00 00 00 00 00	r6 = r1
   12287	15 08 10 00 00 00 00 00	if r8 == 0x0 goto +0x10 <LBB9_11>
   12288	79 41 00 00 00 00 00 00	r1 = *(u64 *)(r4 + 0x0)
   12289	55 01 06 00 00 00 00 00	if r1 != 0x0 goto +0x6 <LBB9_4>
   12290	15 07 1a 00 00 00 00 00	if r7 == 0x0 goto +0x1a <LBB9_9>
   12291	bf 71 00 00 00 00 00 00	r1 = r7
   12292	bf 82 00 00 00 00 00 00	r2 = r8
   12293	85 10 00 00 da fb ff ff	call -0x426 ; <__rust_alloc>
   12294	15 00 12 00 00 00 00 00	if r0 == 0x0 goto +0x12 <LBB9_8>
   12295	05 00 16 00 00 00 00 00	goto +0x16 <LBB9_10>

0000000000018040 <LBB9_4>
   12296	79 42 08 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x8)
   12297	55 02 0a 00 00 00 00 00	if r2 != 0x0 goto +0xa <LBB9_7>
   12298	15 07 12 00 00 00 00 00	if r7 == 0x0 goto +0x12 <LBB9_9>
   12299	bf 71 00 00 00 00 00 00	r1 = r7
   12300	bf 82 00 00 00 00 00 00	r2 = r8
   12301	85 10 00 00 d2 fb ff ff	call -0x42e ; <__rust_alloc>
   12302	15 00 0a 00 00 00 00 00	if r0 == 0x0 goto +0xa <LBB9_8>
   12303	05 00 0e 00 00 00 00 00	goto +0xe <LBB9_10>

0000000000018080 <LBB9_11>
   12304	7b 76 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r7
   12305	b7 01 00 00 01 00 00 00	r1 = 0x1
   12306	b7 07 00 00 00 00 00 00	r7 = 0x0
   12307	05 00 0c 00 00 00 00 00	goto +0xc <LBB9_12>

00000000000180a0 <LBB9_7>
   12308	bf 83 00 00 00 00 00 00	r3 = r8
   12309	bf 74 00 00 00 00 00 00	r4 = r7
   12310	85 10 00 00 cd fb ff ff	call -0x433 ; <__rust_realloc>
   12311	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB9_8>
   12312	05 00 05 00 00 00 00 00	goto +0x5 <LBB9_10>

00000000000180c8 <LBB9_8>
   12313	7b 76 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r7
   12314	b7 01 00 00 01 00 00 00	r1 = 0x1
   12315	bf 87 00 00 00 00 00 00	r7 = r8
   12316	05 00 03 00 00 00 00 00	goto +0x3 <LBB9_12>

00000000000180e8 <LBB9_9>
   12317	bf 80 00 00 00 00 00 00	r0 = r8

00000000000180f0 <LBB9_10>
   12318	7b 06 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r0
   12319	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000018100 <LBB9_12>
   12320	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0x0) = r1
   12321	7b 76 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r7
   12322	95 00 00 00 00 00 00 00	exit

0000000000018118 <alloc::raw_vec::capacity_overflow>
   12323	18 01 00 00 df 3b 02 00 00 00 00 00 00 00 00 00	r1 = 0x23bdf ll
   12325	b7 02 00 00 11 00 00 00	r2 = 0x11
   12326	18 03 00 00 78 50 02 00 00 00 00 00 00 00 00 00	r3 = 0x25078 ll
   12328	85 10 00 00 bb 06 00 00	call 0x6bb ; <core::panicking::panic>
   12329	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018150 <core::ptr::drop_in_place>
   12330	95 00 00 00 00 00 00 00	exit

0000000000018158 <__rg_oom>
   12331	85 10 00 00 8c ff ff ff	call -0x74 ; <rust_oom>
   12332	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018168 <alloc::fmt::format>
   12333	bf 26 00 00 00 00 00 00	r6 = r2
   12334	bf 17 00 00 00 00 00 00	r7 = r1
   12335	b7 08 00 00 00 00 00 00	r8 = 0x0
   12336	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   12337	79 62 08 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x8)
   12338	bf 23 00 00 00 00 00 00	r3 = r2
   12339	67 03 00 00 04 00 00 00	r3 <<= 0x4
   12340	15 03 09 00 00 00 00 00	if r3 == 0x0 goto +0x9 <LBB4_3>
   12341	b7 05 00 00 00 00 00 00	r5 = 0x0
   12342	bf 14 00 00 00 00 00 00	r4 = r1
   12343	07 04 00 00 08 00 00 00	r4 += 0x8

00000000000181c0 <LBB4_2>
   12344	79 48 00 00 00 00 00 00	r8 = *(u64 *)(r4 + 0x0)
   12345	0f 58 00 00 00 00 00 00	r8 += r5
   12346	07 04 00 00 10 00 00 00	r4 += 0x10
   12347	07 03 00 00 f0 ff ff ff	r3 += -0x10
   12348	bf 85 00 00 00 00 00 00	r5 = r8
   12349	55 03 fa ff 00 00 00 00	if r3 != 0x0 goto -0x6 <LBB4_2>

00000000000181f0 <LBB4_3>
   12350	79 63 28 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x28)
   12351	15 03 37 00 00 00 00 00	if r3 == 0x0 goto +0x37 <LBB4_11>
   12352	15 02 42 00 00 00 00 00	if r2 == 0x0 goto +0x42 <LBB4_10>
   12353	79 11 08 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x8)
   12354	55 01 04 00 00 00 00 00	if r1 != 0x0 goto +0x4 <LBB4_5>
   12355	b7 00 00 00 01 00 00 00	r0 = 0x1
   12356	b7 01 00 00 00 00 00 00	r1 = 0x0
   12357	b7 02 00 00 10 00 00 00	r2 = 0x10
   12358	2d 82 0b 00 00 00 00 00	if r2 > r8 goto +0xb <LBB4_14>

0000000000018238 <LBB4_5>
   12359	bf 82 00 00 00 00 00 00	r2 = r8
   12360	0f 22 00 00 00 00 00 00	r2 += r2
   12361	b7 01 00 00 00 00 00 00	r1 = 0x0
   12362	b7 00 00 00 01 00 00 00	r0 = 0x1
   12363	b7 03 00 00 01 00 00 00	r3 = 0x1
   12364	2d 28 01 00 00 00 00 00	if r8 > r2 goto +0x1 <LBB4_7>
   12365	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000018270 <LBB4_7>
   12366	57 03 00 00 01 00 00 00	r3 &= 0x1
   12367	bf 28 00 00 00 00 00 00	r8 = r2
   12368	55 03 01 00 00 00 00 00	if r3 != 0x0 goto +0x1 <LBB4_14>
   12369	05 00 25 00 00 00 00 00	goto +0x25 <LBB4_11>

0000000000018290 <LBB4_14>
   12370	b7 02 00 00 00 00 00 00	r2 = 0x0
   12371	7b 27 10 00 00 00 00 00	*(u64 *)(r7 + 0x10) = r2
   12372	7b 17 08 00 00 00 00 00	*(u64 *)(r7 + 0x8) = r1
   12373	7b 07 00 00 00 00 00 00	*(u64 *)(r7 + 0x0) = r0
   12374	7b 7a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r7
   12375	79 61 28 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x28)
   12376	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12377	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   12378	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12379	79 61 18 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x18)
   12380	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12381	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   12382	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12383	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   12384	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12385	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   12386	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12387	bf a1 00 00 00 00 00 00	r1 = r10
   12388	07 01 00 00 c8 ff ff ff	r1 += -0x38
   12389	bf a3 00 00 00 00 00 00	r3 = r10
   12390	07 03 00 00 d0 ff ff ff	r3 += -0x30
   12391	18 02 00 00 e0 50 02 00 00 00 00 00 00 00 00 00	r2 = 0x250e0 ll
   12393	85 10 00 00 cc 06 00 00	call 0x6cc ; <core::fmt::write>
   12394	15 00 0b 00 00 00 00 00	if r0 == 0x0 goto +0xb <LBB4_16>
   12395	bf a3 00 00 00 00 00 00	r3 = r10
   12396	07 03 00 00 d0 ff ff ff	r3 += -0x30
   12397	18 01 00 00 3a 3c 02 00 00 00 00 00 00 00 00 00	r1 = 0x23c3a ll
   12399	b7 02 00 00 33 00 00 00	r2 = 0x33
   12400	18 04 00 00 a8 50 02 00 00 00 00 00 00 00 00 00	r4 = 0x250a8 ll
   12402	18 05 00 00 c8 50 02 00 00 00 00 00 00 00 00 00	r5 = 0x250c8 ll
   12404	85 10 00 00 64 05 00 00	call 0x564 ; <core::result::unwrap_failed>
   12405	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000183b0 <LBB4_16>
   12406	95 00 00 00 00 00 00 00	exit

00000000000183b8 <LBB4_11>
   12407	b7 00 00 00 01 00 00 00	r0 = 0x1
   12408	b7 01 00 00 00 00 00 00	r1 = 0x0
   12409	15 08 d8 ff 00 00 00 00	if r8 == 0x0 goto -0x28 <LBB4_14>
   12410	bf 81 00 00 00 00 00 00	r1 = r8
   12411	b7 02 00 00 01 00 00 00	r2 = 0x1
   12412	85 10 00 00 63 fb ff ff	call -0x49d ; <__rust_alloc>
   12413	bf 81 00 00 00 00 00 00	r1 = r8
   12414	55 00 d3 ff 00 00 00 00	if r0 != 0x0 goto -0x2d <LBB4_14>
   12415	bf 81 00 00 00 00 00 00	r1 = r8
   12416	b7 02 00 00 01 00 00 00	r2 = 0x1
   12417	85 10 00 00 07 00 00 00	call 0x7 ; <alloc::alloc::handle_alloc_error>
   12418	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018418 <LBB4_10>
   12419	b7 01 00 00 00 00 00 00	r1 = 0x0
   12420	b7 02 00 00 00 00 00 00	r2 = 0x0
   12421	18 03 00 00 90 50 02 00 00 00 00 00 00 00 00 00	r3 = 0x25090 ll
   12423	85 10 00 00 6e 06 00 00	call 0x66e ; <core::panicking::panic_bounds_check>
   12424	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018448 <alloc::alloc::handle_alloc_error>
   12425	85 10 00 00 5e fb ff ff	call -0x4a2 ; <__rust_alloc_error_handler>
   12426	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018458 <core::ptr::drop_in_place>
   12427	95 00 00 00 00 00 00 00	exit

0000000000018460 <<&mut W as core::fmt::Write>::write_char>
   12428	bf 27 00 00 00 00 00 00	r7 = r2
   12429	79 16 00 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x0)
   12430	bf 71 00 00 00 00 00 00	r1 = r7
   12431	67 01 00 00 20 00 00 00	r1 <<= 0x20
   12432	77 01 00 00 20 00 00 00	r1 >>= 0x20
   12433	b7 02 00 00 80 00 00 00	r2 = 0x80
   12434	2d 12 17 00 00 00 00 00	if r2 > r1 goto +0x17 <LBB2_4>
   12435	b7 02 00 00 00 00 00 00	r2 = 0x0
   12436	63 2a e4 ff 00 00 00 00	*(u32 *)(r10 - 0x1c) = r2
   12437	b7 02 00 00 00 08 00 00	r2 = 0x800
   12438	2d 12 20 00 00 00 00 00	if r2 > r1 goto +0x20 <LBB2_8>
   12439	bf 71 00 00 00 00 00 00	r1 = r7
   12440	67 01 00 00 20 00 00 00	r1 <<= 0x20
   12441	77 01 00 00 20 00 00 00	r1 >>= 0x20
   12442	b7 02 00 00 00 00 01 00	r2 = 0x10000
   12443	2d 12 01 00 00 00 00 00	if r2 > r1 goto +0x1 <LBB2_3>
   12444	05 00 2a 00 00 00 00 00	goto +0x2a <LBB2_11>

00000000000184e8 <LBB2_3>
   12445	57 07 00 00 3f 00 00 00	r7 &= 0x3f
   12446	47 07 00 00 80 00 00 00	r7 |= 0x80
   12447	73 7a e6 ff 00 00 00 00	*(u8 *)(r10 - 0x1a) = r7
   12448	bf 12 00 00 00 00 00 00	r2 = r1
   12449	77 02 00 00 0c 00 00 00	r2 >>= 0xc
   12450	47 02 00 00 e0 00 00 00	r2 |= 0xe0
   12451	73 2a e4 ff 00 00 00 00	*(u8 *)(r10 - 0x1c) = r2
   12452	77 01 00 00 06 00 00 00	r1 >>= 0x6
   12453	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   12454	47 01 00 00 80 00 00 00	r1 |= 0x80
   12455	73 1a e5 ff 00 00 00 00	*(u8 *)(r10 - 0x1b) = r1
   12456	b7 07 00 00 03 00 00 00	r7 = 0x3
   12457	05 00 2e 00 00 00 00 00	goto +0x2e <LBB2_12>

0000000000018550 <LBB2_4>
   12458	79 63 10 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x10)
   12459	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   12460	5d 13 14 00 00 00 00 00	if r3 != r1 goto +0x14 <LBB2_10>
   12461	bf a1 00 00 00 00 00 00	r1 = r10
   12462	07 01 00 00 e8 ff ff ff	r1 += -0x18
   12463	bf 62 00 00 00 00 00 00	r2 = r6
   12464	b7 04 00 00 01 00 00 00	r4 = 0x1
   12465	85 10 00 00 14 ff ff ff	call -0xec ; <alloc::raw_vec::RawVec<T,A>::try_reserve>
   12466	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   12467	55 01 0c 00 01 00 00 00	if r1 != 0x1 goto +0xc <LBB2_9>
   12468	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   12469	55 02 3a 00 00 00 00 00	if r2 != 0x0 goto +0x3a <LBB2_17>
   12470	05 00 2b 00 00 00 00 00	goto +0x2b <LBB2_14>

00000000000185b8 <LBB2_8>
   12471	bf 71 00 00 00 00 00 00	r1 = r7
   12472	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   12473	47 01 00 00 80 00 00 00	r1 |= 0x80
   12474	73 1a e5 ff 00 00 00 00	*(u8 *)(r10 - 0x1b) = r1
   12475	77 07 00 00 06 00 00 00	r7 >>= 0x6
   12476	47 07 00 00 c0 00 00 00	r7 |= 0xc0
   12477	73 7a e4 ff 00 00 00 00	*(u8 *)(r10 - 0x1c) = r7
   12478	b7 07 00 00 02 00 00 00	r7 = 0x2
   12479	05 00 18 00 00 00 00 00	goto +0x18 <LBB2_12>

0000000000018600 <LBB2_9>
   12480	79 63 10 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x10)

0000000000018608 <LBB2_10>
   12481	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   12482	0f 31 00 00 00 00 00 00	r1 += r3
   12483	73 71 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r7
   12484	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   12485	07 01 00 00 01 00 00 00	r1 += 0x1
   12486	05 00 26 00 00 00 00 00	goto +0x26 <LBB2_16>

0000000000018638 <LBB2_11>
   12487	57 07 00 00 3f 00 00 00	r7 &= 0x3f
   12488	47 07 00 00 80 00 00 00	r7 |= 0x80
   12489	73 7a e7 ff 00 00 00 00	*(u8 *)(r10 - 0x19) = r7
   12490	bf 12 00 00 00 00 00 00	r2 = r1
   12491	77 02 00 00 12 00 00 00	r2 >>= 0x12
   12492	47 02 00 00 f0 00 00 00	r2 |= 0xf0
   12493	73 2a e4 ff 00 00 00 00	*(u8 *)(r10 - 0x1c) = r2
   12494	bf 12 00 00 00 00 00 00	r2 = r1
   12495	77 02 00 00 06 00 00 00	r2 >>= 0x6
   12496	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   12497	47 02 00 00 80 00 00 00	r2 |= 0x80
   12498	73 2a e6 ff 00 00 00 00	*(u8 *)(r10 - 0x1a) = r2
   12499	77 01 00 00 0c 00 00 00	r1 >>= 0xc
   12500	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   12501	47 01 00 00 80 00 00 00	r1 |= 0x80
   12502	73 1a e5 ff 00 00 00 00	*(u8 *)(r10 - 0x1b) = r1
   12503	b7 07 00 00 04 00 00 00	r7 = 0x4

00000000000186c0 <LBB2_12>
   12504	79 63 10 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x10)
   12505	bf a1 00 00 00 00 00 00	r1 = r10
   12506	07 01 00 00 e8 ff ff ff	r1 += -0x18
   12507	bf 62 00 00 00 00 00 00	r2 = r6
   12508	bf 74 00 00 00 00 00 00	r4 = r7
   12509	85 10 00 00 e8 fe ff ff	call -0x118 ; <alloc::raw_vec::RawVec<T,A>::try_reserve>
   12510	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   12511	55 01 04 00 01 00 00 00	if r1 != 0x1 goto +0x4 <LBB2_15>
   12512	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   12513	55 02 0e 00 00 00 00 00	if r2 != 0x0 goto +0xe <LBB2_17>

0000000000018710 <LBB2_14>
   12514	85 10 00 00 40 ff ff ff	call -0xc0 ; <alloc::raw_vec::capacity_overflow>
   12515	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018720 <LBB2_15>
   12516	79 62 10 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x10)
   12517	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x0)
   12518	0f 21 00 00 00 00 00 00	r1 += r2
   12519	bf a2 00 00 00 00 00 00	r2 = r10
   12520	07 02 00 00 e4 ff ff ff	r2 += -0x1c
   12521	bf 73 00 00 00 00 00 00	r3 = r7
   12522	85 10 00 00 55 0c 00 00	call 0xc55 ; <memcpy>
   12523	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x10)
   12524	0f 71 00 00 00 00 00 00	r1 += r7

0000000000018768 <LBB2_16>
   12525	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 0x10) = r1
   12526	b7 00 00 00 00 00 00 00	r0 = 0x0
   12527	95 00 00 00 00 00 00 00	exit

0000000000018780 <LBB2_17>
   12528	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   12529	85 10 00 00 97 ff ff ff	call -0x69 ; <alloc::alloc::handle_alloc_error>
   12530	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018798 <<&mut W as core::fmt::Write>::write_fmt>
   12531	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   12532	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   12533	79 21 28 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x28)
   12534	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12535	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   12536	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12537	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
   12538	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12539	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   12540	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12541	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   12542	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12543	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   12544	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12545	bf a1 00 00 00 00 00 00	r1 = r10
   12546	07 01 00 00 c8 ff ff ff	r1 += -0x38
   12547	bf a3 00 00 00 00 00 00	r3 = r10
   12548	07 03 00 00 d0 ff ff ff	r3 += -0x30
   12549	18 02 00 00 e0 50 02 00 00 00 00 00 00 00 00 00	r2 = 0x250e0 ll
   12551	85 10 00 00 2e 06 00 00	call 0x62e ; <core::fmt::write>
   12552	95 00 00 00 00 00 00 00	exit

0000000000018848 <<&mut W as core::fmt::Write>::write_str>
   12553	bf 36 00 00 00 00 00 00	r6 = r3
   12554	bf 28 00 00 00 00 00 00	r8 = r2
   12555	79 17 00 00 00 00 00 00	r7 = *(u64 *)(r1 + 0x0)
   12556	79 73 10 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x10)
   12557	bf a1 00 00 00 00 00 00	r1 = r10
   12558	07 01 00 00 e8 ff ff ff	r1 += -0x18
   12559	bf 72 00 00 00 00 00 00	r2 = r7
   12560	bf 64 00 00 00 00 00 00	r4 = r6
   12561	85 10 00 00 b4 fe ff ff	call -0x14c ; <alloc::raw_vec::RawVec<T,A>::try_reserve>
   12562	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   12563	55 01 04 00 01 00 00 00	if r1 != 0x1 goto +0x4 <LBB4_4>
   12564	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   12565	55 02 0d 00 00 00 00 00	if r2 != 0x0 goto +0xd <LBB4_3>
   12566	85 10 00 00 0c ff ff ff	call -0xf4 ; <alloc::raw_vec::capacity_overflow>
   12567	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000188c0 <LBB4_4>
   12568	79 72 10 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x10)
   12569	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
   12570	0f 21 00 00 00 00 00 00	r1 += r2
   12571	bf 82 00 00 00 00 00 00	r2 = r8
   12572	bf 63 00 00 00 00 00 00	r3 = r6
   12573	85 10 00 00 22 0c 00 00	call 0xc22 ; <memcpy>
   12574	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
   12575	0f 61 00 00 00 00 00 00	r1 += r6
   12576	7b 17 10 00 00 00 00 00	*(u64 *)(r7 + 0x10) = r1
   12577	b7 00 00 00 00 00 00 00	r0 = 0x0
   12578	95 00 00 00 00 00 00 00	exit

0000000000018918 <LBB4_3>
   12579	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   12580	85 10 00 00 64 ff ff ff	call -0x9c ; <alloc::alloc::handle_alloc_error>
   12581	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018930 <core::slice::index::slice_start_index_len_fail>
   12582	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   12583	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   12584	bf a1 00 00 00 00 00 00	r1 = r10
   12585	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12586	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12587	b7 01 00 00 00 00 00 00	r1 = 0x0
   12588	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   12589	b7 01 00 00 02 00 00 00	r1 = 0x2
   12590	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12591	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   12592	18 01 00 00 28 51 02 00 00 00 00 00 00 00 00 00	r1 = 0x25128 ll
   12594	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   12595	bf a1 00 00 00 00 00 00	r1 = r10
   12596	07 01 00 00 a8 ff ff ff	r1 += -0x58
   12597	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12598	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   12600	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12601	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12602	bf a1 00 00 00 00 00 00	r1 = r10
   12603	07 01 00 00 a0 ff ff ff	r1 += -0x60
   12604	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12605	bf a1 00 00 00 00 00 00	r1 = r10
   12606	07 01 00 00 b0 ff ff ff	r1 += -0x50
   12607	bf 32 00 00 00 00 00 00	r2 = r3
   12608	85 10 00 00 d1 05 00 00	call 0x5d1 ; <core::panicking::panic_fmt>
   12609	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018a10 <core::slice::index::slice_end_index_len_fail>
   12610	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   12611	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   12612	bf a1 00 00 00 00 00 00	r1 = r10
   12613	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12614	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12615	b7 01 00 00 00 00 00 00	r1 = 0x0
   12616	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   12617	b7 01 00 00 02 00 00 00	r1 = 0x2
   12618	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12619	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   12620	18 01 00 00 48 51 02 00 00 00 00 00 00 00 00 00	r1 = 0x25148 ll
   12622	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   12623	bf a1 00 00 00 00 00 00	r1 = r10
   12624	07 01 00 00 a8 ff ff ff	r1 += -0x58
   12625	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12626	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   12628	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12629	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12630	bf a1 00 00 00 00 00 00	r1 = r10
   12631	07 01 00 00 a0 ff ff ff	r1 += -0x60
   12632	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12633	bf a1 00 00 00 00 00 00	r1 = r10
   12634	07 01 00 00 b0 ff ff ff	r1 += -0x50
   12635	bf 32 00 00 00 00 00 00	r2 = r3
   12636	85 10 00 00 b5 05 00 00	call 0x5b5 ; <core::panicking::panic_fmt>
   12637	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018af0 <core::slice::index::slice_index_order_fail>
   12638	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   12639	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   12640	bf a1 00 00 00 00 00 00	r1 = r10
   12641	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12642	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12643	b7 01 00 00 00 00 00 00	r1 = 0x0
   12644	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   12645	b7 01 00 00 02 00 00 00	r1 = 0x2
   12646	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12647	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   12648	18 01 00 00 68 51 02 00 00 00 00 00 00 00 00 00	r1 = 0x25168 ll
   12650	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   12651	bf a1 00 00 00 00 00 00	r1 = r10
   12652	07 01 00 00 a8 ff ff ff	r1 += -0x58
   12653	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12654	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   12656	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12657	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12658	bf a1 00 00 00 00 00 00	r1 = r10
   12659	07 01 00 00 a0 ff ff ff	r1 += -0x60
   12660	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12661	bf a1 00 00 00 00 00 00	r1 = r10
   12662	07 01 00 00 b0 ff ff ff	r1 += -0x50
   12663	bf 32 00 00 00 00 00 00	r2 = r3
   12664	85 10 00 00 99 05 00 00	call 0x599 ; <core::panicking::panic_fmt>
   12665	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018bd0 <core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail>
   12666	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   12667	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   12668	b7 01 00 00 02 00 00 00	r1 = 0x2
   12669	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   12670	bf a1 00 00 00 00 00 00	r1 = r10
   12671	07 01 00 00 e0 ff ff ff	r1 += -0x20
   12672	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   12673	b7 01 00 00 00 00 00 00	r1 = 0x0
   12674	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   12675	b7 01 00 00 03 00 00 00	r1 = 0x3
   12676	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   12677	18 01 00 00 88 51 02 00 00 00 00 00 00 00 00 00	r1 = 0x25188 ll
   12679	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   12680	bf a1 00 00 00 00 00 00	r1 = r10
   12681	07 01 00 00 a0 ff ff ff	r1 += -0x60
   12682	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   12683	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   12685	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   12686	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   12687	bf a1 00 00 00 00 00 00	r1 = r10
   12688	07 01 00 00 a8 ff ff ff	r1 += -0x58
   12689	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   12690	bf a1 00 00 00 00 00 00	r1 = r10
   12691	07 01 00 00 b0 ff ff ff	r1 += -0x50
   12692	bf 32 00 00 00 00 00 00	r2 = r3
   12693	85 10 00 00 7c 05 00 00	call 0x57c ; <core::panicking::panic_fmt>
   12694	85 10 00 00 ff ff ff ff	call -0x1 ; abort

0000000000018cb8 <core::ptr::drop_in_place>
   12695	95 00 00 00 00 00 00 00	exit

0000000000018cc0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt>
   12696	bf 26 00 00 00 00 00 00	r6 = r2
   12697	bf 17 00 00 00 00 00 00	r7 = r1
   12698	61 62 30 00 00 00 00 00	r2 = *(u32 *)(r6 + 0x30)
   12699	bf 21 00 00 00 00 00 00	r1 = r2
   12700	57 01 00 00 10 00 00 00	r1 &= 0x10
   12701	55 01 48 00 00 00 00 00	if r1 != 0x0 goto +0x48 <LBB3_2>
   12702	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
   12703	57 02 00 00 20 00 00 00	r2 &= 0x20
   12704	15 02 01 00 00 00 00 00	if r2 == 0x0 goto +0x1 <LBB3_9>
   12705	05 00 48 00 00 00 00 00	goto +0x48 <LBB3_17>

0000000000018d10 <LBB3_9>
   12706	b7 02 00 00 27 00 00 00	r2 = 0x27
   12707	b7 03 00 00 10 27 00 00	r3 = 0x2710
   12708	2d 13 20 00 00 00 00 00	if r3 > r1 goto +0x20 <LBB3_13>
   12709	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000018d30 <LBB3_11>
   12710	bf 13 00 00 00 00 00 00	r3 = r1
   12711	37 01 00 00 10 27 00 00	r1 /= 0x2710
   12712	bf 14 00 00 00 00 00 00	r4 = r1
   12713	27 04 00 00 10 27 00 00	r4 *= 0x2710
   12714	bf 35 00 00 00 00 00 00	r5 = r3
   12715	1f 45 00 00 00 00 00 00	r5 -= r4
   12716	bf 54 00 00 00 00 00 00	r4 = r5
   12717	57 04 00 00 ff ff 00 00	r4 &= 0xffff
   12718	37 04 00 00 64 00 00 00	r4 /= 0x64
   12719	bf 40 00 00 00 00 00 00	r0 = r4
   12720	27 00 00 00 64 00 00 00	r0 *= 0x64
   12721	1f 05 00 00 00 00 00 00	r5 -= r0
   12722	bf a0 00 00 00 00 00 00	r0 = r10
   12723	07 00 00 00 80 ff ff ff	r0 += -0x80
   12724	0f 20 00 00 00 00 00 00	r0 += r2
   12725	67 04 00 00 01 00 00 00	r4 <<= 0x1
   12726	18 08 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r8 = 0x23ca2 ll
   12728	0f 48 00 00 00 00 00 00	r8 += r4
   12729	69 84 00 00 00 00 00 00	r4 = *(u16 *)(r8 + 0x0)
   12730	6b 40 23 00 00 00 00 00	*(u16 *)(r0 + 0x23) = r4
   12731	57 05 00 00 ff ff 00 00	r5 &= 0xffff
   12732	67 05 00 00 01 00 00 00	r5 <<= 0x1
   12733	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   12735	0f 54 00 00 00 00 00 00	r4 += r5
   12736	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   12737	6b 40 25 00 00 00 00 00	*(u16 *)(r0 + 0x25) = r4
   12738	07 02 00 00 fc ff ff ff	r2 += -0x4
   12739	25 03 e2 ff ff e0 f5 05	if r3 > 0x5f5e0ff goto -0x1e <LBB3_11>
   12740	07 02 00 00 27 00 00 00	r2 += 0x27

0000000000018e28 <LBB3_13>
   12741	65 01 01 00 63 00 00 00	if r1 s> 0x63 goto +0x1 <LBB3_14>
   12742	05 00 12 00 00 00 00 00	goto +0x12 <LBB3_15>

0000000000018e38 <LBB3_14>
   12743	bf 13 00 00 00 00 00 00	r3 = r1
   12744	57 03 00 00 ff ff 00 00	r3 &= 0xffff
   12745	37 03 00 00 64 00 00 00	r3 /= 0x64
   12746	bf 34 00 00 00 00 00 00	r4 = r3
   12747	27 04 00 00 64 00 00 00	r4 *= 0x64
   12748	1f 41 00 00 00 00 00 00	r1 -= r4
   12749	57 01 00 00 ff ff 00 00	r1 &= 0xffff
   12750	67 01 00 00 01 00 00 00	r1 <<= 0x1
   12751	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   12753	0f 14 00 00 00 00 00 00	r4 += r1
   12754	07 02 00 00 fe ff ff ff	r2 += -0x2
   12755	bf a1 00 00 00 00 00 00	r1 = r10
   12756	07 01 00 00 80 ff ff ff	r1 += -0x80
   12757	0f 21 00 00 00 00 00 00	r1 += r2
   12758	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   12759	6b 41 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r4
   12760	bf 31 00 00 00 00 00 00	r1 = r3

0000000000018ec8 <LBB3_15>
   12761	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12762	6d 13 38 00 00 00 00 00	if r3 s> r1 goto +0x38 <LBB3_24>
   12763	67 01 00 00 01 00 00 00	r1 <<= 0x1
   12764	18 03 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca2 ll
   12766	0f 13 00 00 00 00 00 00	r3 += r1
   12767	07 02 00 00 fe ff ff ff	r2 += -0x2
   12768	bf a1 00 00 00 00 00 00	r1 = r10
   12769	07 01 00 00 80 ff ff ff	r1 += -0x80
   12770	0f 21 00 00 00 00 00 00	r1 += r2
   12771	69 33 00 00 00 00 00 00	r3 = *(u16 *)(r3 + 0x0)
   12772	6b 31 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r3
   12773	05 00 33 00 00 00 00 00	goto +0x33 <LBB3_25>

0000000000018f30 <LBB3_2>
   12774	b7 02 00 00 00 00 00 00	r2 = 0x0
   12775	79 71 00 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x0)
   12776	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12777	05 00 ee 00 00 00 00 00	goto +0xee <LBB3_3>

0000000000018f50 <LBB3_17>
   12778	b7 02 00 00 00 00 00 00	r2 = 0x0
   12779	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12780	05 00 0c 00 00 00 00 00	goto +0xc <LBB3_18>

0000000000018f68 <LBB3_20>
   12781	bf a5 00 00 00 00 00 00	r5 = r10
   12782	07 05 00 00 80 ff ff ff	r5 += -0x80
   12783	0f 25 00 00 00 00 00 00	r5 += r2
   12784	73 45 7f 00 00 00 00 00	*(u8 *)(r5 + 0x7f) = r4
   12785	07 02 00 00 ff ff ff ff	r2 += -0x1
   12786	77 01 00 00 04 00 00 00	r1 >>= 0x4
   12787	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB3_18>
   12788	bf 21 00 00 00 00 00 00	r1 = r2
   12789	07 01 00 00 80 00 00 00	r1 += 0x80
   12790	b7 03 00 00 81 00 00 00	r3 = 0x81
   12791	2d 13 09 00 00 00 00 00	if r3 > r1 goto +0x9 <LBB3_23>
   12792	05 00 da 00 00 00 00 00	goto +0xda <LBB3_7>

0000000000018fc8 <LBB3_18>
   12793	bf 15 00 00 00 00 00 00	r5 = r1
   12794	57 05 00 00 0f 00 00 00	r5 &= 0xf
   12795	bf 54 00 00 00 00 00 00	r4 = r5
   12796	47 04 00 00 30 00 00 00	r4 |= 0x30
   12797	2d 53 ef ff 00 00 00 00	if r3 > r5 goto -0x11 <LBB3_20>
   12798	07 05 00 00 37 00 00 00	r5 += 0x37
   12799	bf 54 00 00 00 00 00 00	r4 = r5
   12800	05 00 ec ff 00 00 00 00	goto -0x14 <LBB3_20>

0000000000019008 <LBB3_23>
   12801	bf 21 00 00 00 00 00 00	r1 = r2
   12802	87 01 00 00 00 00 00 00	r1 = -r1
   12803	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   12804	bf a1 00 00 00 00 00 00	r1 = r10
   12805	07 01 00 00 80 ff ff ff	r1 += -0x80
   12806	0f 21 00 00 00 00 00 00	r1 += r2
   12807	07 01 00 00 80 00 00 00	r1 += 0x80
   12808	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   12809	bf a5 00 00 00 00 00 00	r5 = r10
   12810	b7 08 00 00 01 00 00 00	r8 = 0x1
   12811	bf 61 00 00 00 00 00 00	r1 = r6
   12812	b7 02 00 00 01 00 00 00	r2 = 0x1
   12813	18 03 00 00 a0 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca0 ll
   12815	b7 04 00 00 02 00 00 00	r4 = 0x2
   12816	85 10 00 00 ca 05 00 00	call 0x5ca ; <core::fmt::Formatter::pad_integral>
   12817	55 00 09 01 00 00 00 00	if r0 != 0x0 goto +0x109 <LBB3_54>
   12818	05 00 16 00 00 00 00 00	goto +0x16 <LBB3_26>

0000000000019098 <LBB3_24>
   12819	07 02 00 00 ff ff ff ff	r2 += -0x1
   12820	bf a3 00 00 00 00 00 00	r3 = r10
   12821	07 03 00 00 80 ff ff ff	r3 += -0x80
   12822	0f 23 00 00 00 00 00 00	r3 += r2
   12823	07 01 00 00 30 00 00 00	r1 += 0x30
   12824	73 13 00 00 00 00 00 00	*(u8 *)(r3 + 0x0) = r1

00000000000190c8 <LBB3_25>
   12825	bf a1 00 00 00 00 00 00	r1 = r10
   12826	07 01 00 00 80 ff ff ff	r1 += -0x80
   12827	0f 21 00 00 00 00 00 00	r1 += r2
   12828	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   12829	b7 01 00 00 27 00 00 00	r1 = 0x27
   12830	1f 21 00 00 00 00 00 00	r1 -= r2
   12831	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   12832	bf a5 00 00 00 00 00 00	r5 = r10
   12833	b7 08 00 00 01 00 00 00	r8 = 0x1
   12834	bf 61 00 00 00 00 00 00	r1 = r6
   12835	b7 02 00 00 01 00 00 00	r2 = 0x1
   12836	18 03 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r3 = 0x23e08 ll
   12838	b7 04 00 00 00 00 00 00	r4 = 0x0
   12839	85 10 00 00 b3 05 00 00	call 0x5b3 ; <core::fmt::Formatter::pad_integral>
   12840	55 00 f2 00 00 00 00 00	if r0 != 0x0 goto +0xf2 <LBB3_54>

0000000000019148 <LBB3_26>
   12841	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   12842	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   12843	18 03 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r3 = 0x23e08 ll
   12845	7b 3a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r3
   12846	b7 03 00 00 00 00 00 00	r3 = 0x0
   12847	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
   12848	7b 3a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r3
   12849	18 03 00 00 b8 51 02 00 00 00 00 00 00 00 00 00	r3 = 0x251b8 ll
   12851	7b 3a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r3
   12852	b7 03 00 00 01 00 00 00	r3 = 0x1
   12853	7b 3a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r3
   12854	bf a3 00 00 00 00 00 00	r3 = r10
   12855	07 03 00 00 80 ff ff ff	r3 += -0x80
   12856	85 10 00 00 fd 04 00 00	call 0x4fd ; <core::fmt::write>
   12857	b7 08 00 00 01 00 00 00	r8 = 0x1
   12858	55 00 e0 00 00 00 00 00	if r0 != 0x0 goto +0xe0 <LBB3_54>
   12859	61 62 30 00 00 00 00 00	r2 = *(u32 *)(r6 + 0x30)
   12860	bf 21 00 00 00 00 00 00	r1 = r2
   12861	57 01 00 00 10 00 00 00	r1 &= 0x10
   12862	55 01 48 00 00 00 00 00	if r1 != 0x0 goto +0x48 <LBB3_29>
   12863	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
   12864	57 02 00 00 20 00 00 00	r2 &= 0x20
   12865	15 02 01 00 00 00 00 00	if r2 == 0x0 goto +0x1 <LBB3_36>
   12866	05 00 6e 00 00 00 00 00	goto +0x6e <LBB3_44>

0000000000019218 <LBB3_36>
   12867	b7 02 00 00 27 00 00 00	r2 = 0x27
   12868	b7 03 00 00 10 27 00 00	r3 = 0x2710
   12869	2d 13 20 00 00 00 00 00	if r3 > r1 goto +0x20 <LBB3_40>
   12870	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000019238 <LBB3_38>
   12871	bf 13 00 00 00 00 00 00	r3 = r1
   12872	37 01 00 00 10 27 00 00	r1 /= 0x2710
   12873	bf 14 00 00 00 00 00 00	r4 = r1
   12874	27 04 00 00 10 27 00 00	r4 *= 0x2710
   12875	bf 35 00 00 00 00 00 00	r5 = r3
   12876	1f 45 00 00 00 00 00 00	r5 -= r4
   12877	bf 54 00 00 00 00 00 00	r4 = r5
   12878	57 04 00 00 ff ff 00 00	r4 &= 0xffff
   12879	37 04 00 00 64 00 00 00	r4 /= 0x64
   12880	bf 40 00 00 00 00 00 00	r0 = r4
   12881	27 00 00 00 64 00 00 00	r0 *= 0x64
   12882	1f 05 00 00 00 00 00 00	r5 -= r0
   12883	bf a0 00 00 00 00 00 00	r0 = r10
   12884	07 00 00 00 80 ff ff ff	r0 += -0x80
   12885	0f 20 00 00 00 00 00 00	r0 += r2
   12886	67 04 00 00 01 00 00 00	r4 <<= 0x1
   12887	18 07 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r7 = 0x23ca2 ll
   12889	0f 47 00 00 00 00 00 00	r7 += r4
   12890	69 74 00 00 00 00 00 00	r4 = *(u16 *)(r7 + 0x0)
   12891	6b 40 23 00 00 00 00 00	*(u16 *)(r0 + 0x23) = r4
   12892	57 05 00 00 ff ff 00 00	r5 &= 0xffff
   12893	67 05 00 00 01 00 00 00	r5 <<= 0x1
   12894	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   12896	0f 54 00 00 00 00 00 00	r4 += r5
   12897	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   12898	6b 40 25 00 00 00 00 00	*(u16 *)(r0 + 0x25) = r4
   12899	07 02 00 00 fc ff ff ff	r2 += -0x4
   12900	25 03 e2 ff ff e0 f5 05	if r3 > 0x5f5e0ff goto -0x1e <LBB3_38>
   12901	07 02 00 00 27 00 00 00	r2 += 0x27

0000000000019330 <LBB3_40>
   12902	65 01 01 00 63 00 00 00	if r1 s> 0x63 goto +0x1 <LBB3_41>
   12903	05 00 12 00 00 00 00 00	goto +0x12 <LBB3_42>

0000000000019340 <LBB3_41>
   12904	bf 13 00 00 00 00 00 00	r3 = r1
   12905	57 03 00 00 ff ff 00 00	r3 &= 0xffff
   12906	37 03 00 00 64 00 00 00	r3 /= 0x64
   12907	bf 34 00 00 00 00 00 00	r4 = r3
   12908	27 04 00 00 64 00 00 00	r4 *= 0x64
   12909	1f 41 00 00 00 00 00 00	r1 -= r4
   12910	57 01 00 00 ff ff 00 00	r1 &= 0xffff
   12911	67 01 00 00 01 00 00 00	r1 <<= 0x1
   12912	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   12914	0f 14 00 00 00 00 00 00	r4 += r1
   12915	07 02 00 00 fe ff ff ff	r2 += -0x2
   12916	bf a1 00 00 00 00 00 00	r1 = r10
   12917	07 01 00 00 80 ff ff ff	r1 += -0x80
   12918	0f 21 00 00 00 00 00 00	r1 += r2
   12919	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   12920	6b 41 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r4
   12921	bf 31 00 00 00 00 00 00	r1 = r3

00000000000193d0 <LBB3_42>
   12922	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12923	6d 13 88 00 00 00 00 00	if r3 s> r1 goto +0x88 <LBB3_51>
   12924	67 01 00 00 01 00 00 00	r1 <<= 0x1
   12925	18 03 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca2 ll
   12927	0f 13 00 00 00 00 00 00	r3 += r1
   12928	07 02 00 00 fe ff ff ff	r2 += -0x2
   12929	bf a1 00 00 00 00 00 00	r1 = r10
   12930	07 01 00 00 80 ff ff ff	r1 += -0x80
   12931	0f 21 00 00 00 00 00 00	r1 += r2
   12932	69 33 00 00 00 00 00 00	r3 = *(u16 *)(r3 + 0x0)
   12933	6b 31 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r3
   12934	05 00 83 00 00 00 00 00	goto +0x83 <LBB3_52>

0000000000019438 <LBB3_29>
   12935	b7 02 00 00 00 00 00 00	r2 = 0x0
   12936	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
   12937	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12938	05 00 0c 00 00 00 00 00	goto +0xc <LBB3_30>

0000000000019458 <LBB3_32>
   12939	bf a5 00 00 00 00 00 00	r5 = r10
   12940	07 05 00 00 80 ff ff ff	r5 += -0x80
   12941	0f 25 00 00 00 00 00 00	r5 += r2
   12942	73 45 7f 00 00 00 00 00	*(u8 *)(r5 + 0x7f) = r4
   12943	07 02 00 00 ff ff ff ff	r2 += -0x1
   12944	77 01 00 00 04 00 00 00	r1 >>= 0x4
   12945	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB3_30>
   12946	bf 21 00 00 00 00 00 00	r1 = r2
   12947	07 01 00 00 80 00 00 00	r1 += 0x80
   12948	b7 03 00 00 81 00 00 00	r3 = 0x81
   12949	2d 13 09 00 00 00 00 00	if r3 > r1 goto +0x9 <LBB3_35>
   12950	05 00 3c 00 00 00 00 00	goto +0x3c <LBB3_7>

00000000000194b8 <LBB3_30>
   12951	bf 15 00 00 00 00 00 00	r5 = r1
   12952	57 05 00 00 0f 00 00 00	r5 &= 0xf
   12953	bf 54 00 00 00 00 00 00	r4 = r5
   12954	47 04 00 00 30 00 00 00	r4 |= 0x30
   12955	2d 53 ef ff 00 00 00 00	if r3 > r5 goto -0x11 <LBB3_32>
   12956	07 05 00 00 57 00 00 00	r5 += 0x57
   12957	bf 54 00 00 00 00 00 00	r4 = r5
   12958	05 00 ec ff 00 00 00 00	goto -0x14 <LBB3_32>

00000000000194f8 <LBB3_35>
   12959	bf 21 00 00 00 00 00 00	r1 = r2
   12960	87 01 00 00 00 00 00 00	r1 = -r1
   12961	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   12962	bf a1 00 00 00 00 00 00	r1 = r10
   12963	07 01 00 00 80 ff ff ff	r1 += -0x80
   12964	0f 21 00 00 00 00 00 00	r1 += r2
   12965	07 01 00 00 80 00 00 00	r1 += 0x80
   12966	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   12967	bf a5 00 00 00 00 00 00	r5 = r10
   12968	bf 61 00 00 00 00 00 00	r1 = r6
   12969	b7 02 00 00 01 00 00 00	r2 = 0x1
   12970	18 03 00 00 a0 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca0 ll
   12972	b7 04 00 00 02 00 00 00	r4 = 0x2
   12973	85 10 00 00 2d 05 00 00	call 0x52d ; <core::fmt::Formatter::pad_integral>
   12974	b7 08 00 00 00 00 00 00	r8 = 0x0
   12975	55 00 6a 00 00 00 00 00	if r0 != 0x0 goto +0x6a <LBB3_53>
   12976	05 00 6a 00 00 00 00 00	goto +0x6a <LBB3_54>

0000000000019588 <LBB3_44>
   12977	b7 02 00 00 00 00 00 00	r2 = 0x0
   12978	b7 03 00 00 0a 00 00 00	r3 = 0xa
   12979	05 00 0c 00 00 00 00 00	goto +0xc <LBB3_45>

00000000000195a0 <LBB3_47>
   12980	bf a5 00 00 00 00 00 00	r5 = r10
   12981	07 05 00 00 80 ff ff ff	r5 += -0x80
   12982	0f 25 00 00 00 00 00 00	r5 += r2
   12983	73 45 7f 00 00 00 00 00	*(u8 *)(r5 + 0x7f) = r4
   12984	07 02 00 00 ff ff ff ff	r2 += -0x1
   12985	77 01 00 00 04 00 00 00	r1 >>= 0x4
   12986	55 01 05 00 00 00 00 00	if r1 != 0x0 goto +0x5 <LBB3_45>
   12987	bf 21 00 00 00 00 00 00	r1 = r2
   12988	07 01 00 00 80 00 00 00	r1 += 0x80
   12989	b7 03 00 00 81 00 00 00	r3 = 0x81
   12990	2d 13 33 00 00 00 00 00	if r3 > r1 goto +0x33 <LBB3_50>
   12991	05 00 13 00 00 00 00 00	goto +0x13 <LBB3_7>

0000000000019600 <LBB3_45>
   12992	bf 15 00 00 00 00 00 00	r5 = r1
   12993	57 05 00 00 0f 00 00 00	r5 &= 0xf
   12994	bf 54 00 00 00 00 00 00	r4 = r5
   12995	47 04 00 00 30 00 00 00	r4 |= 0x30
   12996	2d 53 ef ff 00 00 00 00	if r3 > r5 goto -0x11 <LBB3_47>
   12997	07 05 00 00 37 00 00 00	r5 += 0x37
   12998	bf 54 00 00 00 00 00 00	r4 = r5
   12999	05 00 ec ff 00 00 00 00	goto -0x14 <LBB3_47>

0000000000019640 <LBB3_5>
   13000	bf a5 00 00 00 00 00 00	r5 = r10
   13001	07 05 00 00 80 ff ff ff	r5 += -0x80
   13002	0f 25 00 00 00 00 00 00	r5 += r2
   13003	73 45 7f 00 00 00 00 00	*(u8 *)(r5 + 0x7f) = r4
   13004	07 02 00 00 ff ff ff ff	r2 += -0x1
   13005	77 01 00 00 04 00 00 00	r1 >>= 0x4
   13006	55 01 09 00 00 00 00 00	if r1 != 0x0 goto +0x9 <LBB3_3>
   13007	bf 21 00 00 00 00 00 00	r1 = r2
   13008	07 01 00 00 80 00 00 00	r1 += 0x80
   13009	b7 03 00 00 81 00 00 00	r3 = 0x81
   13010	2d 13 0d 00 00 00 00 00	if r3 > r1 goto +0xd <LBB3_8>

0000000000019698 <LBB3_7>
   13011	b7 02 00 00 80 00 00 00	r2 = 0x80
   13012	18 03 00 00 10 51 02 00 00 00 00 00 00 00 00 00	r3 = 0x25110 ll
   13014	85 10 00 00 4f fe ff ff	call -0x1b1 ; <core::slice::index::slice_start_index_len_fail>
   13015	85 10 00 00 ff ff ff ff	call -0x1 ; abort

00000000000196c0 <LBB3_3>
   13016	bf 15 00 00 00 00 00 00	r5 = r1
   13017	57 05 00 00 0f 00 00 00	r5 &= 0xf
   13018	bf 54 00 00 00 00 00 00	r4 = r5
   13019	47 04 00 00 30 00 00 00	r4 |= 0x30
   13020	2d 53 eb ff 00 00 00 00	if r3 > r5 goto -0x15 <LBB3_5>
   13021	07 05 00 00 57 00 00 00	r5 += 0x57
   13022	bf 54 00 00 00 00 00 00	r4 = r5
   13023	05 00 e8 ff 00 00 00 00	goto -0x18 <LBB3_5>

0000000000019700 <LBB3_8>
   13024	bf 21 00 00 00 00 00 00	r1 = r2
   13025	87 01 00 00 00 00 00 00	r1 = -r1
   13026	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   13027	bf a1 00 00 00 00 00 00	r1 = r10
   13028	07 01 00 00 80 ff ff ff	r1 += -0x80
   13029	0f 21 00 00 00 00 00 00	r1 += r2
   13030	07 01 00 00 80 00 00 00	r1 += 0x80
   13031	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   13032	bf a5 00 00 00 00 00 00	r5 = r10
   13033	b7 08 00 00 01 00 00 00	r8 = 0x1
   13034	bf 61 00 00 00 00 00 00	r1 = r6
   13035	b7 02 00 00 01 00 00 00	r2 = 0x1
   13036	18 03 00 00 a0 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca0 ll
   13038	b7 04 00 00 02 00 00 00	r4 = 0x2
   13039	85 10 00 00 eb 04 00 00	call 0x4eb ; <core::fmt::Formatter::pad_integral>
   13040	55 00 2a 00 00 00 00 00	if r0 != 0x0 goto +0x2a <LBB3_54>
   13041	05 00 37 ff 00 00 00 00	goto -0xc9 <LBB3_26>

0000000000019790 <LBB3_50>
   13042	bf 21 00 00 00 00 00 00	r1 = r2
   13043	87 01 00 00 00 00 00 00	r1 = -r1
   13044	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   13045	bf a1 00 00 00 00 00 00	r1 = r10
   13046	07 01 00 00 80 ff ff ff	r1 += -0x80
   13047	0f 21 00 00 00 00 00 00	r1 += r2
   13048	07 01 00 00 80 00 00 00	r1 += 0x80
   13049	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   13050	bf a5 00 00 00 00 00 00	r5 = r10
   13051	bf 61 00 00 00 00 00 00	r1 = r6
   13052	b7 02 00 00 01 00 00 00	r2 = 0x1
   13053	18 03 00 00 a0 3c 02 00 00 00 00 00 00 00 00 00	r3 = 0x23ca0 ll
   13055	b7 04 00 00 02 00 00 00	r4 = 0x2
   13056	85 10 00 00 da 04 00 00	call 0x4da ; <core::fmt::Formatter::pad_integral>
   13057	b7 08 00 00 00 00 00 00	r8 = 0x0
   13058	55 00 17 00 00 00 00 00	if r0 != 0x0 goto +0x17 <LBB3_53>
   13059	05 00 17 00 00 00 00 00	goto +0x17 <LBB3_54>

0000000000019820 <LBB3_51>
   13060	07 02 00 00 ff ff ff ff	r2 += -0x1
   13061	bf a3 00 00 00 00 00 00	r3 = r10
   13062	07 03 00 00 80 ff ff ff	r3 += -0x80
   13063	0f 23 00 00 00 00 00 00	r3 += r2
   13064	07 01 00 00 30 00 00 00	r1 += 0x30
   13065	73 13 00 00 00 00 00 00	*(u8 *)(r3 + 0x0) = r1

0000000000019850 <LBB3_52>
   13066	bf a1 00 00 00 00 00 00	r1 = r10
   13067	07 01 00 00 80 ff ff ff	r1 += -0x80
   13068	0f 21 00 00 00 00 00 00	r1 += r2
   13069	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   13070	b7 01 00 00 27 00 00 00	r1 = 0x27
   13071	1f 21 00 00 00 00 00 00	r1 -= r2
   13072	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   13073	bf a5 00 00 00 00 00 00	r5 = r10
   13074	b7 08 00 00 00 00 00 00	r8 = 0x0
   13075	bf 61 00 00 00 00 00 00	r1 = r6
   13076	b7 02 00 00 01 00 00 00	r2 = 0x1
   13077	18 03 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r3 = 0x23e08 ll
   13079	b7 04 00 00 00 00 00 00	r4 = 0x0
   13080	85 10 00 00 c2 04 00 00	call 0x4c2 ; <core::fmt::Formatter::pad_integral>
   13081	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB3_54>

00000000000198d0 <LBB3_53>
   13082	b7 08 00 00 01 00 00 00	r8 = 0x1

00000000000198d8 <LBB3_54>
   13083	bf 80 00 00 00 00 00 00	r0 = r8
   13084	95 00 00 00 00 00 00 00	exit

00000000000198e8 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   13085	b7 03 00 00 27 00 00 00	r3 = 0x27
   13086	61 11 00 00 00 00 00 00	r1 = *(u32 *)(r1 + 0x0)
   13087	b7 04 00 00 10 27 00 00	r4 = 0x2710
   13088	2d 14 20 00 00 00 00 00	if r4 > r1 goto +0x20 <LBB49_4>
   13089	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000019910 <LBB49_2>
   13090	bf 14 00 00 00 00 00 00	r4 = r1
   13091	37 01 00 00 10 27 00 00	r1 /= 0x2710
   13092	bf 15 00 00 00 00 00 00	r5 = r1
   13093	27 05 00 00 10 27 00 00	r5 *= 0x2710
   13094	bf 40 00 00 00 00 00 00	r0 = r4
   13095	1f 50 00 00 00 00 00 00	r0 -= r5
   13096	bf 05 00 00 00 00 00 00	r5 = r0
   13097	57 05 00 00 ff ff 00 00	r5 &= 0xffff
   13098	37 05 00 00 64 00 00 00	r5 /= 0x64
   13099	bf 56 00 00 00 00 00 00	r6 = r5
   13100	27 06 00 00 64 00 00 00	r6 *= 0x64
   13101	1f 60 00 00 00 00 00 00	r0 -= r6
   13102	bf a6 00 00 00 00 00 00	r6 = r10
   13103	07 06 00 00 d9 ff ff ff	r6 += -0x27
   13104	0f 36 00 00 00 00 00 00	r6 += r3
   13105	67 05 00 00 01 00 00 00	r5 <<= 0x1
   13106	18 07 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r7 = 0x23ca2 ll
   13108	0f 57 00 00 00 00 00 00	r7 += r5
   13109	69 75 00 00 00 00 00 00	r5 = *(u16 *)(r7 + 0x0)
   13110	6b 56 23 00 00 00 00 00	*(u16 *)(r6 + 0x23) = r5
   13111	57 00 00 00 ff ff 00 00	r0 &= 0xffff
   13112	67 00 00 00 01 00 00 00	r0 <<= 0x1
   13113	18 05 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r5 = 0x23ca2 ll
   13115	0f 05 00 00 00 00 00 00	r5 += r0
   13116	69 55 00 00 00 00 00 00	r5 = *(u16 *)(r5 + 0x0)
   13117	6b 56 25 00 00 00 00 00	*(u16 *)(r6 + 0x25) = r5
   13118	07 03 00 00 fc ff ff ff	r3 += -0x4
   13119	25 04 e2 ff ff e0 f5 05	if r4 > 0x5f5e0ff goto -0x1e <LBB49_2>
   13120	07 03 00 00 27 00 00 00	r3 += 0x27

0000000000019a08 <LBB49_4>
   13121	25 01 01 00 63 00 00 00	if r1 > 0x63 goto +0x1 <LBB49_5>
   13122	05 00 12 00 00 00 00 00	goto +0x12 <LBB49_6>

0000000000019a18 <LBB49_5>
   13123	bf 14 00 00 00 00 00 00	r4 = r1
   13124	57 04 00 00 ff ff 00 00	r4 &= 0xffff
   13125	37 04 00 00 64 00 00 00	r4 /= 0x64
   13126	bf 45 00 00 00 00 00 00	r5 = r4
   13127	27 05 00 00 64 00 00 00	r5 *= 0x64
   13128	1f 51 00 00 00 00 00 00	r1 -= r5
   13129	57 01 00 00 ff ff 00 00	r1 &= 0xffff
   13130	67 01 00 00 01 00 00 00	r1 <<= 0x1
   13131	18 05 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r5 = 0x23ca2 ll
   13133	0f 15 00 00 00 00 00 00	r5 += r1
   13134	07 03 00 00 fe ff ff ff	r3 += -0x2
   13135	bf a1 00 00 00 00 00 00	r1 = r10
   13136	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13137	0f 31 00 00 00 00 00 00	r1 += r3
   13138	69 55 00 00 00 00 00 00	r5 = *(u16 *)(r5 + 0x0)
   13139	6b 51 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r5
   13140	bf 41 00 00 00 00 00 00	r1 = r4

0000000000019aa8 <LBB49_6>
   13141	b7 04 00 00 0a 00 00 00	r4 = 0xa
   13142	6d 14 0b 00 00 00 00 00	if r4 s> r1 goto +0xb <LBB49_8>
   13143	67 01 00 00 01 00 00 00	r1 <<= 0x1
   13144	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   13146	0f 14 00 00 00 00 00 00	r4 += r1
   13147	07 03 00 00 fe ff ff ff	r3 += -0x2
   13148	bf a1 00 00 00 00 00 00	r1 = r10
   13149	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13150	0f 31 00 00 00 00 00 00	r1 += r3
   13151	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   13152	6b 41 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r4
   13153	05 00 06 00 00 00 00 00	goto +0x6 <LBB49_9>

0000000000019b10 <LBB49_8>
   13154	07 03 00 00 ff ff ff ff	r3 += -0x1
   13155	bf a4 00 00 00 00 00 00	r4 = r10
   13156	07 04 00 00 d9 ff ff ff	r4 += -0x27
   13157	0f 34 00 00 00 00 00 00	r4 += r3
   13158	07 01 00 00 30 00 00 00	r1 += 0x30
   13159	73 14 00 00 00 00 00 00	*(u8 *)(r4 + 0x0) = r1

0000000000019b40 <LBB49_9>
   13160	bf a1 00 00 00 00 00 00	r1 = r10
   13161	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13162	0f 31 00 00 00 00 00 00	r1 += r3
   13163	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   13164	b7 01 00 00 27 00 00 00	r1 = 0x27
   13165	1f 31 00 00 00 00 00 00	r1 -= r3
   13166	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   13167	bf a5 00 00 00 00 00 00	r5 = r10
   13168	bf 21 00 00 00 00 00 00	r1 = r2
   13169	b7 02 00 00 01 00 00 00	r2 = 0x1
   13170	18 03 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r3 = 0x23e08 ll
   13172	b7 04 00 00 00 00 00 00	r4 = 0x0
   13173	85 10 00 00 65 04 00 00	call 0x465 ; <core::fmt::Formatter::pad_integral>
   13174	95 00 00 00 00 00 00 00	exit

0000000000019bb8 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt>
   13175	b7 03 00 00 27 00 00 00	r3 = 0x27
   13176	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   13177	b7 04 00 00 10 27 00 00	r4 = 0x2710
   13178	2d 14 20 00 00 00 00 00	if r4 > r1 goto +0x20 <LBB51_4>
   13179	b7 03 00 00 00 00 00 00	r3 = 0x0

0000000000019be0 <LBB51_2>
   13180	bf 14 00 00 00 00 00 00	r4 = r1
   13181	37 01 00 00 10 27 00 00	r1 /= 0x2710
   13182	bf 15 00 00 00 00 00 00	r5 = r1
   13183	27 05 00 00 10 27 00 00	r5 *= 0x2710
   13184	bf 40 00 00 00 00 00 00	r0 = r4
   13185	1f 50 00 00 00 00 00 00	r0 -= r5
   13186	bf 05 00 00 00 00 00 00	r5 = r0
   13187	57 05 00 00 ff ff 00 00	r5 &= 0xffff
   13188	37 05 00 00 64 00 00 00	r5 /= 0x64
   13189	bf 56 00 00 00 00 00 00	r6 = r5
   13190	27 06 00 00 64 00 00 00	r6 *= 0x64
   13191	1f 60 00 00 00 00 00 00	r0 -= r6
   13192	bf a6 00 00 00 00 00 00	r6 = r10
   13193	07 06 00 00 d9 ff ff ff	r6 += -0x27
   13194	0f 36 00 00 00 00 00 00	r6 += r3
   13195	67 05 00 00 01 00 00 00	r5 <<= 0x1
   13196	18 07 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r7 = 0x23ca2 ll
   13198	0f 57 00 00 00 00 00 00	r7 += r5
   13199	69 75 00 00 00 00 00 00	r5 = *(u16 *)(r7 + 0x0)
   13200	6b 56 23 00 00 00 00 00	*(u16 *)(r6 + 0x23) = r5
   13201	57 00 00 00 ff ff 00 00	r0 &= 0xffff
   13202	67 00 00 00 01 00 00 00	r0 <<= 0x1
   13203	18 05 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r5 = 0x23ca2 ll
   13205	0f 05 00 00 00 00 00 00	r5 += r0
   13206	69 55 00 00 00 00 00 00	r5 = *(u16 *)(r5 + 0x0)
   13207	6b 56 25 00 00 00 00 00	*(u16 *)(r6 + 0x25) = r5
   13208	07 03 00 00 fc ff ff ff	r3 += -0x4
   13209	25 04 e2 ff ff e0 f5 05	if r4 > 0x5f5e0ff goto -0x1e <LBB51_2>
   13210	07 03 00 00 27 00 00 00	r3 += 0x27

0000000000019cd8 <LBB51_4>
   13211	65 01 01 00 63 00 00 00	if r1 s> 0x63 goto +0x1 <LBB51_5>
   13212	05 00 12 00 00 00 00 00	goto +0x12 <LBB51_6>

0000000000019ce8 <LBB51_5>
   13213	bf 14 00 00 00 00 00 00	r4 = r1
   13214	57 04 00 00 ff ff 00 00	r4 &= 0xffff
   13215	37 04 00 00 64 00 00 00	r4 /= 0x64
   13216	bf 45 00 00 00 00 00 00	r5 = r4
   13217	27 05 00 00 64 00 00 00	r5 *= 0x64
   13218	1f 51 00 00 00 00 00 00	r1 -= r5
   13219	57 01 00 00 ff ff 00 00	r1 &= 0xffff
   13220	67 01 00 00 01 00 00 00	r1 <<= 0x1
   13221	18 05 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r5 = 0x23ca2 ll
   13223	0f 15 00 00 00 00 00 00	r5 += r1
   13224	07 03 00 00 fe ff ff ff	r3 += -0x2
   13225	bf a1 00 00 00 00 00 00	r1 = r10
   13226	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13227	0f 31 00 00 00 00 00 00	r1 += r3
   13228	69 55 00 00 00 00 00 00	r5 = *(u16 *)(r5 + 0x0)
   13229	6b 51 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r5
   13230	bf 41 00 00 00 00 00 00	r1 = r4

0000000000019d78 <LBB51_6>
   13231	b7 04 00 00 0a 00 00 00	r4 = 0xa
   13232	6d 14 0b 00 00 00 00 00	if r4 s> r1 goto +0xb <LBB51_8>
   13233	67 01 00 00 01 00 00 00	r1 <<= 0x1
   13234	18 04 00 00 a2 3c 02 00 00 00 00 00 00 00 00 00	r4 = 0x23ca2 ll
   13236	0f 14 00 00 00 00 00 00	r4 += r1
   13237	07 03 00 00 fe ff ff ff	r3 += -0x2
   13238	bf a1 00 00 00 00 00 00	r1 = r10
   13239	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13240	0f 31 00 00 00 00 00 00	r1 += r3
   13241	69 44 00 00 00 00 00 00	r4 = *(u16 *)(r4 + 0x0)
   13242	6b 41 00 00 00 00 00 00	*(u16 *)(r1 + 0x0) = r4
   13243	05 00 06 00 00 00 00 00	goto +0x6 <LBB51_9>

0000000000019de0 <LBB51_8>
   13244	07 03 00 00 ff ff ff ff	r3 += -0x1
   13245	bf a4 00 00 00 00 00 00	r4 = r10
   13246	07 04 00 00 d9 ff ff ff	r4 += -0x27
   13247	0f 34 00 00 00 00 00 00	r4 += r3
   13248	07 01 00 00 30 00 00 00	r1 += 0x30
   13249	73 14 00 00 00 00 00 00	*(u8 *)(r4 + 0x0) = r1

0000000000019e10 <LBB51_9>
   13250	bf a1 00 00 00 00 00 00	r1 = r10
   13251	07 01 00 00 d9 ff ff ff	r1 += -0x27
   13252	0f 31 00 00 00 00 00 00	r1 += r3
   13253	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   13254	b7 01 00 00 27 00 00 00	r1 = 0x27
   13255	1f 31 00 00 00 00 00 00	r1 -= r3
   13256	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   13257	bf a5 00 00 00 00 00 00	r5 = r10
   13258	bf 21 00 00 00 00 00 00	r1 = r2
   13259	b7 02 00 00 01 00 00 00	r2 = 0x1
   13260	18 03 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r3 = 0x23e08 ll
   13262	b7 04 00 00 00 00 00 00	r4 = 0x0
   13263	85 10 00 00 0b 04 00 00	call 0x40b ; <core::fmt::Formatter::pad_integral>
   13264	95 00 00 00 00 00 00 00	exit

0000000000019e88 <<core::alloc::layout::LayoutError as core::fmt::Debug>::fmt>
   13265	bf 27 00 00 00 00 00 00	r7 = r2
   13266	bf 16 00 00 00 00 00 00	r6 = r1
   13267	79 71 28 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x28)
   13268	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   13269	79 71 20 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x20)
   13270	18 02 00 00 08 3e 02 00 00 00 00 00 00 00 00 00	r2 = 0x23e08 ll
   13272	b7 03 00 00 0b 00 00 00	r3 = 0xb
   13273	8d 00 00 00 04 00 00 00	callx r4
   13274	b7 01 00 00 01 00 00 00	r1 = 0x1
   13275	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB65_2>
   13276	b7 01 00 00 00 00 00 00	r1 = 0x0

0000000000019ee8 <LBB65_2>
   13277	7b 7a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r7
   13278	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   13279	7b 6a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r6
   13280	bf a1 00 00 00 00 00 00	r1 = r10
   13281	07 01 00 00 e8 ff ff ff	r1 += -0x18
   13282	bf a4 00 00 00 00 00 00	r4 = r10
   13283	07 04 00 00 f8 ff ff ff	r4 += -0x8
   13284	18 02 00 00 13 3e 02 00 00 00 00 00 00 00 00 00	r2 = 0x23e13 ll
   13286	b7 03 00 00 07 00 00 00	r3 = 0x7
   13287	18 05 00 00 c8 51 02 00 00 00 00 00 00 00 00 00	r5 = 0x251c8 ll
   13289	85 10 00 00 c9 07 00 00	call 0x7c9 ; <core::fmt::builders::DebugStruct::field>
   13290	71 a0 f0 ff 00 00 00 00	r0 = *(u8 *)(r10 - 0x10)
   13291	71 a1 f1 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0xf)
   13292	15 01 13 00 00 00 00 00	if r1 == 0x0 goto +0x13 <LBB65_9>
   13293	bf 01 00 00 00 00 00 00	r1 = r0
   13294	b7 00 00 00 01 00 00 00	r0 = 0x1
   13295	55 01 0f 00 00 00 00 00	if r1 != 0x0 goto +0xf <LBB65_8>
   13296	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   13297	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   13298	79 23 28 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x28)
   13299	79 34 18 00 00 00 00 00	r4 = *(u64 *)(r3 + 0x18)
   13300	61 22 30 00 00 00 00 00	r2 = *(u32 *)(r2 + 0x30)
   13301	57 02 00 00 04 00 00 00	r2 &= 0x4
   13302	55 02 04 00 00 00 00 00	if r2 != 0x0 goto +0x4 <LBB65_6>
   13303	18 02 00 00 d6 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d6 ll
   13305	b7 03 00 00 02 00 00 00	r3 = 0x2
   13306	05 00 03 00 00 00 00 00	goto +0x3 <LBB65_7>

0000000000019fd8 <LBB65_6>
   13307	18 02 00 00 d5 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d5 ll
   13309	b7 03 00 00 01 00 00 00	r3 = 0x1

0000000000019ff0 <LBB65_7>
   13310	8d 00 00 00 04 00 00 00	callx r4

0000000000019ff8 <LBB65_8>
   13311	73 0a f0 ff 00 00 00 00	*(u8 *)(r10 - 0x10) = r0

000000000001a000 <LBB65_9>
   13312	57 00 00 00 ff 00 00 00	r0 &= 0xff
   13313	b7 01 00 00 01 00 00 00	r1 = 0x1
   13314	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB65_11>
   13315	b7 01 00 00 00 00 00 00	r1 = 0x0

000000000001a020 <LBB65_11>
   13316	bf 10 00 00 00 00 00 00	r0 = r1
   13317	95 00 00 00 00 00 00 00	exit

000000000001a030 <<T as core::any::Any>::type_id>
   13318	18 00 00 00 f3 d0 92 d9 00 00 00 00 42 cc f0 a1	r0 = -0x5e0f33bd266d2f0d ll
   13320	95 00 00 00 00 00 00 00	exit

000000000001a048 <<core::panic::PanicInfo as core::fmt::Display>::fmt>
   13321	bf 26 00 00 00 00 00 00	r6 = r2
   13322	bf 17 00 00 00 00 00 00	r7 = r1
   13323	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   13324	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   13325	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   13326	18 02 00 00 1a 3e 02 00 00 00 00 00 00 00 00 00	r2 = 0x23e1a ll
   13328	b7 03 00 00 0c 00 00 00	r3 = 0xc
   13329	8d 00 00 00 04 00 00 00	callx r4
   13330	b7 08 00 00 01 00 00 00	r8 = 0x1
   13331	55 00 5f 00 00 00 00 00	if r0 != 0x0 goto +0x5f <LBB14_6>
   13332	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
   13333	55 01 43 00 00 00 00 00	if r1 != 0x0 goto +0x43 <LBB14_3>
   13334	79 78 00 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x0)
   13335	79 71 08 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x8)
   13336	79 12 18 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x18)
   13337	bf 81 00 00 00 00 00 00	r1 = r8
   13338	8d 00 00 00 02 00 00 00	callx r2
   13339	18 01 00 00 f4 bc c7 ec 00 00 00 00 1e a9 f2 7e	r1 = 0x7ef2a91eecc7bcf4 ll
   13341	1d 10 01 00 00 00 00 00	if r0 == r1 goto +0x1 <LBB14_4>
   13342	05 00 19 00 00 00 00 00	goto +0x19 <LBB14_5>

000000000001a0f8 <LBB14_4>
   13343	7b 8a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r8
   13344	18 01 00 00 90 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d690 ll
   13346	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   13347	bf a1 00 00 00 00 00 00	r1 = r10
   13348	07 01 00 00 98 ff ff ff	r1 += -0x68
   13349	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13350	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   13351	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   13352	bf a3 00 00 00 00 00 00	r3 = r10
   13353	07 03 00 00 a0 ff ff ff	r3 += -0x60
   13354	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   13355	b7 03 00 00 00 00 00 00	r3 = 0x0
   13356	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   13357	b7 03 00 00 02 00 00 00	r3 = 0x2
   13358	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
   13359	18 03 00 00 e8 51 02 00 00 00 00 00 00 00 00 00	r3 = 0x251e8 ll
   13361	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
   13362	b7 08 00 00 01 00 00 00	r8 = 0x1
   13363	7b 8a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r8
   13364	bf a3 00 00 00 00 00 00	r3 = r10
   13365	07 03 00 00 d0 ff ff ff	r3 += -0x30
   13366	85 10 00 00 ff 02 00 00	call 0x2ff ; <core::fmt::write>
   13367	55 00 3b 00 00 00 00 00	if r0 != 0x0 goto +0x3b <LBB14_6>

000000000001a1c0 <LBB14_5>
   13368	79 71 18 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x18)
   13369	bf 12 00 00 00 00 00 00	r2 = r1
   13370	07 02 00 00 14 00 00 00	r2 += 0x14
   13371	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r2
   13372	18 02 00 00 e8 98 01 00 00 00 00 00 00 00 00 00	r2 = 0x198e8 ll
   13374	7b 2a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r2
   13375	7b 2a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r2
   13376	bf 12 00 00 00 00 00 00	r2 = r1
   13377	07 02 00 00 10 00 00 00	r2 += 0x10
   13378	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r2
   13379	18 02 00 00 60 d6 01 00 00 00 00 00 00 00 00 00	r2 = 0x1d660 ll
   13381	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   13382	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13383	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   13384	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   13385	bf a3 00 00 00 00 00 00	r3 = r10
   13386	07 03 00 00 a0 ff ff ff	r3 += -0x60
   13387	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   13388	b7 03 00 00 00 00 00 00	r3 = 0x0
   13389	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   13390	b7 03 00 00 03 00 00 00	r3 = 0x3
   13391	7b 3a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r3
   13392	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
   13393	18 03 00 00 08 52 02 00 00 00 00 00 00 00 00 00	r3 = 0x25208 ll
   13395	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
   13396	bf a3 00 00 00 00 00 00	r3 = r10
   13397	07 03 00 00 d0 ff ff ff	r3 += -0x30
   13398	85 10 00 00 df 02 00 00	call 0x2df ; <core::fmt::write>
   13399	bf 08 00 00 00 00 00 00	r8 = r0
   13400	05 00 1a 00 00 00 00 00	goto +0x1a <LBB14_6>

000000000001a2c8 <LBB14_3>
   13401	7b 1a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r1
   13402	18 01 00 00 c8 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d6c8 ll
   13404	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   13405	bf a1 00 00 00 00 00 00	r1 = r10
   13406	07 01 00 00 98 ff ff ff	r1 += -0x68
   13407	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13408	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   13409	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   13410	bf a3 00 00 00 00 00 00	r3 = r10
   13411	07 03 00 00 a0 ff ff ff	r3 += -0x60
   13412	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   13413	b7 03 00 00 00 00 00 00	r3 = 0x0
   13414	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   13415	b7 03 00 00 02 00 00 00	r3 = 0x2
   13416	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
   13417	18 03 00 00 e8 51 02 00 00 00 00 00 00 00 00 00	r3 = 0x251e8 ll
   13419	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
   13420	b7 08 00 00 01 00 00 00	r8 = 0x1
   13421	7b 8a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r8
   13422	bf a3 00 00 00 00 00 00	r3 = r10
   13423	07 03 00 00 d0 ff ff ff	r3 += -0x30
   13424	85 10 00 00 c5 02 00 00	call 0x2c5 ; <core::fmt::write>
   13425	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB14_6>
   13426	05 00 c5 ff 00 00 00 00	goto -0x3b <LBB14_5>

000000000001a398 <LBB14_6>
   13427	bf 80 00 00 00 00 00 00	r0 = r8
   13428	95 00 00 00 00 00 00 00	exit

000000000001a3a8 <core::str::slice_error_fail>
   13429	7b 4a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r4
   13430	7b 3a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r3
   13431	b7 06 00 00 01 00 00 00	r6 = 0x1
   13432	b7 07 00 00 01 01 00 00	r7 = 0x101
   13433	bf 20 00 00 00 00 00 00	r0 = r2
   13434	2d 27 18 00 00 00 00 00	if r7 > r2 goto +0x18 <LBB23_8>
   13435	b7 00 00 00 00 00 00 00	r0 = 0x0
   13436	bf 26 00 00 00 00 00 00	r6 = r2
   13437	07 06 00 00 01 ff ff ff	r6 += -0xff
   13438	bf 17 00 00 00 00 00 00	r7 = r1
   13439	07 07 00 00 00 01 00 00	r7 += 0x100

000000000001a400 <LBB23_2>
   13440	bf 08 00 00 00 00 00 00	r8 = r0
   13441	07 00 00 00 00 01 00 00	r0 += 0x100
   13442	3d 20 06 00 00 00 00 00	if r0 >= r2 goto +0x6 <LBB23_4>
   13443	bf 70 00 00 00 00 00 00	r0 = r7
   13444	0f 80 00 00 00 00 00 00	r0 += r8
   13445	71 00 00 00 00 00 00 00	r0 = *(u8 *)(r0 + 0x0)
   13446	67 00 00 00 38 00 00 00	r0 <<= 0x38
   13447	c7 00 00 00 38 00 00 00	r0 s>>= 0x38
   13448	65 00 07 00 bf ff ff ff	if r0 s> -0x41 goto +0x7 <LBB23_7>

000000000001a448 <LBB23_4>
   13449	bf 80 00 00 00 00 00 00	r0 = r8
   13450	07 00 00 00 ff ff ff ff	r0 += -0x1
   13451	15 08 01 00 01 ff ff ff	if r8 == -0xff goto +0x1 <LBB23_6>
   13452	5d 86 f3 ff 00 00 00 00	if r6 != r8 goto -0xd <LBB23_2>

000000000001a468 <LBB23_6>
   13453	b7 06 00 00 00 00 00 00	r6 = 0x0
   13454	07 00 00 00 00 01 00 00	r0 += 0x100
   13455	05 00 03 00 00 00 00 00	goto +0x3 <LBB23_8>

000000000001a480 <LBB23_7>
   13456	b7 06 00 00 00 00 00 00	r6 = 0x0
   13457	07 08 00 00 00 01 00 00	r8 += 0x100
   13458	bf 80 00 00 00 00 00 00	r0 = r8

000000000001a498 <LBB23_8>
   13459	18 07 00 00 58 3e 02 00 00 00 00 00 00 00 00 00	r7 = 0x23e58 ll
   13461	55 06 02 00 00 00 00 00	if r6 != 0x0 goto +0x2 <LBB23_10>
   13462	18 07 00 00 60 3e 02 00 00 00 00 00 00 00 00 00	r7 = 0x23e60 ll

000000000001a4c0 <LBB23_10>
   13464	b7 08 00 00 00 00 00 00	r8 = 0x0
   13465	55 06 01 00 00 00 00 00	if r6 != 0x0 goto +0x1 <LBB23_12>
   13466	b7 08 00 00 05 00 00 00	r8 = 0x5

000000000001a4d8 <LBB23_12>
   13467	7b 0a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r0
   13468	7b 1a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r1
   13469	7b 8a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r8
   13470	7b 7a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r7
   13471	bf 30 00 00 00 00 00 00	r0 = r3
   13472	2d 23 23 00 00 00 00 00	if r3 > r2 goto +0x23 <LBB23_15>
   13473	bf 40 00 00 00 00 00 00	r0 = r4
   13474	2d 24 21 00 00 00 00 00	if r4 > r2 goto +0x21 <LBB23_15>
   13475	2d 43 01 00 00 00 00 00	if r3 > r4 goto +0x1 <LBB23_26>
   13476	05 00 40 00 00 00 00 00	goto +0x40 <LBB23_17>

000000000001a528 <LBB23_26>
   13477	bf a1 00 00 00 00 00 00	r1 = r10
   13478	07 01 00 00 b0 ff ff ff	r1 += -0x50
   13479	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13480	b7 01 00 00 00 00 00 00	r1 = 0x0
   13481	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
   13482	b7 01 00 00 04 00 00 00	r1 = 0x4
   13483	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   13484	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
   13485	18 01 00 00 80 52 02 00 00 00 00 00 00 00 00 00	r1 = 0x25280 ll
   13487	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
   13488	bf a1 00 00 00 00 00 00	r1 = r10
   13489	07 01 00 00 50 ff ff ff	r1 += -0xb0
   13490	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   13491	18 01 00 00 60 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d660 ll
   13493	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   13494	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   13495	bf a1 00 00 00 00 00 00	r1 = r10
   13496	07 01 00 00 40 ff ff ff	r1 += -0xc0
   13497	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   13498	bf a1 00 00 00 00 00 00	r1 = r10
   13499	07 01 00 00 38 ff ff ff	r1 += -0xc8
   13500	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   13501	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   13503	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   13504	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   13505	bf a1 00 00 00 00 00 00	r1 = r10
   13506	07 01 00 00 30 ff ff ff	r1 += -0xd0
   13507	05 00 1b 00 00 00 00 00	goto +0x1b <LBB23_16>

000000000001a620 <LBB23_15>
   13508	7b 0a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r0
   13509	bf a1 00 00 00 00 00 00	r1 = r10
   13510	07 01 00 00 b0 ff ff ff	r1 += -0x50
   13511	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13512	b7 01 00 00 00 00 00 00	r1 = 0x0
   13513	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
   13514	b7 01 00 00 03 00 00 00	r1 = 0x3
   13515	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   13516	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
   13517	18 01 00 00 50 52 02 00 00 00 00 00 00 00 00 00	r1 = 0x25250 ll
   13519	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
   13520	bf a1 00 00 00 00 00 00	r1 = r10
   13521	07 01 00 00 50 ff ff ff	r1 += -0xb0
   13522	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   13523	18 01 00 00 60 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d660 ll
   13525	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   13526	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   13527	bf a1 00 00 00 00 00 00	r1 = r10
   13528	07 01 00 00 40 ff ff ff	r1 += -0xc0
   13529	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   13530	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   13532	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   13533	bf a1 00 00 00 00 00 00	r1 = r10
   13534	07 01 00 00 70 ff ff ff	r1 += -0x90

000000000001a6f8 <LBB23_16>
   13535	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   13536	bf a1 00 00 00 00 00 00	r1 = r10
   13537	07 01 00 00 80 ff ff ff	r1 += -0x80
   13538	bf 52 00 00 00 00 00 00	r2 = r5
   13539	85 10 00 00 2e 02 00 00	call 0x22e ; <core::panicking::panic_fmt>
   13540	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001a728 <LBB23_17>
   13541	15 03 09 00 00 00 00 00	if r3 == 0x0 goto +0x9 <LBB23_21>
   13542	1d 23 08 00 00 00 00 00	if r3 == r2 goto +0x8 <LBB23_21>
   13543	3d 23 08 00 00 00 00 00	if r3 >= r2 goto +0x8 <LBB23_22>
   13544	bf 10 00 00 00 00 00 00	r0 = r1
   13545	0f 30 00 00 00 00 00 00	r0 += r3
   13546	71 00 00 00 00 00 00 00	r0 = *(u8 *)(r0 + 0x0)
   13547	67 00 00 00 38 00 00 00	r0 <<= 0x38
   13548	c7 00 00 00 38 00 00 00	r0 s>>= 0x38
   13549	b7 06 00 00 c0 ff ff ff	r6 = -0x40
   13550	6d 06 01 00 00 00 00 00	if r6 s> r0 goto +0x1 <LBB23_22>

000000000001a778 <LBB23_21>
   13551	bf 43 00 00 00 00 00 00	r3 = r4

000000000001a780 <LBB23_22>
   13552	7b 3a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r3
   13553	15 03 13 00 00 00 00 00	if r3 == 0x0 goto +0x13 <LBB23_29>
   13554	1d 23 12 00 00 00 00 00	if r3 == r2 goto +0x12 <LBB23_29>
   13555	bf 24 00 00 00 00 00 00	r4 = r2
   13556	07 04 00 00 01 00 00 00	r4 += 0x1
   13557	b7 00 00 00 c0 ff ff ff	r0 = -0x40

000000000001a7b0 <LBB23_25>
   13558	bf 36 00 00 00 00 00 00	r6 = r3
   13559	3d 26 08 00 00 00 00 00	if r6 >= r2 goto +0x8 <LBB23_47>
   13560	bf 13 00 00 00 00 00 00	r3 = r1
   13561	0f 63 00 00 00 00 00 00	r3 += r6
   13562	71 33 00 00 00 00 00 00	r3 = *(u8 *)(r3 + 0x0)
   13563	67 03 00 00 38 00 00 00	r3 <<= 0x38
   13564	c7 03 00 00 38 00 00 00	r3 s>>= 0x38
   13565	6d 30 02 00 00 00 00 00	if r0 s> r3 goto +0x2 <LBB23_47>
   13566	bf 63 00 00 00 00 00 00	r3 = r6
   13567	05 00 05 00 00 00 00 00	goto +0x5 <LBB23_29>

000000000001a800 <LBB23_47>
   13568	bf 63 00 00 00 00 00 00	r3 = r6
   13569	07 03 00 00 ff ff ff ff	r3 += -0x1
   13570	15 06 02 00 01 00 00 00	if r6 == 0x1 goto +0x2 <LBB23_29>
   13571	1d 64 01 00 00 00 00 00	if r4 == r6 goto +0x1 <LBB23_29>
   13572	05 00 f1 ff 00 00 00 00	goto -0xf <LBB23_25>

000000000001a828 <LBB23_29>
   13573	1d 23 33 00 00 00 00 00	if r3 == r2 goto +0x33 <LBB23_41>
   13574	bf 10 00 00 00 00 00 00	r0 = r1
   13575	0f 30 00 00 00 00 00 00	r0 += r3
   13576	71 04 00 00 00 00 00 00	r4 = *(u8 *)(r0 + 0x0)
   13577	bf 46 00 00 00 00 00 00	r6 = r4
   13578	67 06 00 00 38 00 00 00	r6 <<= 0x38
   13579	c7 06 00 00 38 00 00 00	r6 s>>= 0x38
   13580	65 06 32 00 ff ff ff ff	if r6 s> -0x1 goto +0x32 <LBB23_34>
   13581	0f 21 00 00 00 00 00 00	r1 += r2
   13582	bf 07 00 00 00 00 00 00	r7 = r0
   13583	07 07 00 00 01 00 00 00	r7 += 0x1
   13584	b7 06 00 00 00 00 00 00	r6 = 0x0
   13585	bf 42 00 00 00 00 00 00	r2 = r4
   13586	57 02 00 00 1f 00 00 00	r2 &= 0x1f
   13587	bf 18 00 00 00 00 00 00	r8 = r1
   13588	1d 17 04 00 00 00 00 00	if r7 == r1 goto +0x4 <LBB23_33>
   13589	71 06 01 00 00 00 00 00	r6 = *(u8 *)(r0 + 0x1)
   13590	07 00 00 00 02 00 00 00	r0 += 0x2
   13591	57 06 00 00 3f 00 00 00	r6 &= 0x3f
   13592	bf 08 00 00 00 00 00 00	r8 = r0

000000000001a8c8 <LBB23_33>
   13593	bf 20 00 00 00 00 00 00	r0 = r2
   13594	67 00 00 00 06 00 00 00	r0 <<= 0x6
   13595	bf 67 00 00 00 00 00 00	r7 = r6
   13596	4f 07 00 00 00 00 00 00	r7 |= r0
   13597	25 04 01 00 df 00 00 00	if r4 > 0xdf goto +0x1 <LBB23_35>
   13598	05 00 4c 00 00 00 00 00	goto +0x4c <LBB23_42>

000000000001a8f8 <LBB23_35>
   13599	b7 00 00 00 00 00 00 00	r0 = 0x0
   13600	bf 19 00 00 00 00 00 00	r9 = r1
   13601	1d 18 04 00 00 00 00 00	if r8 == r1 goto +0x4 <LBB23_37>
   13602	71 80 00 00 00 00 00 00	r0 = *(u8 *)(r8 + 0x0)
   13603	07 08 00 00 01 00 00 00	r8 += 0x1
   13604	57 00 00 00 3f 00 00 00	r0 &= 0x3f
   13605	bf 89 00 00 00 00 00 00	r9 = r8

000000000001a930 <LBB23_37>
   13606	67 06 00 00 06 00 00 00	r6 <<= 0x6
   13607	4f 60 00 00 00 00 00 00	r0 |= r6
   13608	bf 26 00 00 00 00 00 00	r6 = r2
   13609	67 06 00 00 0c 00 00 00	r6 <<= 0xc
   13610	bf 07 00 00 00 00 00 00	r7 = r0
   13611	4f 67 00 00 00 00 00 00	r7 |= r6
   13612	b7 06 00 00 f0 00 00 00	r6 = 0xf0
   13613	2d 46 3d 00 00 00 00 00	if r6 > r4 goto +0x3d <LBB23_42>
   13614	b7 04 00 00 00 00 00 00	r4 = 0x0
   13615	1d 19 02 00 00 00 00 00	if r9 == r1 goto +0x2 <LBB23_40>
   13616	71 94 00 00 00 00 00 00	r4 = *(u8 *)(r9 + 0x0)
   13617	57 04 00 00 3f 00 00 00	r4 &= 0x3f

000000000001a990 <LBB23_40>
   13618	67 00 00 00 06 00 00 00	r0 <<= 0x6
   13619	67 02 00 00 12 00 00 00	r2 <<= 0x12
   13620	57 02 00 00 00 00 1c 00	r2 &= 0x1c0000
   13621	4f 20 00 00 00 00 00 00	r0 |= r2
   13622	4f 40 00 00 00 00 00 00	r0 |= r4
   13623	bf 07 00 00 00 00 00 00	r7 = r0
   13624	55 00 32 00 00 00 11 00	if r0 != 0x110000 goto +0x32 <LBB23_42>

000000000001a9c8 <LBB23_41>
   13625	18 01 00 00 2b 3e 02 00 00 00 00 00 00 00 00 00	r1 = 0x23e2b ll
   13627	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   13628	bf 53 00 00 00 00 00 00	r3 = r5
   13629	85 10 00 00 a6 01 00 00	call 0x1a6 ; <core::panicking::panic>
   13630	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001a9f8 <LBB23_34>
   13631	63 4a 6c ff 00 00 00 00	*(u32 *)(r10 - 0x94) = r4
   13632	b7 01 00 00 01 00 00 00	r1 = 0x1

000000000001aa08 <LBB23_46>
   13633	7b 3a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r3
   13634	0f 31 00 00 00 00 00 00	r1 += r3
   13635	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r1
   13636	bf a1 00 00 00 00 00 00	r1 = r10
   13637	07 01 00 00 b0 ff ff ff	r1 += -0x50
   13638	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   13639	b7 01 00 00 00 00 00 00	r1 = 0x0
   13640	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
   13641	b7 01 00 00 05 00 00 00	r1 = 0x5
   13642	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   13643	7b 1a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r1
   13644	18 01 00 00 c0 52 02 00 00 00 00 00 00 00 00 00	r1 = 0x252c0 ll
   13646	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r1
   13647	bf a1 00 00 00 00 00 00	r1 = r10
   13648	07 01 00 00 50 ff ff ff	r1 += -0xb0
   13649	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   13650	18 01 00 00 60 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d660 ll
   13652	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   13653	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   13654	bf a1 00 00 00 00 00 00	r1 = r10
   13655	07 01 00 00 40 ff ff ff	r1 += -0xc0
   13656	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   13657	18 01 00 00 c0 8c 01 00 00 00 00 00 00 00 00 00	r1 = 0x18cc0 ll
   13659	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   13660	bf a1 00 00 00 00 00 00	r1 = r10
   13661	07 01 00 00 70 ff ff ff	r1 += -0x90
   13662	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   13663	18 01 00 00 a0 cd 01 00 00 00 00 00 00 00 00 00	r1 = 0x1cda0 ll
   13665	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   13666	bf a1 00 00 00 00 00 00	r1 = r10
   13667	07 01 00 00 6c ff ff ff	r1 += -0x94
   13668	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   13669	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   13671	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   13672	bf a1 00 00 00 00 00 00	r1 = r10
   13673	07 01 00 00 60 ff ff ff	r1 += -0xa0
   13674	05 00 74 ff 00 00 00 00	goto -0x8c <LBB23_16>

000000000001ab58 <LBB23_42>
   13675	b7 01 00 00 01 00 00 00	r1 = 0x1
   13676	63 7a 6c ff 00 00 00 00	*(u32 *)(r10 - 0x94) = r7
   13677	b7 02 00 00 80 00 00 00	r2 = 0x80
   13678	2d 72 d2 ff 00 00 00 00	if r2 > r7 goto -0x2e <LBB23_46>
   13679	b7 01 00 00 02 00 00 00	r1 = 0x2
   13680	b7 02 00 00 00 08 00 00	r2 = 0x800
   13681	2d 72 cf ff 00 00 00 00	if r2 > r7 goto -0x31 <LBB23_46>
   13682	b7 01 00 00 03 00 00 00	r1 = 0x3
   13683	b7 02 00 00 00 00 01 00	r2 = 0x10000
   13684	2d 72 cc ff 00 00 00 00	if r2 > r7 goto -0x34 <LBB23_46>
   13685	b7 01 00 00 04 00 00 00	r1 = 0x4
   13686	05 00 ca ff 00 00 00 00	goto -0x36 <LBB23_46>

000000000001abb8 <core::unicode::printable::check>
   13687	bf 19 00 00 00 00 00 00	r9 = r1
   13688	79 51 10 f0 00 00 00 00	r1 = *(u64 *)(r5 - 0xff0)
   13689	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   13690	79 56 08 f0 00 00 00 00	r6 = *(u64 *)(r5 - 0xff8)
   13691	15 03 27 00 00 00 00 00	if r3 == 0x0 goto +0x27 <LBB28_13>
   13692	67 03 00 00 01 00 00 00	r3 <<= 0x1
   13693	bf 21 00 00 00 00 00 00	r1 = r2
   13694	0f 31 00 00 00 00 00 00	r1 += r3
   13695	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   13696	79 58 00 f0 00 00 00 00	r8 = *(u64 *)(r5 - 0x1000)
   13697	bf 93 00 00 00 00 00 00	r3 = r9
   13698	57 03 00 00 00 ff 00 00	r3 &= 0xff00
   13699	77 03 00 00 08 00 00 00	r3 >>= 0x8
   13700	b7 00 00 00 00 00 00 00	r0 = 0x0
   13701	7b 4a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r4
   13702	7b 8a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r8

000000000001ac38 <LBB28_2>
   13703	71 27 01 00 00 00 00 00	r7 = *(u8 *)(r2 + 0x1)
   13704	bf 05 00 00 00 00 00 00	r5 = r0
   13705	0f 75 00 00 00 00 00 00	r5 += r7
   13706	71 21 00 00 00 00 00 00	r1 = *(u8 *)(r2 + 0x0)
   13707	07 02 00 00 02 00 00 00	r2 += 0x2
   13708	1d 31 05 00 00 00 00 00	if r1 == r3 goto +0x5 <LBB28_5>
   13709	2d 31 15 00 00 00 00 00	if r1 > r3 goto +0x15 <LBB28_13>
   13710	bf 50 00 00 00 00 00 00	r0 = r5
   13711	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   13712	1d 12 12 00 00 00 00 00	if r2 == r1 goto +0x12 <LBB28_13>
   13713	05 00 f5 ff 00 00 00 00	goto -0xb <LBB28_2>

000000000001ac90 <LBB28_5>
   13714	2d 50 39 00 00 00 00 00	if r0 > r5 goto +0x39 <LBB28_7>
   13715	2d 85 3e 00 00 00 00 00	if r5 > r8 goto +0x3e <LBB28_8>
   13716	0f 04 00 00 00 00 00 00	r4 += r0

000000000001aca8 <LBB28_10>
   13717	15 07 08 00 00 00 00 00	if r7 == 0x0 goto +0x8 <LBB28_12>
   13718	b7 00 00 00 00 00 00 00	r0 = 0x0
   13719	07 07 00 00 ff ff ff ff	r7 += -0x1
   13720	bf 91 00 00 00 00 00 00	r1 = r9
   13721	57 01 00 00 ff 00 00 00	r1 &= 0xff
   13722	71 48 00 00 00 00 00 00	r8 = *(u8 *)(r4 + 0x0)
   13723	07 04 00 00 01 00 00 00	r4 += 0x1
   13724	1d 18 1f 00 00 00 00 00	if r8 == r1 goto +0x1f <LBB28_22>
   13725	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB28_10>

000000000001acf0 <LBB28_12>
   13726	bf 50 00 00 00 00 00 00	r0 = r5
   13727	79 a4 e8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x18)
   13728	79 a8 e0 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x20)
   13729	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   13730	5d 12 e4 ff 00 00 00 00	if r2 != r1 goto -0x1c <LBB28_2>

000000000001ad18 <LBB28_13>
   13731	b7 00 00 00 01 00 00 00	r0 = 0x1
   13732	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   13733	15 01 16 00 00 00 00 00	if r1 == 0x0 goto +0x16 <LBB28_22>
   13734	bf 62 00 00 00 00 00 00	r2 = r6
   13735	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   13736	0f 12 00 00 00 00 00 00	r2 += r1
   13737	b7 00 00 00 01 00 00 00	r0 = 0x1
   13738	57 09 00 00 ff ff 00 00	r9 &= 0xffff
   13739	bf 64 00 00 00 00 00 00	r4 = r6
   13740	07 04 00 00 01 00 00 00	r4 += 0x1
   13741	b7 03 00 00 00 00 00 00	r3 = 0x0

000000000001ad70 <LBB28_15>
   13742	71 65 00 00 00 00 00 00	r5 = *(u8 *)(r6 + 0x0)
   13743	bf 51 00 00 00 00 00 00	r1 = r5
   13744	67 01 00 00 38 00 00 00	r1 <<= 0x38
   13745	c7 01 00 00 38 00 00 00	r1 s>>= 0x38
   13746	6d 13 0b 00 00 00 00 00	if r3 s> r1 goto +0xb <LBB28_17>

000000000001ad98 <LBB28_20>
   13747	bf 46 00 00 00 00 00 00	r6 = r4
   13748	1f 59 00 00 00 00 00 00	r9 -= r5
   13749	67 09 00 00 20 00 00 00	r9 <<= 0x20
   13750	c7 09 00 00 20 00 00 00	r9 s>>= 0x20
   13751	6d 93 04 00 00 00 00 00	if r3 s> r9 goto +0x4 <LBB28_22>
   13752	bf 64 00 00 00 00 00 00	r4 = r6
   13753	07 04 00 00 01 00 00 00	r4 += 0x1
   13754	a7 00 00 00 01 00 00 00	r0 ^= 0x1
   13755	5d 26 f2 ff 00 00 00 00	if r6 != r2 goto -0xe <LBB28_15>

000000000001ade0 <LBB28_22>
   13756	57 00 00 00 01 00 00 00	r0 &= 0x1
   13757	95 00 00 00 00 00 00 00	exit

000000000001adf0 <LBB28_17>
   13758	5d 24 07 00 00 00 00 00	if r4 != r2 goto +0x7 <LBB28_19>
   13759	18 01 00 00 2b 3e 02 00 00 00 00 00 00 00 00 00	r1 = 0x23e2b ll
   13761	b7 02 00 00 2b 00 00 00	r2 = 0x2b
   13762	18 03 00 00 28 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25328 ll
   13764	85 10 00 00 1f 01 00 00	call 0x11f ; <core::panicking::panic>
   13765	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001ae30 <LBB28_19>
   13766	57 05 00 00 7f 00 00 00	r5 &= 0x7f
   13767	67 05 00 00 08 00 00 00	r5 <<= 0x8
   13768	71 41 00 00 00 00 00 00	r1 = *(u8 *)(r4 + 0x0)
   13769	4f 15 00 00 00 00 00 00	r5 |= r1
   13770	07 04 00 00 01 00 00 00	r4 += 0x1
   13771	05 00 e7 ff 00 00 00 00	goto -0x19 <LBB28_20>

000000000001ae60 <LBB28_7>
   13772	bf 01 00 00 00 00 00 00	r1 = r0
   13773	bf 52 00 00 00 00 00 00	r2 = r5
   13774	18 03 00 00 10 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25310 ll
   13776	85 10 00 00 8d fb ff ff	call -0x473 ; <core::slice::index::slice_index_order_fail>
   13777	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001ae90 <LBB28_8>
   13778	bf 51 00 00 00 00 00 00	r1 = r5
   13779	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   13780	18 03 00 00 10 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25310 ll
   13782	85 10 00 00 6b fb ff ff	call -0x495 ; <core::slice::index::slice_end_index_len_fail>
   13783	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001aec0 <core::ptr::drop_in_place>
   13784	95 00 00 00 00 00 00 00	exit

000000000001aec8 <core::result::unwrap_failed>
   13785	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
   13786	7b 1a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r1
   13787	7b 4a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r4
   13788	7b 3a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r3
   13789	bf a1 00 00 00 00 00 00	r1 = r10
   13790	07 01 00 00 e0 ff ff ff	r1 += -0x20
   13791	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   13792	b7 01 00 00 00 00 00 00	r1 = 0x0
   13793	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   13794	b7 01 00 00 02 00 00 00	r1 = 0x2
   13795	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   13796	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   13797	18 01 00 00 40 53 02 00 00 00 00 00 00 00 00 00	r1 = 0x25340 ll
   13799	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   13800	18 01 00 00 00 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d600 ll
   13802	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   13803	bf a1 00 00 00 00 00 00	r1 = r10
   13804	07 01 00 00 a0 ff ff ff	r1 += -0x60
   13805	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   13806	18 01 00 00 60 d6 01 00 00 00 00 00 00 00 00 00	r1 = 0x1d660 ll
   13808	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   13809	bf a1 00 00 00 00 00 00	r1 = r10
   13810	07 01 00 00 90 ff ff ff	r1 += -0x70
   13811	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   13812	bf a1 00 00 00 00 00 00	r1 = r10
   13813	07 01 00 00 b0 ff ff ff	r1 += -0x50
   13814	bf 52 00 00 00 00 00 00	r2 = r5
   13815	85 10 00 00 1a 01 00 00	call 0x11a ; <core::panicking::panic_fmt>
   13816	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001afc8 <<core::array::TryFromSliceError as core::fmt::Debug>::fmt>
   13817	bf 26 00 00 00 00 00 00	r6 = r2
   13818	bf 17 00 00 00 00 00 00	r7 = r1
   13819	79 61 28 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x28)
   13820	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   13821	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   13822	18 02 00 00 57 44 02 00 00 00 00 00 00 00 00 00	r2 = 0x24457 ll
   13824	b7 03 00 00 11 00 00 00	r3 = 0x11
   13825	8d 00 00 00 04 00 00 00	callx r4
   13826	73 0a f0 ff 00 00 00 00	*(u8 *)(r10 - 0x10) = r0
   13827	7b 6a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r6
   13828	b7 01 00 00 00 00 00 00	r1 = 0x0
   13829	73 1a f1 ff 00 00 00 00	*(u8 *)(r10 - 0xf) = r1
   13830	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   13831	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   13832	bf a1 00 00 00 00 00 00	r1 = r10
   13833	07 01 00 00 e0 ff ff ff	r1 += -0x20
   13834	bf a2 00 00 00 00 00 00	r2 = r10
   13835	07 02 00 00 f8 ff ff ff	r2 += -0x8
   13836	18 03 00 00 a8 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x253a8 ll
   13838	85 10 00 00 2a 06 00 00	call 0x62a ; <core::fmt::builders::DebugTuple::field>
   13839	71 a2 f0 ff 00 00 00 00	r2 = *(u8 *)(r10 - 0x10)
   13840	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   13841	bf 26 00 00 00 00 00 00	r6 = r2
   13842	15 01 1c 00 00 00 00 00	if r1 == 0x0 goto +0x1c <LBB39_8>
   13843	b7 06 00 00 01 00 00 00	r6 = 0x1
   13844	55 02 19 00 00 00 00 00	if r2 != 0x0 goto +0x19 <LBB39_7>
   13845	55 01 0f 00 01 00 00 00	if r1 != 0x1 goto +0xf <LBB39_6>
   13846	71 a1 f1 ff 00 00 00 00	r1 = *(u8 *)(r10 - 0xf)
   13847	15 01 0d 00 00 00 00 00	if r1 == 0x0 goto +0xd <LBB39_6>
   13848	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   13849	61 21 30 00 00 00 00 00	r1 = *(u32 *)(r2 + 0x30)
   13850	57 01 00 00 04 00 00 00	r1 &= 0x4
   13851	55 01 09 00 00 00 00 00	if r1 != 0x0 goto +0x9 <LBB39_6>
   13852	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   13853	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   13854	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   13855	b7 06 00 00 01 00 00 00	r6 = 0x1
   13856	18 02 00 00 db 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247db ll
   13858	b7 03 00 00 01 00 00 00	r3 = 0x1
   13859	8d 00 00 00 04 00 00 00	callx r4
   13860	55 00 09 00 00 00 00 00	if r0 != 0x0 goto +0x9 <LBB39_7>

000000000001b128 <LBB39_6>
   13861	79 a2 e0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x20)
   13862	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   13863	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   13864	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   13865	18 02 00 00 dc 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247dc ll
   13867	b7 03 00 00 01 00 00 00	r3 = 0x1
   13868	8d 00 00 00 04 00 00 00	callx r4
   13869	bf 06 00 00 00 00 00 00	r6 = r0

000000000001b170 <LBB39_7>
   13870	73 6a f0 ff 00 00 00 00	*(u8 *)(r10 - 0x10) = r6

000000000001b178 <LBB39_8>
   13871	57 06 00 00 ff 00 00 00	r6 &= 0xff
   13872	b7 00 00 00 01 00 00 00	r0 = 0x1
   13873	55 06 01 00 00 00 00 00	if r6 != 0x0 goto +0x1 <LBB39_10>
   13874	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001b198 <LBB39_10>
   13875	95 00 00 00 00 00 00 00	exit

000000000001b1a0 <core::unicode::unicode_data::grapheme_extend::lookup>
   13876	bf 12 00 00 00 00 00 00	r2 = r1
   13877	67 02 00 00 20 00 00 00	r2 <<= 0x20
   13878	77 02 00 00 20 00 00 00	r2 >>= 0x20
   13879	b7 04 00 00 24 0d 01 00	r4 = 0x10d24
   13880	b7 03 00 00 00 00 00 00	r3 = 0x0
   13881	2d 24 01 00 00 00 00 00	if r4 > r2 goto +0x1 <LBB48_2>
   13882	b7 03 00 00 0f 00 00 00	r3 = 0xf

000000000001b1d8 <LBB48_2>
   13883	bf 35 00 00 00 00 00 00	r5 = r3
   13884	07 05 00 00 08 00 00 00	r5 += 0x8
   13885	bf 54 00 00 00 00 00 00	r4 = r5
   13886	67 04 00 00 02 00 00 00	r4 <<= 0x2
   13887	18 02 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r2 = 0x24468 ll
   13889	18 00 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r0 = 0x24468 ll
   13891	0f 40 00 00 00 00 00 00	r0 += r4
   13892	61 00 00 00 00 00 00 00	r0 = *(u32 *)(r0 + 0x0)
   13893	67 00 00 00 0b 00 00 00	r0 <<= 0xb
   13894	bf 14 00 00 00 00 00 00	r4 = r1
   13895	67 04 00 00 0b 00 00 00	r4 <<= 0xb
   13896	67 04 00 00 20 00 00 00	r4 <<= 0x20
   13897	67 00 00 00 20 00 00 00	r0 <<= 0x20
   13898	77 04 00 00 20 00 00 00	r4 >>= 0x20
   13899	77 00 00 00 20 00 00 00	r0 >>= 0x20
   13900	2d 40 01 00 00 00 00 00	if r0 > r4 goto +0x1 <LBB48_4>
   13901	bf 53 00 00 00 00 00 00	r3 = r5

000000000001b270 <LBB48_4>
   13902	bf 35 00 00 00 00 00 00	r5 = r3
   13903	07 05 00 00 04 00 00 00	r5 += 0x4
   13904	bf 50 00 00 00 00 00 00	r0 = r5
   13905	67 00 00 00 02 00 00 00	r0 <<= 0x2
   13906	18 06 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r6 = 0x24468 ll
   13908	0f 06 00 00 00 00 00 00	r6 += r0
   13909	61 60 00 00 00 00 00 00	r0 = *(u32 *)(r6 + 0x0)
   13910	67 00 00 00 0b 00 00 00	r0 <<= 0xb
   13911	67 00 00 00 20 00 00 00	r0 <<= 0x20
   13912	77 00 00 00 20 00 00 00	r0 >>= 0x20
   13913	2d 40 01 00 00 00 00 00	if r0 > r4 goto +0x1 <LBB48_6>
   13914	bf 53 00 00 00 00 00 00	r3 = r5

000000000001b2d8 <LBB48_6>
   13915	bf 35 00 00 00 00 00 00	r5 = r3
   13916	07 05 00 00 02 00 00 00	r5 += 0x2
   13917	bf 50 00 00 00 00 00 00	r0 = r5
   13918	67 00 00 00 02 00 00 00	r0 <<= 0x2
   13919	18 06 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r6 = 0x24468 ll
   13921	0f 06 00 00 00 00 00 00	r6 += r0
   13922	61 60 00 00 00 00 00 00	r0 = *(u32 *)(r6 + 0x0)
   13923	67 00 00 00 0b 00 00 00	r0 <<= 0xb
   13924	67 00 00 00 20 00 00 00	r0 <<= 0x20
   13925	77 00 00 00 20 00 00 00	r0 >>= 0x20
   13926	2d 40 01 00 00 00 00 00	if r0 > r4 goto +0x1 <LBB48_8>
   13927	bf 53 00 00 00 00 00 00	r3 = r5

000000000001b340 <LBB48_8>
   13928	bf 35 00 00 00 00 00 00	r5 = r3
   13929	07 05 00 00 01 00 00 00	r5 += 0x1
   13930	bf 50 00 00 00 00 00 00	r0 = r5
   13931	67 00 00 00 02 00 00 00	r0 <<= 0x2
   13932	18 06 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r6 = 0x24468 ll
   13934	0f 06 00 00 00 00 00 00	r6 += r0
   13935	61 60 00 00 00 00 00 00	r0 = *(u32 *)(r6 + 0x0)
   13936	67 00 00 00 0b 00 00 00	r0 <<= 0xb
   13937	67 00 00 00 20 00 00 00	r0 <<= 0x20
   13938	77 00 00 00 20 00 00 00	r0 >>= 0x20
   13939	2d 40 01 00 00 00 00 00	if r0 > r4 goto +0x1 <LBB48_10>
   13940	bf 53 00 00 00 00 00 00	r3 = r5

000000000001b3a8 <LBB48_10>
   13941	bf 35 00 00 00 00 00 00	r5 = r3
   13942	67 05 00 00 02 00 00 00	r5 <<= 0x2
   13943	0f 52 00 00 00 00 00 00	r2 += r5
   13944	61 25 00 00 00 00 00 00	r5 = *(u32 *)(r2 + 0x0)
   13945	67 05 00 00 0b 00 00 00	r5 <<= 0xb
   13946	67 05 00 00 20 00 00 00	r5 <<= 0x20
   13947	77 05 00 00 20 00 00 00	r5 >>= 0x20
   13948	b7 02 00 00 01 00 00 00	r2 = 0x1
   13949	b7 00 00 00 01 00 00 00	r0 = 0x1
   13950	2d 54 01 00 00 00 00 00	if r4 > r5 goto +0x1 <LBB48_12>
   13951	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001b400 <LBB48_12>
   13952	1d 45 01 00 00 00 00 00	if r5 == r4 goto +0x1 <LBB48_14>
   13953	b7 02 00 00 00 00 00 00	r2 = 0x0

000000000001b410 <LBB48_14>
   13954	0f 02 00 00 00 00 00 00	r2 += r0
   13955	0f 32 00 00 00 00 00 00	r2 += r3
   13956	25 02 48 00 1e 00 00 00	if r2 > 0x1e goto +0x48 <LBB48_30>
   13957	bf 25 00 00 00 00 00 00	r5 = r2
   13958	67 05 00 00 02 00 00 00	r5 <<= 0x2
   13959	18 00 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r0 = 0x24468 ll
   13961	b7 04 00 00 b1 02 00 00	r4 = 0x2b1
   13962	15 02 04 00 1e 00 00 00	if r2 == 0x1e goto +0x4 <LBB48_17>
   13963	bf 53 00 00 00 00 00 00	r3 = r5
   13964	0f 03 00 00 00 00 00 00	r3 += r0
   13965	61 34 04 00 00 00 00 00	r4 = *(u32 *)(r3 + 0x4)
   13966	77 04 00 00 15 00 00 00	r4 >>= 0x15

000000000001b478 <LBB48_17>
   13967	bf 23 00 00 00 00 00 00	r3 = r2
   13968	07 03 00 00 ff ff ff ff	r3 += -0x1
   13969	b7 06 00 00 00 00 00 00	r6 = 0x0
   13970	b7 07 00 00 01 00 00 00	r7 = 0x1
   13971	2d 23 01 00 00 00 00 00	if r3 > r2 goto +0x1 <LBB48_19>
   13972	b7 07 00 00 00 00 00 00	r7 = 0x0

000000000001b4a8 <LBB48_19>
   13973	57 07 00 00 01 00 00 00	r7 &= 0x1
   13974	55 07 0e 00 00 00 00 00	if r7 != 0x0 goto +0xe <LBB48_23>
   13975	b7 02 00 00 1f 00 00 00	r2 = 0x1f
   13976	2d 32 06 00 00 00 00 00	if r2 > r3 goto +0x6 <LBB48_22>
   13977	bf 31 00 00 00 00 00 00	r1 = r3
   13978	b7 02 00 00 1f 00 00 00	r2 = 0x1f
   13979	18 03 00 00 90 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25390 ll
   13981	85 10 00 00 58 00 00 00	call 0x58 ; <core::panicking::panic_bounds_check>
   13982	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b4f8 <LBB48_22>
   13983	67 03 00 00 02 00 00 00	r3 <<= 0x2
   13984	18 02 00 00 68 44 02 00 00 00 00 00 00 00 00 00	r2 = 0x24468 ll
   13986	0f 32 00 00 00 00 00 00	r2 += r3
   13987	61 26 00 00 00 00 00 00	r6 = *(u32 *)(r2 + 0x0)
   13988	57 06 00 00 ff ff 1f 00	r6 &= 0x1fffff

000000000001b528 <LBB48_23>
   13989	0f 50 00 00 00 00 00 00	r0 += r5
   13990	61 00 00 00 00 00 00 00	r0 = *(u32 *)(r0 + 0x0)
   13991	77 00 00 00 15 00 00 00	r0 >>= 0x15
   13992	bf 02 00 00 00 00 00 00	r2 = r0
   13993	a7 02 00 00 ff ff ff ff	r2 ^= -0x1
   13994	bf 43 00 00 00 00 00 00	r3 = r4
   13995	0f 23 00 00 00 00 00 00	r3 += r2
   13996	15 03 18 00 00 00 00 00	if r3 == 0x0 goto +0x18 <LBB48_32>
   13997	1f 61 00 00 00 00 00 00	r1 -= r6
   13998	bf 02 00 00 00 00 00 00	r2 = r0
   13999	25 00 01 00 b1 02 00 00	if r0 > 0x2b1 goto +0x1 <LBB48_26>
   14000	b7 02 00 00 b1 02 00 00	r2 = 0x2b1

000000000001b588 <LBB48_26>
   14001	b7 03 00 00 00 00 00 00	r3 = 0x0
   14002	07 04 00 00 ff ff ff ff	r4 += -0x1
   14003	67 01 00 00 20 00 00 00	r1 <<= 0x20
   14004	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14005	bf 05 00 00 00 00 00 00	r5 = r0

000000000001b5b0 <LBB48_27>
   14006	1d 52 10 00 00 00 00 00	if r2 == r5 goto +0x10 <LBB48_31>
   14007	18 00 00 00 e4 44 02 00 00 00 00 00 00 00 00 00	r0 = 0x244e4 ll
   14009	0f 50 00 00 00 00 00 00	r0 += r5
   14010	71 00 00 00 00 00 00 00	r0 = *(u8 *)(r0 + 0x0)
   14011	0f 03 00 00 00 00 00 00	r3 += r0
   14012	bf 36 00 00 00 00 00 00	r6 = r3
   14013	67 06 00 00 20 00 00 00	r6 <<= 0x20
   14014	77 06 00 00 20 00 00 00	r6 >>= 0x20
   14015	bf 50 00 00 00 00 00 00	r0 = r5
   14016	2d 16 04 00 00 00 00 00	if r6 > r1 goto +0x4 <LBB48_32>
   14017	07 05 00 00 01 00 00 00	r5 += 0x1
   14018	bf 40 00 00 00 00 00 00	r0 = r4
   14019	1d 54 01 00 00 00 00 00	if r4 == r5 goto +0x1 <LBB48_32>
   14020	05 00 f1 ff 00 00 00 00	goto -0xf <LBB48_27>

000000000001b628 <LBB48_32>
   14021	57 00 00 00 01 00 00 00	r0 &= 0x1
   14022	95 00 00 00 00 00 00 00	exit

000000000001b638 <LBB48_31>
   14023	bf 21 00 00 00 00 00 00	r1 = r2
   14024	b7 02 00 00 b1 02 00 00	r2 = 0x2b1
   14025	18 03 00 00 78 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25378 ll
   14027	85 10 00 00 2a 00 00 00	call 0x2a ; <core::panicking::panic_bounds_check>
   14028	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b668 <LBB48_30>
   14029	bf 21 00 00 00 00 00 00	r1 = r2
   14030	b7 02 00 00 1f 00 00 00	r2 = 0x1f
   14031	18 03 00 00 60 53 02 00 00 00 00 00 00 00 00 00	r3 = 0x25360 ll
   14033	85 10 00 00 24 00 00 00	call 0x24 ; <core::panicking::panic_bounds_check>
   14034	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b698 <core::ptr::drop_in_place>
   14035	95 00 00 00 00 00 00 00	exit

000000000001b6a0 <<core::cell::BorrowError as core::fmt::Debug>::fmt>
   14036	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   14037	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   14038	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14039	18 02 00 00 95 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x24795 ll
   14041	b7 03 00 00 0b 00 00 00	r3 = 0xb
   14042	8d 00 00 00 04 00 00 00	callx r4
   14043	95 00 00 00 00 00 00 00	exit

000000000001b6e0 <<core::cell::BorrowMutError as core::fmt::Debug>::fmt>
   14044	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   14045	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   14046	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14047	18 02 00 00 a0 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247a0 ll
   14049	b7 03 00 00 0e 00 00 00	r3 = 0xe
   14050	8d 00 00 00 04 00 00 00	callx r4
   14051	95 00 00 00 00 00 00 00	exit

000000000001b720 <core::panicking::panic>
   14052	18 04 00 00 b0 47 02 00 00 00 00 00 00 00 00 00	r4 = 0x247b0 ll
   14054	7b 4a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r4
   14055	b7 04 00 00 00 00 00 00	r4 = 0x0
   14056	7b 4a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r4
   14057	7b 4a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r4
   14058	b7 04 00 00 01 00 00 00	r4 = 0x1
   14059	7b 4a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r4
   14060	bf a4 00 00 00 00 00 00	r4 = r10
   14061	07 04 00 00 f0 ff ff ff	r4 += -0x10
   14062	7b 4a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r4
   14063	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   14064	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   14065	bf a1 00 00 00 00 00 00	r1 = r10
   14066	07 01 00 00 c0 ff ff ff	r1 += -0x40
   14067	bf 32 00 00 00 00 00 00	r2 = r3
   14068	85 10 00 00 1d 00 00 00	call 0x1d ; <core::panicking::panic_fmt>
   14069	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b7b0 <core::panicking::panic_bounds_check>
   14070	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r2
   14071	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r1
   14072	bf a1 00 00 00 00 00 00	r1 = r10
   14073	07 01 00 00 e0 ff ff ff	r1 += -0x20
   14074	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   14075	b7 01 00 00 00 00 00 00	r1 = 0x0
   14076	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   14077	b7 01 00 00 02 00 00 00	r1 = 0x2
   14078	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   14079	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r1
   14080	18 01 00 00 e8 53 02 00 00 00 00 00 00 00 00 00	r1 = 0x253e8 ll
   14082	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r1
   14083	bf a1 00 00 00 00 00 00	r1 = r10
   14084	07 01 00 00 a0 ff ff ff	r1 += -0x60
   14085	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   14086	18 01 00 00 b8 9b 01 00 00 00 00 00 00 00 00 00	r1 = 0x19bb8 ll
   14088	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   14089	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   14090	bf a1 00 00 00 00 00 00	r1 = r10
   14091	07 01 00 00 a8 ff ff ff	r1 += -0x58
   14092	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14093	bf a1 00 00 00 00 00 00	r1 = r10
   14094	07 01 00 00 b0 ff ff ff	r1 += -0x50
   14095	bf 32 00 00 00 00 00 00	r2 = r3
   14096	85 10 00 00 01 00 00 00	call 0x1 ; <core::panicking::panic_fmt>
   14097	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b890 <core::panicking::panic_fmt>
   14098	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   14099	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   14100	18 01 00 00 c8 53 02 00 00 00 00 00 00 00 00 00	r1 = 0x253c8 ll
   14102	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   14103	18 01 00 00 b0 47 02 00 00 00 00 00 00 00 00 00	r1 = 0x247b0 ll
   14105	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14106	bf a1 00 00 00 00 00 00	r1 = r10
   14107	07 01 00 00 e0 ff ff ff	r1 += -0x20
   14108	85 10 00 00 a1 f8 ff ff	call -0x75f ; <rust_begin_unwind>
   14109	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b8f0 <core::ops::function::FnOnce::call_once>
   14110	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   14111	85 10 00 00 ff ff ff ff	call -0x1 ; abort
   14112	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001b908 <core::ptr::drop_in_place>
   14113	95 00 00 00 00 00 00 00	exit

000000000001b910 <<core::fmt::Arguments as core::fmt::Display>::fmt>
   14114	79 24 28 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x28)
   14115	79 22 20 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x20)
   14116	79 13 28 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x28)
   14117	7b 3a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r3
   14118	79 13 20 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x20)
   14119	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   14120	79 13 18 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x18)
   14121	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
   14122	79 13 10 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x10)
   14123	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   14124	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   14125	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
   14126	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   14127	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   14128	bf a3 00 00 00 00 00 00	r3 = r10
   14129	07 03 00 00 d0 ff ff ff	r3 += -0x30
   14130	bf 21 00 00 00 00 00 00	r1 = r2
   14131	bf 42 00 00 00 00 00 00	r2 = r4
   14132	85 10 00 00 01 00 00 00	call 0x1 ; <core::fmt::write>
   14133	95 00 00 00 00 00 00 00	exit

000000000001b9b0 <core::fmt::write>
   14134	bf 36 00 00 00 00 00 00	r6 = r3
   14135	b7 03 00 00 03 00 00 00	r3 = 0x3
   14136	73 3a f8 ff 00 00 00 00	*(u8 *)(r10 - 0x8) = r3
   14137	18 03 00 00 00 00 00 00 00 00 00 00 20 00 00 00	r3 = 0x2000000000 ll
   14139	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   14140	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   14141	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14142	b7 03 00 00 00 00 00 00	r3 = 0x0
   14143	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
   14144	7b 3a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r3
   14145	79 69 10 00 00 00 00 00	r9 = *(u64 *)(r6 + 0x10)
   14146	15 09 60 00 00 00 00 00	if r9 == 0x0 goto +0x60 <LBB11_7>
   14147	79 64 18 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x18)
   14148	27 04 00 00 38 00 00 00	r4 *= 0x38
   14149	37 04 00 00 38 00 00 00	r4 /= 0x38
   14150	79 65 08 00 00 00 00 00	r5 = *(u64 *)(r6 + 0x8)
   14151	bf 50 00 00 00 00 00 00	r0 = r5
   14152	7b 5a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r5
   14153	2d 54 01 00 00 00 00 00	if r4 > r5 goto +0x1 <LBB11_3>
   14154	bf 40 00 00 00 00 00 00	r0 = r4

000000000001ba58 <LBB11_3>
   14155	79 64 00 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x0)
   14156	7b 4a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r4
   14157	15 00 7f 00 00 00 00 00	if r0 == 0x0 goto +0x7f <LBB11_27>
   14158	7b 0a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r0
   14159	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14160	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   14161	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   14162	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   14163	8d 00 00 00 04 00 00 00	callx r4
   14164	55 00 76 00 00 00 00 00	if r0 != 0x0 goto +0x76 <LBB11_30>
   14165	b7 08 00 00 00 00 00 00	r8 = 0x0
   14166	79 a1 b0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x50)
   14167	67 01 00 00 04 00 00 00	r1 <<= 0x4
   14168	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r1
   14169	07 09 00 00 30 00 00 00	r9 += 0x30
   14170	79 66 20 00 00 00 00 00	r6 = *(u64 *)(r6 + 0x20)
   14171	05 00 1d 00 00 00 00 00	goto +0x1d <LBB11_6>

000000000001bae0 <LBB11_23>
   14172	b7 02 00 00 01 00 00 00	r2 = 0x1

000000000001bae8 <LBB11_24>
   14173	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   14174	7b 2a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r2
   14175	79 91 d0 ff 00 00 00 00	r1 = *(u64 *)(r9 - 0x30)
   14176	67 01 00 00 04 00 00 00	r1 <<= 0x4
   14177	bf 62 00 00 00 00 00 00	r2 = r6
   14178	0f 12 00 00 00 00 00 00	r2 += r1
   14179	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   14180	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   14181	bf a2 00 00 00 00 00 00	r2 = r10
   14182	07 02 00 00 c0 ff ff ff	r2 += -0x40
   14183	8d 00 00 00 03 00 00 00	callx r3
   14184	55 00 62 00 00 00 00 00	if r0 != 0x0 goto +0x62 <LBB11_30>
   14185	bf 87 00 00 00 00 00 00	r7 = r8
   14186	07 07 00 00 10 00 00 00	r7 += 0x10
   14187	79 a3 b0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x50)
   14188	79 a1 a8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x58)
   14189	1d 71 5f 00 00 00 00 00	if r1 == r7 goto +0x5f <LBB11_27>
   14190	07 09 00 00 38 00 00 00	r9 += 0x38
   14191	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
   14192	0f 81 00 00 00 00 00 00	r1 += r8
   14193	79 13 18 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x18)
   14194	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   14195	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   14196	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   14197	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14198	8d 00 00 00 04 00 00 00	callx r4
   14199	bf 78 00 00 00 00 00 00	r8 = r7
   14200	55 00 52 00 00 00 00 00	if r0 != 0x0 goto +0x52 <LBB11_30>

000000000001bbc8 <LBB11_6>
   14201	61 91 f8 ff 00 00 00 00	r1 = *(u32 *)(r9 - 0x8)
   14202	63 1a f4 ff 00 00 00 00	*(u32 *)(r10 - 0xc) = r1
   14203	71 91 00 00 00 00 00 00	r1 = *(u8 *)(r9 + 0x0)
   14204	73 1a f8 ff 00 00 00 00	*(u8 *)(r10 - 0x8) = r1
   14205	61 91 fc ff 00 00 00 00	r1 = *(u32 *)(r9 - 0x4)
   14206	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
   14207	79 91 f0 ff 00 00 00 00	r1 = *(u64 *)(r9 - 0x10)
   14208	79 93 e8 ff 00 00 00 00	r3 = *(u64 *)(r9 - 0x18)
   14209	15 03 0e 00 00 00 00 00	if r3 == 0x0 goto +0xe <LBB11_18>
   14210	b7 02 00 00 00 00 00 00	r2 = 0x0
   14211	15 03 0d 00 02 00 00 00	if r3 == 0x2 goto +0xd <LBB11_19>
   14212	67 01 00 00 04 00 00 00	r1 <<= 0x4
   14213	bf 63 00 00 00 00 00 00	r3 = r6
   14214	0f 13 00 00 00 00 00 00	r3 += r1
   14215	79 34 08 00 00 00 00 00	r4 = *(u64 *)(r3 + 0x8)
   14216	b7 02 00 00 00 00 00 00	r2 = 0x0
   14217	18 05 00 00 f0 b8 01 00 00 00 00 00 00 00 00 00	r5 = 0x1b8f0 ll
   14219	5d 54 05 00 00 00 00 00	if r4 != r5 goto +0x5 <LBB11_19>
   14220	b7 02 00 00 01 00 00 00	r2 = 0x1
   14221	79 31 00 00 00 00 00 00	r1 = *(u64 *)(r3 + 0x0)
   14222	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   14223	05 00 01 00 00 00 00 00	goto +0x1 <LBB11_19>

000000000001bc80 <LBB11_18>
   14224	b7 02 00 00 01 00 00 00	r2 = 0x1

000000000001bc88 <LBB11_19>
   14225	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   14226	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r2
   14227	79 91 e0 ff 00 00 00 00	r1 = *(u64 *)(r9 - 0x20)
   14228	79 93 d8 ff 00 00 00 00	r3 = *(u64 *)(r9 - 0x28)
   14229	15 03 c6 ff 00 00 00 00	if r3 == 0x0 goto -0x3a <LBB11_23>
   14230	b7 02 00 00 00 00 00 00	r2 = 0x0
   14231	15 03 c5 ff 02 00 00 00	if r3 == 0x2 goto -0x3b <LBB11_24>
   14232	67 01 00 00 04 00 00 00	r1 <<= 0x4
   14233	bf 63 00 00 00 00 00 00	r3 = r6
   14234	0f 13 00 00 00 00 00 00	r3 += r1
   14235	79 34 08 00 00 00 00 00	r4 = *(u64 *)(r3 + 0x8)
   14236	18 05 00 00 f0 b8 01 00 00 00 00 00 00 00 00 00	r5 = 0x1b8f0 ll
   14238	5d 54 be ff 00 00 00 00	if r4 != r5 goto -0x42 <LBB11_24>
   14239	b7 02 00 00 01 00 00 00	r2 = 0x1
   14240	79 31 00 00 00 00 00 00	r1 = *(u64 *)(r3 + 0x0)
   14241	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   14242	05 00 ba ff 00 00 00 00	goto -0x46 <LBB11_24>

000000000001bd18 <LBB11_7>
   14243	79 65 08 00 00 00 00 00	r5 = *(u64 *)(r6 + 0x8)
   14244	79 64 28 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x28)
   14245	bf 58 00 00 00 00 00 00	r8 = r5
   14246	7b 5a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r5
   14247	2d 54 01 00 00 00 00 00	if r4 > r5 goto +0x1 <LBB11_9>
   14248	bf 48 00 00 00 00 00 00	r8 = r4

000000000001bd48 <LBB11_9>
   14249	79 64 00 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x0)
   14250	7b 4a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r4
   14251	15 08 21 00 00 00 00 00	if r8 == 0x0 goto +0x21 <LBB11_27>
   14252	79 66 20 00 00 00 00 00	r6 = *(u64 *)(r6 + 0x20)
   14253	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14254	79 a2 b8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x48)
   14255	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   14256	79 22 00 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x0)
   14257	8d 00 00 00 04 00 00 00	callx r4
   14258	55 00 18 00 00 00 00 00	if r0 != 0x0 goto +0x18 <LBB11_30>
   14259	b7 09 00 00 00 00 00 00	r9 = 0x0
   14260	bf 87 00 00 00 00 00 00	r7 = r8

000000000001bda8 <LBB11_12>
   14261	bf 62 00 00 00 00 00 00	r2 = r6
   14262	0f 92 00 00 00 00 00 00	r2 += r9
   14263	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   14264	79 23 08 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x8)
   14265	bf a2 00 00 00 00 00 00	r2 = r10
   14266	07 02 00 00 c0 ff ff ff	r2 += -0x40
   14267	8d 00 00 00 03 00 00 00	callx r3
   14268	55 00 0e 00 00 00 00 00	if r0 != 0x0 goto +0xe <LBB11_30>
   14269	07 07 00 00 ff ff ff ff	r7 += -0x1
   14270	bf 83 00 00 00 00 00 00	r3 = r8
   14271	15 07 0d 00 00 00 00 00	if r7 == 0x0 goto +0xd <LBB11_27>
   14272	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
   14273	0f 91 00 00 00 00 00 00	r1 += r9
   14274	07 09 00 00 10 00 00 00	r9 += 0x10
   14275	79 13 18 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x18)
   14276	79 12 10 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x10)
   14277	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   14278	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   14279	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14280	8d 00 00 00 04 00 00 00	callx r4
   14281	55 00 01 00 00 00 00 00	if r0 != 0x0 goto +0x1 <LBB11_30>
   14282	05 00 ea ff 00 00 00 00	goto -0x16 <LBB11_12>

000000000001be58 <LBB11_30>
   14283	b7 00 00 00 01 00 00 00	r0 = 0x1
   14284	05 00 0d 00 00 00 00 00	goto +0xd <LBB11_31>

000000000001be68 <LBB11_27>
   14285	79 a1 a0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x60)
   14286	3d 13 0a 00 00 00 00 00	if r3 >= r1 goto +0xa <LBB11_29>
   14287	67 03 00 00 04 00 00 00	r3 <<= 0x4
   14288	79 a1 b8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x48)
   14289	0f 31 00 00 00 00 00 00	r1 += r3
   14290	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   14291	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   14292	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   14293	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   14294	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14295	8d 00 00 00 04 00 00 00	callx r4
   14296	55 00 f2 ff 00 00 00 00	if r0 != 0x0 goto -0xe <LBB11_30>

000000000001bec8 <LBB11_29>
   14297	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001bed0 <LBB11_31>
   14298	95 00 00 00 00 00 00 00	exit

000000000001bed8 <core::fmt::Formatter::pad_integral>
   14299	bf 16 00 00 00 00 00 00	r6 = r1
   14300	79 50 08 f0 00 00 00 00	r0 = *(u64 *)(r5 - 0xff8)
   14301	79 51 00 f0 00 00 00 00	r1 = *(u64 *)(r5 - 0x1000)
   14302	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   14303	7b 0a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r0
   14304	15 02 08 00 00 00 00 00	if r2 == 0x0 goto +0x8 <LBB13_4>
   14305	61 61 30 00 00 00 00 00	r1 = *(u32 *)(r6 + 0x30)
   14306	bf 19 00 00 00 00 00 00	r9 = r1
   14307	57 09 00 00 01 00 00 00	r9 &= 0x1
   14308	b7 02 00 00 00 00 11 00	r2 = 0x110000
   14309	15 09 01 00 00 00 00 00	if r9 == 0x0 goto +0x1 <LBB13_3>
   14310	b7 02 00 00 2b 00 00 00	r2 = 0x2b

000000000001bf38 <LBB13_3>
   14311	0f 09 00 00 00 00 00 00	r9 += r0
   14312	05 00 04 00 00 00 00 00	goto +0x4 <LBB13_5>

000000000001bf48 <LBB13_4>
   14313	b7 02 00 00 2d 00 00 00	r2 = 0x2d
   14314	61 61 30 00 00 00 00 00	r1 = *(u32 *)(r6 + 0x30)
   14315	bf 09 00 00 00 00 00 00	r9 = r0
   14316	07 09 00 00 01 00 00 00	r9 += 0x1

000000000001bf68 <LBB13_5>
   14317	b7 07 00 00 00 00 00 00	r7 = 0x0
   14318	bf 15 00 00 00 00 00 00	r5 = r1
   14319	57 05 00 00 04 00 00 00	r5 &= 0x4
   14320	15 05 16 00 00 00 00 00	if r5 == 0x0 goto +0x16 <LBB13_12>
   14321	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   14322	b7 02 00 00 00 00 00 00	r2 = 0x0
   14323	15 04 08 00 00 00 00 00	if r4 == 0x0 goto +0x8 <LBB13_11>
   14324	b7 02 00 00 00 00 00 00	r2 = 0x0
   14325	bf 48 00 00 00 00 00 00	r8 = r4
   14326	bf 35 00 00 00 00 00 00	r5 = r3
   14327	05 00 09 00 00 00 00 00	goto +0x9 <LBB13_8>

000000000001bfc0 <LBB13_10>
   14328	0f 02 00 00 00 00 00 00	r2 += r0
   14329	07 05 00 00 01 00 00 00	r5 += 0x1
   14330	07 08 00 00 ff ff ff ff	r8 += -0x1
   14331	55 08 05 00 00 00 00 00	if r8 != 0x0 goto +0x5 <LBB13_8>

000000000001bfe0 <LBB13_11>
   14332	0f 49 00 00 00 00 00 00	r9 += r4
   14333	1f 29 00 00 00 00 00 00	r9 -= r2
   14334	bf 37 00 00 00 00 00 00	r7 = r3
   14335	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   14336	05 00 06 00 00 00 00 00	goto +0x6 <LBB13_12>

000000000001c008 <LBB13_8>
   14337	71 57 00 00 00 00 00 00	r7 = *(u8 *)(r5 + 0x0)
   14338	57 07 00 00 c0 00 00 00	r7 &= 0xc0
   14339	b7 00 00 00 01 00 00 00	r0 = 0x1
   14340	15 07 f3 ff 80 00 00 00	if r7 == 0x80 goto -0xd <LBB13_10>
   14341	b7 00 00 00 00 00 00 00	r0 = 0x0
   14342	05 00 f1 ff 00 00 00 00	goto -0xf <LBB13_10>

000000000001c038 <LBB13_12>
   14343	79 63 00 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x0)
   14344	15 03 0d 00 01 00 00 00	if r3 == 0x1 goto +0xd <LBB13_15>
   14345	bf 61 00 00 00 00 00 00	r1 = r6
   14346	bf 73 00 00 00 00 00 00	r3 = r7
   14347	85 10 00 00 9f 00 00 00	call 0x9f ; <core::fmt::Formatter::pad_integral::write_prefix>
   14348	b7 08 00 00 01 00 00 00	r8 = 0x1
   14349	55 00 6d 00 00 00 00 00	if r0 != 0x0 goto +0x6d <LBB13_49>

000000000001c070 <LBB13_14>
   14350	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14351	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   14352	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14353	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
   14354	79 a3 f8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x8)
   14355	8d 00 00 00 04 00 00 00	callx r4
   14356	bf 08 00 00 00 00 00 00	r8 = r0
   14357	05 00 65 00 00 00 00 00	goto +0x65 <LBB13_49>

000000000001c0b0 <LBB13_15>
   14358	79 65 08 00 00 00 00 00	r5 = *(u64 *)(r6 + 0x8)
   14359	2d 95 06 00 00 00 00 00	if r5 > r9 goto +0x6 <LBB13_17>
   14360	bf 61 00 00 00 00 00 00	r1 = r6
   14361	bf 73 00 00 00 00 00 00	r3 = r7
   14362	85 10 00 00 90 00 00 00	call 0x90 ; <core::fmt::Formatter::pad_integral::write_prefix>
   14363	b7 08 00 00 01 00 00 00	r8 = 0x1
   14364	55 00 5e 00 00 00 00 00	if r0 != 0x0 goto +0x5e <LBB13_49>
   14365	05 00 f0 ff 00 00 00 00	goto -0x10 <LBB13_14>

000000000001c0f0 <LBB13_17>
   14366	57 01 00 00 08 00 00 00	r1 &= 0x8
   14367	15 01 1b 00 00 00 00 00	if r1 == 0x0 goto +0x1b <LBB13_19>
   14368	7b 5a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r5
   14369	61 61 34 00 00 00 00 00	r1 = *(u32 *)(r6 + 0x34)
   14370	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14371	b7 01 00 00 30 00 00 00	r1 = 0x30
   14372	63 16 34 00 00 00 00 00	*(u32 *)(r6 + 0x34) = r1
   14373	71 61 38 00 00 00 00 00	r1 = *(u8 *)(r6 + 0x38)
   14374	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   14375	b7 08 00 00 01 00 00 00	r8 = 0x1
   14376	73 86 38 00 00 00 00 00	*(u8 *)(r6 + 0x38) = r8
   14377	bf 61 00 00 00 00 00 00	r1 = r6
   14378	bf 73 00 00 00 00 00 00	r3 = r7
   14379	85 10 00 00 7f 00 00 00	call 0x7f ; <core::fmt::Formatter::pad_integral::write_prefix>
   14380	55 00 4e 00 00 00 00 00	if r0 != 0x0 goto +0x4e <LBB13_49>
   14381	71 62 38 00 00 00 00 00	r2 = *(u8 *)(r6 + 0x38)
   14382	b7 01 00 00 01 00 00 00	r1 = 0x1
   14383	15 02 01 00 03 00 00 00	if r2 == 0x3 goto +0x1 <LBB13_31>
   14384	bf 21 00 00 00 00 00 00	r1 = r2

000000000001c188 <LBB13_31>
   14385	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   14386	1f 92 00 00 00 00 00 00	r2 -= r9
   14387	57 01 00 00 03 00 00 00	r1 &= 0x3
   14388	65 01 48 00 01 00 00 00	if r1 s> 0x1 goto +0x48 <LBB13_34>
   14389	b7 09 00 00 00 00 00 00	r9 = 0x0
   14390	bf 27 00 00 00 00 00 00	r7 = r2
   14391	15 01 4b 00 00 00 00 00	if r1 == 0x0 goto +0x4b <LBB13_36>

000000000001c1c0 <LBB13_33>
   14392	b7 07 00 00 00 00 00 00	r7 = 0x0
   14393	bf 29 00 00 00 00 00 00	r9 = r2
   14394	05 00 48 00 00 00 00 00	goto +0x48 <LBB13_36>

000000000001c1d8 <LBB13_19>
   14395	71 63 38 00 00 00 00 00	r3 = *(u8 *)(r6 + 0x38)
   14396	b7 01 00 00 01 00 00 00	r1 = 0x1
   14397	15 03 01 00 03 00 00 00	if r3 == 0x3 goto +0x1 <LBB13_21>
   14398	bf 31 00 00 00 00 00 00	r1 = r3

000000000001c1f8 <LBB13_21>
   14399	1f 95 00 00 00 00 00 00	r5 -= r9
   14400	57 01 00 00 03 00 00 00	r1 &= 0x3
   14401	65 01 06 00 01 00 00 00	if r1 s> 0x1 goto +0x6 <LBB13_24>
   14402	b7 09 00 00 00 00 00 00	r9 = 0x0
   14403	bf 53 00 00 00 00 00 00	r3 = r5
   14404	15 01 09 00 00 00 00 00	if r1 == 0x0 goto +0x9 <LBB13_26>

000000000001c228 <LBB13_23>
   14405	b7 03 00 00 00 00 00 00	r3 = 0x0
   14406	bf 59 00 00 00 00 00 00	r9 = r5
   14407	05 00 06 00 00 00 00 00	goto +0x6 <LBB13_26>

000000000001c240 <LBB13_24>
   14408	15 01 fc ff 03 00 00 00	if r1 == 0x3 goto -0x4 <LBB13_23>
   14409	bf 59 00 00 00 00 00 00	r9 = r5
   14410	77 09 00 00 01 00 00 00	r9 >>= 0x1
   14411	07 05 00 00 01 00 00 00	r5 += 0x1
   14412	77 05 00 00 01 00 00 00	r5 >>= 0x1
   14413	bf 53 00 00 00 00 00 00	r3 = r5

000000000001c270 <LBB13_26>
   14414	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   14415	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r2
   14416	7b 4a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r4
   14417	07 09 00 00 01 00 00 00	r9 += 0x1
   14418	b7 08 00 00 01 00 00 00	r8 = 0x1

000000000001c298 <LBB13_27>
   14419	07 09 00 00 ff ff ff ff	r9 += -0x1
   14420	15 09 07 00 00 00 00 00	if r9 == 0x0 goto +0x7 <LBB13_44>
   14421	61 62 34 00 00 00 00 00	r2 = *(u32 *)(r6 + 0x34)
   14422	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14423	79 63 28 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x28)
   14424	79 33 20 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x20)
   14425	8d 00 00 00 03 00 00 00	callx r3
   14426	55 00 20 00 00 00 00 00	if r0 != 0x0 goto +0x20 <LBB13_49>
   14427	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB13_27>

000000000001c2e0 <LBB13_44>
   14428	61 69 34 00 00 00 00 00	r9 = *(u32 *)(r6 + 0x34)
   14429	bf 61 00 00 00 00 00 00	r1 = r6
   14430	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   14431	bf 73 00 00 00 00 00 00	r3 = r7
   14432	79 a4 d8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 0x28)
   14433	85 10 00 00 49 00 00 00	call 0x49 ; <core::fmt::Formatter::pad_integral::write_prefix>
   14434	b7 08 00 00 01 00 00 00	r8 = 0x1
   14435	55 00 17 00 00 00 00 00	if r0 != 0x0 goto +0x17 <LBB13_49>
   14436	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14437	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   14438	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14439	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
   14440	79 a3 f8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x8)
   14441	8d 00 00 00 04 00 00 00	callx r4
   14442	55 00 10 00 00 00 00 00	if r0 != 0x0 goto +0x10 <LBB13_49>
   14443	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14444	07 01 00 00 01 00 00 00	r1 += 0x1
   14445	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14446	79 67 28 00 00 00 00 00	r7 = *(u64 *)(r6 + 0x28)
   14447	79 66 20 00 00 00 00 00	r6 = *(u64 *)(r6 + 0x20)

000000000001c380 <LBB13_47>
   14448	b7 08 00 00 00 00 00 00	r8 = 0x0
   14449	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14450	07 01 00 00 ff ff ff ff	r1 += -0x1
   14451	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   14452	15 01 06 00 00 00 00 00	if r1 == 0x0 goto +0x6 <LBB13_49>
   14453	79 73 20 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x20)
   14454	bf 61 00 00 00 00 00 00	r1 = r6
   14455	bf 92 00 00 00 00 00 00	r2 = r9
   14456	8d 00 00 00 03 00 00 00	callx r3
   14457	b7 08 00 00 01 00 00 00	r8 = 0x1
   14458	15 00 f5 ff 00 00 00 00	if r0 == 0x0 goto -0xb <LBB13_47>

000000000001c3d8 <LBB13_49>
   14459	bf 80 00 00 00 00 00 00	r0 = r8
   14460	95 00 00 00 00 00 00 00	exit

000000000001c3e8 <LBB13_34>
   14461	15 01 ba ff 03 00 00 00	if r1 == 0x3 goto -0x46 <LBB13_33>
   14462	bf 29 00 00 00 00 00 00	r9 = r2
   14463	77 09 00 00 01 00 00 00	r9 >>= 0x1
   14464	07 02 00 00 01 00 00 00	r2 += 0x1
   14465	77 02 00 00 01 00 00 00	r2 >>= 0x1
   14466	bf 27 00 00 00 00 00 00	r7 = r2

000000000001c418 <LBB13_36>
   14467	07 09 00 00 01 00 00 00	r9 += 0x1
   14468	b7 08 00 00 01 00 00 00	r8 = 0x1

000000000001c428 <LBB13_37>
   14469	07 09 00 00 ff ff ff ff	r9 += -0x1
   14470	15 09 07 00 00 00 00 00	if r9 == 0x0 goto +0x7 <LBB13_39>
   14471	61 62 34 00 00 00 00 00	r2 = *(u32 *)(r6 + 0x34)
   14472	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14473	79 63 28 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x28)
   14474	79 33 20 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x20)
   14475	8d 00 00 00 03 00 00 00	callx r3
   14476	55 00 ee ff 00 00 00 00	if r0 != 0x0 goto -0x12 <LBB13_49>
   14477	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB13_37>

000000000001c470 <LBB13_39>
   14478	61 61 34 00 00 00 00 00	r1 = *(u32 *)(r6 + 0x34)
   14479	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   14480	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14481	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   14482	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14483	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x10)
   14484	79 a3 f8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x8)
   14485	8d 00 00 00 04 00 00 00	callx r4
   14486	b7 08 00 00 01 00 00 00	r8 = 0x1
   14487	55 00 e3 ff 00 00 00 00	if r0 != 0x0 goto -0x1d <LBB13_49>
   14488	07 07 00 00 01 00 00 00	r7 += 0x1
   14489	79 61 28 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x28)
   14490	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   14491	79 69 20 00 00 00 00 00	r9 = *(u64 *)(r6 + 0x20)

000000000001c4e0 <LBB13_41>
   14492	07 07 00 00 ff ff ff ff	r7 += -0x1
   14493	15 07 07 00 00 00 00 00	if r7 == 0x0 goto +0x7 <LBB13_43>
   14494	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x8)
   14495	79 13 20 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x20)
   14496	bf 91 00 00 00 00 00 00	r1 = r9
   14497	79 a2 e8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x18)
   14498	8d 00 00 00 03 00 00 00	callx r3
   14499	55 00 d7 ff 00 00 00 00	if r0 != 0x0 goto -0x29 <LBB13_49>
   14500	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB13_41>

000000000001c528 <LBB13_43>
   14501	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x28)
   14502	73 16 38 00 00 00 00 00	*(u8 *)(r6 + 0x38) = r1
   14503	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14504	63 16 34 00 00 00 00 00	*(u32 *)(r6 + 0x34) = r1
   14505	b7 08 00 00 00 00 00 00	r8 = 0x0
   14506	05 00 d0 ff 00 00 00 00	goto -0x30 <LBB13_49>

000000000001c558 <core::fmt::Formatter::pad_integral::write_prefix>
   14507	bf 46 00 00 00 00 00 00	r6 = r4
   14508	bf 37 00 00 00 00 00 00	r7 = r3
   14509	bf 18 00 00 00 00 00 00	r8 = r1
   14510	bf 21 00 00 00 00 00 00	r1 = r2
   14511	67 01 00 00 20 00 00 00	r1 <<= 0x20
   14512	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14513	15 01 07 00 00 00 11 00	if r1 == 0x110000 goto +0x7 <LBB14_2>
   14514	79 81 20 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x20)
   14515	79 83 28 00 00 00 00 00	r3 = *(u64 *)(r8 + 0x28)
   14516	79 33 20 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x20)
   14517	8d 00 00 00 03 00 00 00	callx r3
   14518	bf 01 00 00 00 00 00 00	r1 = r0
   14519	b7 00 00 00 01 00 00 00	r0 = 0x1
   14520	55 01 08 00 00 00 00 00	if r1 != 0x0 goto +0x8 <LBB14_4>

000000000001c5c8 <LBB14_2>
   14521	b7 00 00 00 00 00 00 00	r0 = 0x0
   14522	15 07 06 00 00 00 00 00	if r7 == 0x0 goto +0x6 <LBB14_4>
   14523	79 81 20 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x20)
   14524	79 82 28 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x28)
   14525	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14526	bf 72 00 00 00 00 00 00	r2 = r7
   14527	bf 63 00 00 00 00 00 00	r3 = r6
   14528	8d 00 00 00 04 00 00 00	callx r4

000000000001c608 <LBB14_4>
   14529	95 00 00 00 00 00 00 00	exit

000000000001c610 <core::fmt::Formatter::pad>
   14530	bf 36 00 00 00 00 00 00	r6 = r3
   14531	bf 17 00 00 00 00 00 00	r7 = r1
   14532	79 71 10 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x10)
   14533	79 73 00 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x0)
   14534	15 03 02 00 01 00 00 00	if r3 == 0x1 goto +0x2 <LBB15_2>
   14535	15 01 03 00 01 00 00 00	if r1 == 0x1 goto +0x3 <LBB15_3>
   14536	05 00 9a 00 00 00 00 00	goto +0x9a <LBB15_49>

000000000001c648 <LBB15_2>
   14537	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB15_3>
   14538	05 00 7e 00 00 00 00 00	goto +0x7e <LBB15_40>

000000000001c658 <LBB15_3>
   14539	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   14540	b7 03 00 00 00 00 00 00	r3 = 0x0
   14541	bf 71 00 00 00 00 00 00	r1 = r7
   14542	bf 27 00 00 00 00 00 00	r7 = r2
   14543	7b 6a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r6
   14544	0f 67 00 00 00 00 00 00	r7 += r6
   14545	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   14546	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   14547	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   14548	bf 28 00 00 00 00 00 00	r8 = r2
   14549	15 04 33 00 00 00 00 00	if r4 == 0x0 goto +0x33 <LBB15_17>
   14550	b7 03 00 00 00 00 00 00	r3 = 0x0
   14551	79 a8 f8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x8)

000000000001c6c0 <LBB15_5>
   14552	bf 85 00 00 00 00 00 00	r5 = r8
   14553	bf 39 00 00 00 00 00 00	r9 = r3
   14554	1d 57 68 00 00 00 00 00	if r7 == r5 goto +0x68 <LBB15_38>
   14555	bf 58 00 00 00 00 00 00	r8 = r5
   14556	07 08 00 00 01 00 00 00	r8 += 0x1
   14557	71 53 00 00 00 00 00 00	r3 = *(u8 *)(r5 + 0x0)
   14558	bf 31 00 00 00 00 00 00	r1 = r3
   14559	67 01 00 00 38 00 00 00	r1 <<= 0x38
   14560	c7 01 00 00 38 00 00 00	r1 s>>= 0x38
   14561	65 01 22 00 ff ff ff ff	if r1 s> -0x1 goto +0x22 <LBB15_16>
   14562	b7 00 00 00 00 00 00 00	r0 = 0x0
   14563	bf 72 00 00 00 00 00 00	r2 = r7
   14564	1d 78 05 00 00 00 00 00	if r8 == r7 goto +0x5 <LBB15_9>
   14565	bf 58 00 00 00 00 00 00	r8 = r5
   14566	07 08 00 00 02 00 00 00	r8 += 0x2
   14567	71 50 01 00 00 00 00 00	r0 = *(u8 *)(r5 + 0x1)
   14568	57 00 00 00 3f 00 00 00	r0 &= 0x3f
   14569	bf 82 00 00 00 00 00 00	r2 = r8

000000000001c750 <LBB15_9>
   14570	b7 01 00 00 e0 00 00 00	r1 = 0xe0
   14571	2d 31 18 00 00 00 00 00	if r1 > r3 goto +0x18 <LBB15_16>
   14572	b7 01 00 00 00 00 00 00	r1 = 0x0
   14573	bf 76 00 00 00 00 00 00	r6 = r7
   14574	1d 72 05 00 00 00 00 00	if r2 == r7 goto +0x5 <LBB15_12>
   14575	71 21 00 00 00 00 00 00	r1 = *(u8 *)(r2 + 0x0)
   14576	07 02 00 00 01 00 00 00	r2 += 0x1
   14577	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   14578	bf 28 00 00 00 00 00 00	r8 = r2
   14579	bf 26 00 00 00 00 00 00	r6 = r2

000000000001c7a0 <LBB15_12>
   14580	b7 02 00 00 f0 00 00 00	r2 = 0xf0
   14581	2d 32 0e 00 00 00 00 00	if r2 > r3 goto +0xe <LBB15_16>
   14582	b7 02 00 00 00 00 00 00	r2 = 0x0
   14583	1d 76 04 00 00 00 00 00	if r6 == r7 goto +0x4 <LBB15_15>
   14584	71 62 00 00 00 00 00 00	r2 = *(u8 *)(r6 + 0x0)
   14585	07 06 00 00 01 00 00 00	r6 += 0x1
   14586	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   14587	bf 68 00 00 00 00 00 00	r8 = r6

000000000001c7e0 <LBB15_15>
   14588	67 00 00 00 0c 00 00 00	r0 <<= 0xc
   14589	67 03 00 00 12 00 00 00	r3 <<= 0x12
   14590	57 03 00 00 00 00 1c 00	r3 &= 0x1c0000
   14591	4f 30 00 00 00 00 00 00	r0 |= r3
   14592	67 01 00 00 06 00 00 00	r1 <<= 0x6
   14593	4f 10 00 00 00 00 00 00	r0 |= r1
   14594	4f 20 00 00 00 00 00 00	r0 |= r2
   14595	15 00 3f 00 00 00 11 00	if r0 == 0x110000 goto +0x3f <LBB15_38>

000000000001c820 <LBB15_16>
   14596	bf 83 00 00 00 00 00 00	r3 = r8
   14597	1f 53 00 00 00 00 00 00	r3 -= r5
   14598	0f 93 00 00 00 00 00 00	r3 += r9
   14599	07 04 00 00 ff ff ff ff	r4 += -0x1
   14600	55 04 cf ff 00 00 00 00	if r4 != 0x0 goto -0x31 <LBB15_5>

000000000001c848 <LBB15_17>
   14601	1d 87 39 00 00 00 00 00	if r7 == r8 goto +0x39 <LBB15_38>
   14602	71 84 00 00 00 00 00 00	r4 = *(u8 *)(r8 + 0x0)
   14603	bf 41 00 00 00 00 00 00	r1 = r4
   14604	67 01 00 00 38 00 00 00	r1 <<= 0x38
   14605	c7 01 00 00 38 00 00 00	r1 s>>= 0x38
   14606	65 01 20 00 ff ff ff ff	if r1 s> -0x1 goto +0x20 <LBB15_28>
   14607	bf 81 00 00 00 00 00 00	r1 = r8
   14608	07 01 00 00 01 00 00 00	r1 += 0x1
   14609	b7 05 00 00 00 00 00 00	r5 = 0x0
   14610	bf 72 00 00 00 00 00 00	r2 = r7
   14611	1d 71 05 00 00 00 00 00	if r1 == r7 goto +0x5 <LBB15_21>
   14612	71 85 01 00 00 00 00 00	r5 = *(u8 *)(r8 + 0x1)
   14613	07 08 00 00 02 00 00 00	r8 += 0x2
   14614	57 05 00 00 3f 00 00 00	r5 &= 0x3f
   14615	67 05 00 00 06 00 00 00	r5 <<= 0x6
   14616	bf 82 00 00 00 00 00 00	r2 = r8

000000000001c8c8 <LBB15_21>
   14617	b7 01 00 00 e0 00 00 00	r1 = 0xe0
   14618	2d 41 14 00 00 00 00 00	if r1 > r4 goto +0x14 <LBB15_28>
   14619	b7 01 00 00 00 00 00 00	r1 = 0x0
   14620	bf 70 00 00 00 00 00 00	r0 = r7
   14621	1d 72 04 00 00 00 00 00	if r2 == r7 goto +0x4 <LBB15_24>
   14622	71 21 00 00 00 00 00 00	r1 = *(u8 *)(r2 + 0x0)
   14623	07 02 00 00 01 00 00 00	r2 += 0x1
   14624	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   14625	bf 20 00 00 00 00 00 00	r0 = r2

000000000001c910 <LBB15_24>
   14626	b7 02 00 00 f0 00 00 00	r2 = 0xf0
   14627	2d 42 0b 00 00 00 00 00	if r2 > r4 goto +0xb <LBB15_28>
   14628	4f 51 00 00 00 00 00 00	r1 |= r5
   14629	b7 02 00 00 00 00 00 00	r2 = 0x0
   14630	1d 70 02 00 00 00 00 00	if r0 == r7 goto +0x2 <LBB15_27>
   14631	71 02 00 00 00 00 00 00	r2 = *(u8 *)(r0 + 0x0)
   14632	57 02 00 00 3f 00 00 00	r2 &= 0x3f

000000000001c948 <LBB15_27>
   14633	67 01 00 00 06 00 00 00	r1 <<= 0x6
   14634	67 04 00 00 12 00 00 00	r4 <<= 0x12
   14635	57 04 00 00 00 00 1c 00	r4 &= 0x1c0000
   14636	4f 41 00 00 00 00 00 00	r1 |= r4
   14637	4f 21 00 00 00 00 00 00	r1 |= r2
   14638	15 01 14 00 00 00 11 00	if r1 == 0x110000 goto +0x14 <LBB15_38>

000000000001c978 <LBB15_28>
   14639	79 a5 f0 ff 00 00 00 00	r5 = *(u64 *)(r10 - 0x10)
   14640	79 a0 f8 ff 00 00 00 00	r0 = *(u64 *)(r10 - 0x8)
   14641	15 03 0a 00 00 00 00 00	if r3 == 0x0 goto +0xa <LBB15_32>
   14642	1d 53 09 00 00 00 00 00	if r3 == r5 goto +0x9 <LBB15_32>
   14643	b7 01 00 00 00 00 00 00	r1 = 0x0
   14644	3d 53 08 00 00 00 00 00	if r3 >= r5 goto +0x8 <LBB15_33>
   14645	bf 02 00 00 00 00 00 00	r2 = r0
   14646	0f 32 00 00 00 00 00 00	r2 += r3
   14647	71 22 00 00 00 00 00 00	r2 = *(u8 *)(r2 + 0x0)
   14648	67 02 00 00 38 00 00 00	r2 <<= 0x38
   14649	c7 02 00 00 38 00 00 00	r2 s>>= 0x38
   14650	b7 04 00 00 c0 ff ff ff	r4 = -0x40
   14651	6d 24 01 00 00 00 00 00	if r4 s> r2 goto +0x1 <LBB15_33>

000000000001c9e0 <LBB15_32>
   14652	bf 01 00 00 00 00 00 00	r1 = r0

000000000001c9e8 <LBB15_33>
   14653	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB15_35>
   14654	bf 35 00 00 00 00 00 00	r5 = r3

000000000001c9f8 <LBB15_35>
   14655	7b 5a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r5
   14656	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB15_37>
   14657	bf 10 00 00 00 00 00 00	r0 = r1

000000000001ca10 <LBB15_37>
   14658	7b 0a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r0

000000000001ca18 <LBB15_38>
   14659	79 a6 f0 ff 00 00 00 00	r6 = *(u64 *)(r10 - 0x10)
   14660	79 a7 e8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x18)
   14661	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   14662	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   14663	15 01 01 00 01 00 00 00	if r1 == 0x1 goto +0x1 <LBB15_40>
   14664	05 00 1a 00 00 00 00 00	goto +0x1a <LBB15_49>

000000000001ca48 <LBB15_40>
   14665	15 06 16 00 00 00 00 00	if r6 == 0x0 goto +0x16 <LBB15_48>
   14666	b7 01 00 00 00 00 00 00	r1 = 0x0
   14667	bf 60 00 00 00 00 00 00	r0 = r6
   14668	bf 23 00 00 00 00 00 00	r3 = r2
   14669	05 00 0c 00 00 00 00 00	goto +0xc <LBB15_42>

000000000001ca70 <LBB15_44>
   14670	0f 41 00 00 00 00 00 00	r1 += r4
   14671	07 03 00 00 01 00 00 00	r3 += 0x1
   14672	07 00 00 00 ff ff ff ff	r0 += -0x1
   14673	55 00 08 00 00 00 00 00	if r0 != 0x0 goto +0x8 <LBB15_42>
   14674	bf 63 00 00 00 00 00 00	r3 = r6
   14675	1f 13 00 00 00 00 00 00	r3 -= r1
   14676	79 78 08 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x8)
   14677	3d 83 0d 00 00 00 00 00	if r3 >= r8 goto +0xd <LBB15_49>
   14678	b7 01 00 00 00 00 00 00	r1 = 0x0
   14679	bf 63 00 00 00 00 00 00	r3 = r6
   14680	bf 24 00 00 00 00 00 00	r4 = r2
   14681	05 00 1a 00 00 00 00 00	goto +0x1a <LBB15_47>

000000000001cad0 <LBB15_42>
   14682	71 35 00 00 00 00 00 00	r5 = *(u8 *)(r3 + 0x0)
   14683	57 05 00 00 c0 00 00 00	r5 &= 0xc0
   14684	b7 04 00 00 01 00 00 00	r4 = 0x1
   14685	15 05 f0 ff 80 00 00 00	if r5 == 0x80 goto -0x10 <LBB15_44>
   14686	b7 04 00 00 00 00 00 00	r4 = 0x0
   14687	05 00 ee ff 00 00 00 00	goto -0x12 <LBB15_44>

000000000001cb00 <LBB15_48>
   14688	b7 01 00 00 00 00 00 00	r1 = 0x0
   14689	79 78 08 00 00 00 00 00	r8 = *(u64 *)(r7 + 0x8)
   14690	55 08 0a 00 00 00 00 00	if r8 != 0x0 goto +0xa <LBB15_52>

000000000001cb18 <LBB15_49>
   14691	79 71 20 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x20)
   14692	79 73 28 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x28)
   14693	79 34 18 00 00 00 00 00	r4 = *(u64 *)(r3 + 0x18)
   14694	bf 63 00 00 00 00 00 00	r3 = r6
   14695	8d 00 00 00 04 00 00 00	callx r4
   14696	05 00 44 00 00 00 00 00	goto +0x44 <LBB15_66>

000000000001cb48 <LBB15_51>
   14697	0f 51 00 00 00 00 00 00	r1 += r5
   14698	07 04 00 00 01 00 00 00	r4 += 0x1
   14699	07 03 00 00 ff ff ff ff	r3 += -0x1
   14700	55 03 07 00 00 00 00 00	if r3 != 0x0 goto +0x7 <LBB15_47>

000000000001cb68 <LBB15_52>
   14701	1f 61 00 00 00 00 00 00	r1 -= r6
   14702	71 74 38 00 00 00 00 00	r4 = *(u8 *)(r7 + 0x38)
   14703	b7 09 00 00 00 00 00 00	r9 = 0x0
   14704	b7 03 00 00 00 00 00 00	r3 = 0x0
   14705	15 04 08 00 03 00 00 00	if r4 == 0x3 goto +0x8 <LBB15_54>
   14706	bf 43 00 00 00 00 00 00	r3 = r4
   14707	05 00 06 00 00 00 00 00	goto +0x6 <LBB15_54>

000000000001cba0 <LBB15_47>
   14708	71 40 00 00 00 00 00 00	r0 = *(u8 *)(r4 + 0x0)
   14709	57 00 00 00 c0 00 00 00	r0 &= 0xc0
   14710	b7 05 00 00 01 00 00 00	r5 = 0x1
   14711	15 00 f1 ff 80 00 00 00	if r0 == 0x80 goto -0xf <LBB15_51>
   14712	b7 05 00 00 00 00 00 00	r5 = 0x0
   14713	05 00 ef ff 00 00 00 00	goto -0x11 <LBB15_51>

000000000001cbd0 <LBB15_54>
   14714	0f 81 00 00 00 00 00 00	r1 += r8
   14715	57 03 00 00 03 00 00 00	r3 &= 0x3
   14716	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r2
   14717	65 03 05 00 01 00 00 00	if r3 s> 0x1 goto +0x5 <LBB15_57>
   14718	bf 18 00 00 00 00 00 00	r8 = r1
   14719	15 03 09 00 00 00 00 00	if r3 == 0x0 goto +0x9 <LBB15_59>

000000000001cc00 <LBB15_56>
   14720	b7 08 00 00 00 00 00 00	r8 = 0x0
   14721	bf 19 00 00 00 00 00 00	r9 = r1
   14722	05 00 06 00 00 00 00 00	goto +0x6 <LBB15_59>

000000000001cc18 <LBB15_57>
   14723	15 03 fc ff 03 00 00 00	if r3 == 0x3 goto -0x4 <LBB15_56>
   14724	bf 19 00 00 00 00 00 00	r9 = r1
   14725	77 09 00 00 01 00 00 00	r9 >>= 0x1
   14726	07 01 00 00 01 00 00 00	r1 += 0x1
   14727	77 01 00 00 01 00 00 00	r1 >>= 0x1
   14728	bf 18 00 00 00 00 00 00	r8 = r1

000000000001cc48 <LBB15_59>
   14729	07 09 00 00 01 00 00 00	r9 += 0x1

000000000001cc50 <LBB15_60>
   14730	07 09 00 00 ff ff ff ff	r9 += -0x1
   14731	15 09 09 00 00 00 00 00	if r9 == 0x0 goto +0x9 <LBB15_62>
   14732	61 72 34 00 00 00 00 00	r2 = *(u32 *)(r7 + 0x34)
   14733	79 71 20 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x20)
   14734	79 73 28 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x28)
   14735	79 33 20 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x20)
   14736	8d 00 00 00 03 00 00 00	callx r3
   14737	bf 01 00 00 00 00 00 00	r1 = r0
   14738	b7 00 00 00 01 00 00 00	r0 = 0x1
   14739	55 01 19 00 00 00 00 00	if r1 != 0x0 goto +0x19 <LBB15_66>
   14740	05 00 f5 ff 00 00 00 00	goto -0xb <LBB15_60>

000000000001cca8 <LBB15_62>
   14741	61 79 34 00 00 00 00 00	r9 = *(u32 *)(r7 + 0x34)
   14742	79 71 20 00 00 00 00 00	r1 = *(u64 *)(r7 + 0x20)
   14743	79 72 28 00 00 00 00 00	r2 = *(u64 *)(r7 + 0x28)
   14744	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   14745	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)
   14746	bf 63 00 00 00 00 00 00	r3 = r6
   14747	8d 00 00 00 04 00 00 00	callx r4
   14748	bf 01 00 00 00 00 00 00	r1 = r0
   14749	b7 00 00 00 01 00 00 00	r0 = 0x1
   14750	55 01 0e 00 00 00 00 00	if r1 != 0x0 goto +0xe <LBB15_66>
   14751	07 08 00 00 01 00 00 00	r8 += 0x1
   14752	bf 71 00 00 00 00 00 00	r1 = r7
   14753	79 17 28 00 00 00 00 00	r7 = *(u64 *)(r1 + 0x28)
   14754	79 16 20 00 00 00 00 00	r6 = *(u64 *)(r1 + 0x20)

000000000001cd18 <LBB15_64>
   14755	b7 00 00 00 00 00 00 00	r0 = 0x0
   14756	07 08 00 00 ff ff ff ff	r8 += -0x1
   14757	15 08 07 00 00 00 00 00	if r8 == 0x0 goto +0x7 <LBB15_66>
   14758	79 73 20 00 00 00 00 00	r3 = *(u64 *)(r7 + 0x20)
   14759	bf 61 00 00 00 00 00 00	r1 = r6
   14760	bf 92 00 00 00 00 00 00	r2 = r9
   14761	8d 00 00 00 03 00 00 00	callx r3
   14762	bf 01 00 00 00 00 00 00	r1 = r0
   14763	b7 00 00 00 01 00 00 00	r0 = 0x1
   14764	15 01 f6 ff 00 00 00 00	if r1 == 0x0 goto -0xa <LBB15_64>

000000000001cd68 <LBB15_66>
   14765	95 00 00 00 00 00 00 00	exit

000000000001cd70 <<core::fmt::Formatter as core::fmt::Write>::write_str>
   14766	79 14 20 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x20)
   14767	79 11 28 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x28)
   14768	79 15 18 00 00 00 00 00	r5 = *(u64 *)(r1 + 0x18)
   14769	bf 41 00 00 00 00 00 00	r1 = r4
   14770	8d 00 00 00 05 00 00 00	callx r5
   14771	95 00 00 00 00 00 00 00	exit

000000000001cda0 <<char as core::fmt::Debug>::fmt>
   14772	bf 26 00 00 00 00 00 00	r6 = r2
   14773	bf 17 00 00 00 00 00 00	r7 = r1
   14774	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14775	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   14776	79 23 20 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x20)
   14777	b7 02 00 00 27 00 00 00	r2 = 0x27
   14778	8d 00 00 00 03 00 00 00	callx r3
   14779	bf 01 00 00 00 00 00 00	r1 = r0
   14780	b7 00 00 00 01 00 00 00	r0 = 0x1
   14781	55 01 74 00 00 00 00 00	if r1 != 0x0 goto +0x74 <LBB42_48>
   14782	b7 09 00 00 02 00 00 00	r9 = 0x2
   14783	61 77 00 00 00 00 00 00	r7 = *(u32 *)(r7 + 0x0)
   14784	65 07 09 00 21 00 00 00	if r7 s> 0x21 goto +0x9 <LBB42_5>
   14785	b7 01 00 00 74 00 00 00	r1 = 0x74
   14786	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   14787	15 07 60 00 09 00 00 00	if r7 == 0x9 goto +0x60 <LBB42_27>
   14788	15 07 0b 00 0a 00 00 00	if r7 == 0xa goto +0xb <LBB42_10>
   14789	15 07 01 00 0d 00 00 00	if r7 == 0xd goto +0x1 <LBB42_8>
   14790	05 00 0c 00 00 00 00 00	goto +0xc <LBB42_12>

000000000001ce38 <LBB42_8>
   14791	b7 01 00 00 72 00 00 00	r1 = 0x72
   14792	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   14793	05 00 5a 00 00 00 00 00	goto +0x5a <LBB42_27>

000000000001ce50 <LBB42_5>
   14794	15 07 03 00 22 00 00 00	if r7 == 0x22 goto +0x3 <LBB42_11>
   14795	15 07 02 00 27 00 00 00	if r7 == 0x27 goto +0x2 <LBB42_11>
   14796	15 07 01 00 5c 00 00 00	if r7 == 0x5c goto +0x1 <LBB42_11>
   14797	05 00 05 00 00 00 00 00	goto +0x5 <LBB42_12>

000000000001ce70 <LBB42_11>
   14798	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   14799	05 00 54 00 00 00 00 00	goto +0x54 <LBB42_27>

000000000001ce80 <LBB42_10>
   14800	b7 01 00 00 6e 00 00 00	r1 = 0x6e
   14801	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   14802	05 00 51 00 00 00 00 00	goto +0x51 <LBB42_27>

000000000001ce98 <LBB42_12>
   14803	bf 71 00 00 00 00 00 00	r1 = r7
   14804	85 10 00 00 5f fc ff ff	call -0x3a1 ; <core::unicode::unicode_data::grapheme_extend::lookup>
   14805	15 00 01 00 00 00 00 00	if r0 == 0x0 goto +0x1 <LBB42_14>
   14806	05 00 17 00 00 00 00 00	goto +0x17 <LBB42_26>

000000000001ceb8 <LBB42_14>
   14807	b7 01 00 00 00 00 01 00	r1 = 0x10000
   14808	2d 71 a2 00 00 00 00 00	if r1 > r7 goto +0xa2 <LBB42_16>
   14809	b7 01 00 00 00 00 02 00	r1 = 0x20000
   14810	2d 71 01 00 00 00 00 00	if r1 > r7 goto +0x1 <LBB42_25>
   14811	05 00 b2 00 00 00 00 00	goto +0xb2 <LBB42_17>

000000000001cee0 <LBB42_25>
   14812	18 01 00 00 8a 42 02 00 00 00 00 00 00 00 00 00	r1 = 0x2428a ll
   14814	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   14815	b7 01 00 00 a3 01 00 00	r1 = 0x1a3
   14816	7b 1a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r1
   14817	b7 01 00 00 af 00 00 00	r1 = 0xaf
   14818	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   14819	bf a5 00 00 00 00 00 00	r5 = r10
   14820	bf 71 00 00 00 00 00 00	r1 = r7
   14821	18 02 00 00 8f 41 02 00 00 00 00 00 00 00 00 00	r2 = 0x2418f ll
   14823	b7 03 00 00 26 00 00 00	r3 = 0x26
   14824	18 04 00 00 db 41 02 00 00 00 00 00 00 00 00 00	r4 = 0x241db ll
   14826	85 10 00 00 8c fb ff ff	call -0x474 ; <core::unicode::printable::check>
   14827	b7 09 00 00 01 00 00 00	r9 = 0x1
   14828	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   14829	55 00 36 00 00 00 00 00	if r0 != 0x0 goto +0x36 <LBB42_27>

000000000001cf70 <LBB42_26>
   14830	bf 71 00 00 00 00 00 00	r1 = r7
   14831	47 01 00 00 01 00 00 00	r1 |= 0x1
   14832	bf 12 00 00 00 00 00 00	r2 = r1
   14833	77 02 00 00 01 00 00 00	r2 >>= 0x1
   14834	4f 21 00 00 00 00 00 00	r1 |= r2
   14835	bf 12 00 00 00 00 00 00	r2 = r1
   14836	77 02 00 00 02 00 00 00	r2 >>= 0x2
   14837	4f 21 00 00 00 00 00 00	r1 |= r2
   14838	bf 12 00 00 00 00 00 00	r2 = r1
   14839	77 02 00 00 04 00 00 00	r2 >>= 0x4
   14840	4f 21 00 00 00 00 00 00	r1 |= r2
   14841	18 02 00 00 00 00 00 00 00 00 00 00 05 00 00 00	r2 = 0x500000000 ll
   14843	4f 27 00 00 00 00 00 00	r7 |= r2
   14844	bf 12 00 00 00 00 00 00	r2 = r1
   14845	77 02 00 00 08 00 00 00	r2 >>= 0x8
   14846	4f 21 00 00 00 00 00 00	r1 |= r2
   14847	bf 12 00 00 00 00 00 00	r2 = r1
   14848	77 02 00 00 10 00 00 00	r2 >>= 0x10
   14849	4f 21 00 00 00 00 00 00	r1 |= r2
   14850	bf 12 00 00 00 00 00 00	r2 = r1
   14851	77 02 00 00 20 00 00 00	r2 >>= 0x20
   14852	4f 21 00 00 00 00 00 00	r1 |= r2
   14853	a7 01 00 00 ff ff ff ff	r1 ^= -0x1
   14854	18 02 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r2 = 0x5555555555555555 ll
   14856	bf 13 00 00 00 00 00 00	r3 = r1
   14857	77 03 00 00 01 00 00 00	r3 >>= 0x1
   14858	5f 23 00 00 00 00 00 00	r3 &= r2
   14859	1f 31 00 00 00 00 00 00	r1 -= r3
   14860	18 02 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r2 = 0x3333333333333333 ll
   14862	bf 18 00 00 00 00 00 00	r8 = r1
   14863	5f 28 00 00 00 00 00 00	r8 &= r2
   14864	77 01 00 00 02 00 00 00	r1 >>= 0x2
   14865	5f 21 00 00 00 00 00 00	r1 &= r2
   14866	0f 18 00 00 00 00 00 00	r8 += r1
   14867	bf 81 00 00 00 00 00 00	r1 = r8
   14868	77 01 00 00 04 00 00 00	r1 >>= 0x4
   14869	0f 18 00 00 00 00 00 00	r8 += r1
   14870	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   14872	5f 18 00 00 00 00 00 00	r8 &= r1
   14873	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   14875	2f 18 00 00 00 00 00 00	r8 *= r1
   14876	77 08 00 00 38 00 00 00	r8 >>= 0x38
   14877	07 08 00 00 e0 ff ff ff	r8 += -0x20
   14878	18 01 00 00 fc ff ff ff 00 00 00 00 00 00 00 00	r1 = 0xfffffffc ll
   14880	5f 18 00 00 00 00 00 00	r8 &= r1
   14881	b7 09 00 00 03 00 00 00	r9 = 0x3
   14882	77 08 00 00 02 00 00 00	r8 >>= 0x2
   14883	a7 08 00 00 07 00 00 00	r8 ^= 0x7

000000000001d120 <LBB42_27>
   14884	67 09 00 00 20 00 00 00	r9 <<= 0x20
   14885	bf 91 00 00 00 00 00 00	r1 = r9
   14886	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14887	65 01 0b 00 01 00 00 00	if r1 s> 0x1 goto +0xb <LBB42_30>
   14888	15 01 4c 00 00 00 00 00	if r1 == 0x0 goto +0x4c <LBB42_45>
   14889	b7 09 00 00 00 00 00 00	r9 = 0x0
   14890	79 a2 f8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 0x8)

000000000001d158 <LBB42_47>
   14891	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14892	79 63 28 00 00 00 00 00	r3 = *(u64 *)(r6 + 0x28)
   14893	79 33 20 00 00 00 00 00	r3 = *(u64 *)(r3 + 0x20)
   14894	8d 00 00 00 03 00 00 00	callx r3
   14895	bf 01 00 00 00 00 00 00	r1 = r0
   14896	b7 00 00 00 01 00 00 00	r0 = 0x1
   14897	15 01 f2 ff 00 00 00 00	if r1 == 0x0 goto -0xe <LBB42_27>

000000000001d190 <LBB42_48>
   14898	95 00 00 00 00 00 00 00	exit

000000000001d198 <LBB42_30>
   14899	b7 09 00 00 01 00 00 00	r9 = 0x1
   14900	b7 02 00 00 5c 00 00 00	r2 = 0x5c
   14901	15 01 f5 ff 02 00 00 00	if r1 == 0x2 goto -0xb <LBB42_47>
   14902	bf 71 00 00 00 00 00 00	r1 = r7
   14903	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14904	57 01 00 00 ff 00 00 00	r1 &= 0xff
   14905	65 01 13 00 02 00 00 00	if r1 s> 0x2 goto +0x13 <LBB42_35>
   14906	15 01 3a 00 00 00 00 00	if r1 == 0x0 goto +0x3a <LBB42_45>
   14907	15 01 19 00 01 00 00 00	if r1 == 0x1 goto +0x19 <LBB42_44>
   14908	bf 82 00 00 00 00 00 00	r2 = r8
   14909	67 02 00 00 02 00 00 00	r2 <<= 0x2
   14910	57 02 00 00 1c 00 00 00	r2 &= 0x1c
   14911	bf 71 00 00 00 00 00 00	r1 = r7
   14912	67 01 00 00 20 00 00 00	r1 <<= 0x20
   14913	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14914	7f 21 00 00 00 00 00 00	r1 >>= r2
   14915	57 01 00 00 0f 00 00 00	r1 &= 0xf
   14916	b7 02 00 00 30 00 00 00	r2 = 0x30
   14917	b7 03 00 00 0a 00 00 00	r3 = 0xa
   14918	2d 13 01 00 00 00 00 00	if r3 > r1 goto +0x1 <LBB42_41>
   14919	b7 02 00 00 57 00 00 00	r2 = 0x57

000000000001d240 <LBB42_41>
   14920	0f 12 00 00 00 00 00 00	r2 += r1
   14921	15 08 23 00 00 00 00 00	if r8 == 0x0 goto +0x23 <LBB42_43>
   14922	b7 09 00 00 03 00 00 00	r9 = 0x3
   14923	07 08 00 00 ff ff ff ff	r8 += -0x1
   14924	05 00 de ff 00 00 00 00	goto -0x22 <LBB42_47>

000000000001d268 <LBB42_35>
   14925	15 01 0d 00 03 00 00 00	if r1 == 0x3 goto +0xd <LBB42_39>
   14926	15 01 15 00 04 00 00 00	if r1 == 0x4 goto +0x15 <LBB42_46>
   14927	18 01 00 00 ff ff ff ff 00 00 00 00 00 ff ff ff	r1 = -0xff00000001 ll
   14929	5f 17 00 00 00 00 00 00	r7 &= r1
   14930	18 01 00 00 00 00 00 00 00 00 00 00 04 00 00 00	r1 = 0x400000000 ll
   14932	05 00 1d 00 00 00 00 00	goto +0x1d <LBB42_38>

000000000001d2a8 <LBB42_44>
   14933	18 01 00 00 ff ff ff ff 00 00 00 00 00 ff ff ff	r1 = -0xff00000001 ll
   14935	5f 17 00 00 00 00 00 00	r7 &= r1
   14936	b7 09 00 00 03 00 00 00	r9 = 0x3
   14937	b7 02 00 00 7d 00 00 00	r2 = 0x7d
   14938	05 00 d0 ff 00 00 00 00	goto -0x30 <LBB42_47>

000000000001d2d8 <LBB42_39>
   14939	18 01 00 00 ff ff ff ff 00 00 00 00 00 ff ff ff	r1 = -0xff00000001 ll
   14941	5f 17 00 00 00 00 00 00	r7 &= r1
   14942	18 01 00 00 00 00 00 00 00 00 00 00 02 00 00 00	r1 = 0x200000000 ll
   14944	4f 17 00 00 00 00 00 00	r7 |= r1
   14945	b7 09 00 00 03 00 00 00	r9 = 0x3
   14946	b7 02 00 00 7b 00 00 00	r2 = 0x7b
   14947	05 00 c7 ff 00 00 00 00	goto -0x39 <LBB42_47>

000000000001d320 <LBB42_46>
   14948	18 01 00 00 ff ff ff ff 00 00 00 00 00 ff ff ff	r1 = -0xff00000001 ll
   14950	5f 17 00 00 00 00 00 00	r7 &= r1
   14951	18 01 00 00 00 00 00 00 00 00 00 00 03 00 00 00	r1 = 0x300000000 ll
   14953	4f 17 00 00 00 00 00 00	r7 |= r1
   14954	b7 09 00 00 03 00 00 00	r9 = 0x3
   14955	b7 02 00 00 75 00 00 00	r2 = 0x75
   14956	05 00 be ff 00 00 00 00	goto -0x42 <LBB42_47>

000000000001d368 <LBB42_43>
   14957	18 01 00 00 ff ff ff ff 00 00 00 00 00 ff ff ff	r1 = -0xff00000001 ll
   14959	5f 17 00 00 00 00 00 00	r7 &= r1
   14960	18 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00	r1 = 0x100000000 ll

000000000001d390 <LBB42_38>
   14962	4f 17 00 00 00 00 00 00	r7 |= r1
   14963	b7 09 00 00 03 00 00 00	r9 = 0x3
   14964	05 00 b6 ff 00 00 00 00	goto -0x4a <LBB42_47>

000000000001d3a8 <LBB42_45>
   14965	79 61 20 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x20)
   14966	79 62 28 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x28)
   14967	79 23 20 00 00 00 00 00	r3 = *(u64 *)(r2 + 0x20)
   14968	b7 02 00 00 27 00 00 00	r2 = 0x27
   14969	8d 00 00 00 03 00 00 00	callx r3
   14970	05 00 b7 ff 00 00 00 00	goto -0x49 <LBB42_48>

000000000001d3d8 <LBB42_16>
   14971	18 01 00 00 5a 40 02 00 00 00 00 00 00 00 00 00	r1 = 0x2405a ll
   14973	7b 1a 08 f0 00 00 00 00	*(u64 *)(r10 - 0xff8) = r1
   14974	b7 01 00 00 35 01 00 00	r1 = 0x135
   14975	7b 1a 10 f0 00 00 00 00	*(u64 *)(r10 - 0xff0) = r1
   14976	b7 01 00 00 22 01 00 00	r1 = 0x122
   14977	7b 1a 00 f0 00 00 00 00	*(u64 *)(r10 - 0x1000) = r1
   14978	bf a5 00 00 00 00 00 00	r5 = r10
   14979	bf 71 00 00 00 00 00 00	r1 = r7
   14980	18 02 00 00 e6 3e 02 00 00 00 00 00 00 00 00 00	r2 = 0x23ee6 ll
   14982	b7 03 00 00 29 00 00 00	r3 = 0x29
   14983	18 04 00 00 38 3f 02 00 00 00 00 00 00 00 00 00	r4 = 0x23f38 ll
   14985	85 10 00 00 ed fa ff ff	call -0x513 ; <core::unicode::printable::check>
   14986	b7 09 00 00 01 00 00 00	r9 = 0x1
   14987	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   14988	55 00 97 ff 00 00 00 00	if r0 != 0x0 goto -0x69 <LBB42_27>
   14989	05 00 60 ff 00 00 00 00	goto -0xa0 <LBB42_26>

000000000001d470 <LBB42_17>
   14990	25 07 5f ff ef 01 0e 00	if r7 > 0xe01ef goto -0xa1 <LBB42_26>
   14991	bf 71 00 00 00 00 00 00	r1 = r7
   14992	07 01 00 00 b5 ec fc ff	r1 += -0x3134b
   14993	67 01 00 00 20 00 00 00	r1 <<= 0x20
   14994	77 01 00 00 20 00 00 00	r1 >>= 0x20
   14995	b7 02 00 00 b5 ed 0a 00	r2 = 0xaedb5
   14996	2d 12 59 ff 00 00 00 00	if r2 > r1 goto -0xa7 <LBB42_26>
   14997	bf 71 00 00 00 00 00 00	r1 = r7
   14998	07 01 00 00 e2 05 fd ff	r1 += -0x2fa1e
   14999	67 01 00 00 20 00 00 00	r1 <<= 0x20
   15000	77 01 00 00 20 00 00 00	r1 >>= 0x20
   15001	b7 02 00 00 e2 05 00 00	r2 = 0x5e2
   15002	2d 12 53 ff 00 00 00 00	if r2 > r1 goto -0xad <LBB42_26>
   15003	bf 71 00 00 00 00 00 00	r1 = r7
   15004	07 01 00 00 1f 14 fd ff	r1 += -0x2ebe1
   15005	67 01 00 00 20 00 00 00	r1 <<= 0x20
   15006	77 01 00 00 20 00 00 00	r1 >>= 0x20
   15007	b7 02 00 00 1f 0c 00 00	r2 = 0xc1f
   15008	2d 12 4d ff 00 00 00 00	if r2 > r1 goto -0xb3 <LBB42_26>
   15009	bf 71 00 00 00 00 00 00	r1 = r7
   15010	07 01 00 00 5e 31 fd ff	r1 += -0x2cea2
   15011	67 01 00 00 20 00 00 00	r1 <<= 0x20
   15012	77 01 00 00 20 00 00 00	r1 >>= 0x20
   15013	b7 02 00 00 0e 00 00 00	r2 = 0xe
   15014	2d 12 47 ff 00 00 00 00	if r2 > r1 goto -0xb9 <LBB42_26>
   15015	bf 71 00 00 00 00 00 00	r1 = r7
   15016	57 01 00 00 fe ff 1f 00	r1 &= 0x1ffffe
   15017	15 01 44 ff 1e b8 02 00	if r1 == 0x2b81e goto -0xbc <LBB42_26>
   15018	bf 71 00 00 00 00 00 00	r1 = r7
   15019	07 01 00 00 22 59 fd ff	r1 += -0x2a6de
   15020	67 01 00 00 20 00 00 00	r1 <<= 0x20
   15021	77 01 00 00 20 00 00 00	r1 >>= 0x20
   15022	b7 02 00 00 22 00 00 00	r2 = 0x22
   15023	2d 12 3e ff 00 00 00 00	if r2 > r1 goto -0xc2 <LBB42_26>
   15024	b7 09 00 00 01 00 00 00	r9 = 0x1
   15025	bf 71 00 00 00 00 00 00	r1 = r7
   15026	07 01 00 00 cb 48 fd ff	r1 += -0x2b735
   15027	67 01 00 00 20 00 00 00	r1 <<= 0x20
   15028	77 01 00 00 20 00 00 00	r1 >>= 0x20
   15029	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   15030	25 01 6d ff 0a 00 00 00	if r1 > 0xa goto -0x93 <LBB42_27>
   15031	05 00 36 ff 00 00 00 00	goto -0xca <LBB42_26>

000000000001d5c0 <<core::fmt::Error as core::fmt::Debug>::fmt>
   15032	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   15033	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   15034	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15035	18 02 00 00 c4 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247c4 ll
   15037	b7 03 00 00 05 00 00 00	r3 = 0x5
   15038	8d 00 00 00 04 00 00 00	callx r4
   15039	95 00 00 00 00 00 00 00	exit

000000000001d600 <<&T as core::fmt::Debug>::fmt>
   15040	79 13 00 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x0)
   15041	79 11 08 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x8)
   15042	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   15043	bf 31 00 00 00 00 00 00	r1 = r3
   15044	8d 00 00 00 04 00 00 00	callx r4
   15045	95 00 00 00 00 00 00 00	exit

000000000001d630 <<&T as core::fmt::Debug>::fmt>
   15046	bf 21 00 00 00 00 00 00	r1 = r2
   15047	18 02 00 00 c2 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247c2 ll
   15049	b7 03 00 00 02 00 00 00	r3 = 0x2
   15050	85 10 00 00 f7 fd ff ff	call -0x209 ; <core::fmt::Formatter::pad>
   15051	95 00 00 00 00 00 00 00	exit

000000000001d660 <<&T as core::fmt::Display>::fmt>
   15052	bf 24 00 00 00 00 00 00	r4 = r2
   15053	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   15054	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   15055	bf 41 00 00 00 00 00 00	r1 = r4
   15056	85 10 00 00 f1 fd ff ff	call -0x20f ; <core::fmt::Formatter::pad>
   15057	95 00 00 00 00 00 00 00	exit

000000000001d690 <<&T as core::fmt::Display>::fmt>
   15058	bf 24 00 00 00 00 00 00	r4 = r2
   15059	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15060	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   15061	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0x0)
   15062	bf 41 00 00 00 00 00 00	r1 = r4
   15063	85 10 00 00 ea fd ff ff	call -0x216 ; <core::fmt::Formatter::pad>
   15064	95 00 00 00 00 00 00 00	exit

000000000001d6c8 <<&T as core::fmt::Display>::fmt>
   15065	79 24 28 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x28)
   15066	79 22 20 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x20)
   15067	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15068	79 13 28 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x28)
   15069	7b 3a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r3
   15070	79 13 20 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x20)
   15071	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   15072	79 13 18 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x18)
   15073	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
   15074	79 13 10 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x10)
   15075	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
   15076	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x8)
   15077	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
   15078	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15079	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   15080	bf a3 00 00 00 00 00 00	r3 = r10
   15081	07 03 00 00 d0 ff ff ff	r3 += -0x30
   15082	bf 21 00 00 00 00 00 00	r1 = r2
   15083	bf 42 00 00 00 00 00 00	r2 = r4
   15084	85 10 00 00 49 fc ff ff	call -0x3b7 ; <core::fmt::write>
   15085	95 00 00 00 00 00 00 00	exit

000000000001d770 <core::ptr::drop_in_place>
   15086	95 00 00 00 00 00 00 00	exit

000000000001d778 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15087	bf 36 00 00 00 00 00 00	r6 = r3
   15088	bf 27 00 00 00 00 00 00	r7 = r2
   15089	bf 18 00 00 00 00 00 00	r8 = r1
   15090	b7 00 00 00 00 00 00 00	r0 = 0x0
   15091	15 06 22 00 00 00 00 00	if r6 == 0x0 goto +0x22 <LBB2_43>
   15092	7b 8a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r8
   15093	05 00 21 00 00 00 00 00	goto +0x21 <LBB2_2>

000000000001d7b0 <LBB2_33>
   15094	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
   15095	73 51 00 00 00 00 00 00	*(u8 *)(r1 + 0x0) = r5
   15096	79 82 08 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x8)
   15097	79 81 00 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x0)
   15098	15 09 10 00 00 00 00 00	if r9 == 0x0 goto +0x10 <LBB2_38>
   15099	1d 96 0f 00 00 00 00 00	if r6 == r9 goto +0xf <LBB2_38>
   15100	3d 69 06 00 00 00 00 00	if r9 >= r6 goto +0x6 <LBB2_37>
   15101	bf 73 00 00 00 00 00 00	r3 = r7
   15102	0f 93 00 00 00 00 00 00	r3 += r9
   15103	71 33 00 00 00 00 00 00	r3 = *(u8 *)(r3 + 0x0)
   15104	67 03 00 00 38 00 00 00	r3 <<= 0x38
   15105	c7 03 00 00 38 00 00 00	r3 s>>= 0x38
   15106	65 03 9b 00 bf ff ff ff	if r3 s> -0x41 goto +0x9b <LBB2_39>

000000000001d818 <LBB2_37>
   15107	bf 71 00 00 00 00 00 00	r1 = r7
   15108	bf 62 00 00 00 00 00 00	r2 = r6
   15109	b7 03 00 00 00 00 00 00	r3 = 0x0
   15110	bf 94 00 00 00 00 00 00	r4 = r9
   15111	18 05 00 00 38 54 02 00 00 00 00 00 00 00 00 00	r5 = 0x25438 ll
   15113	85 10 00 00 6b f9 ff ff	call -0x695 ; <core::str::slice_error_fail>
   15114	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001d858 <LBB2_38>
   15115	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15116	bf 72 00 00 00 00 00 00	r2 = r7
   15117	bf 93 00 00 00 00 00 00	r3 = r9
   15118	8d 00 00 00 04 00 00 00	callx r4
   15119	bf 01 00 00 00 00 00 00	r1 = r0
   15120	b7 00 00 00 01 00 00 00	r0 = 0x1
   15121	55 01 04 00 00 00 00 00	if r1 != 0x0 goto +0x4 <LBB2_43>

000000000001d890 <LBB2_42>
   15122	0f 97 00 00 00 00 00 00	r7 += r9
   15123	1f 96 00 00 00 00 00 00	r6 -= r9
   15124	b7 00 00 00 00 00 00 00	r0 = 0x0
   15125	55 06 01 00 00 00 00 00	if r6 != 0x0 goto +0x1 <LBB2_2>

000000000001d8b0 <LBB2_43>
   15126	95 00 00 00 00 00 00 00	exit

000000000001d8b8 <LBB2_2>
   15127	79 81 10 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x10)
   15128	71 11 00 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x0)
   15129	15 01 0a 00 00 00 00 00	if r1 == 0x0 goto +0xa <LBB2_4>
   15130	79 81 00 00 00 00 00 00	r1 = *(u64 *)(r8 + 0x0)
   15131	79 82 08 00 00 00 00 00	r2 = *(u64 *)(r8 + 0x8)
   15132	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15133	18 02 00 00 e8 37 02 00 00 00 00 00 00 00 00 00	r2 = 0x237e8 ll
   15135	b7 03 00 00 04 00 00 00	r3 = 0x4
   15136	8d 00 00 00 04 00 00 00	callx r4
   15137	bf 01 00 00 00 00 00 00	r1 = r0
   15138	b7 00 00 00 01 00 00 00	r0 = 0x1
   15139	55 01 f2 ff 00 00 00 00	if r1 != 0x0 goto -0xe <LBB2_43>

000000000001d920 <LBB2_4>
   15140	b7 03 00 00 00 00 00 00	r3 = 0x0
   15141	bf 62 00 00 00 00 00 00	r2 = r6
   15142	05 00 0f 00 00 00 00 00	goto +0xf <LBB2_5>

000000000001d938 <LBB2_29>
   15143	0f 34 00 00 00 00 00 00	r4 += r3
   15144	bf 43 00 00 00 00 00 00	r3 = r4
   15145	07 03 00 00 01 00 00 00	r3 += 0x1
   15146	3d 64 06 00 00 00 00 00	if r4 >= r6 goto +0x6 <LBB2_31>
   15147	bf 71 00 00 00 00 00 00	r1 = r7
   15148	0f 41 00 00 00 00 00 00	r1 += r4
   15149	b7 05 00 00 01 00 00 00	r5 = 0x1
   15150	71 11 00 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x0)
   15151	bf 39 00 00 00 00 00 00	r9 = r3
   15152	15 01 c5 ff 0a 00 00 00	if r1 == 0xa goto -0x3b <LBB2_33>

000000000001d988 <LBB2_31>
   15153	b7 05 00 00 00 00 00 00	r5 = 0x0
   15154	bf 69 00 00 00 00 00 00	r9 = r6
   15155	2d 63 c2 ff 00 00 00 00	if r3 > r6 goto -0x3e <LBB2_33>
   15156	bf 62 00 00 00 00 00 00	r2 = r6
   15157	1f 32 00 00 00 00 00 00	r2 -= r3

000000000001d9b0 <LBB2_5>
   15158	25 02 11 00 0f 00 00 00	if r2 > 0xf goto +0x11 <LBB2_10>
   15159	b7 05 00 00 00 00 00 00	r5 = 0x0
   15160	bf 69 00 00 00 00 00 00	r9 = r6
   15161	15 02 bc ff 00 00 00 00	if r2 == 0x0 goto -0x44 <LBB2_33>
   15162	bf 61 00 00 00 00 00 00	r1 = r6
   15163	1f 31 00 00 00 00 00 00	r1 -= r3
   15164	bf 72 00 00 00 00 00 00	r2 = r7
   15165	0f 32 00 00 00 00 00 00	r2 += r3
   15166	b7 04 00 00 00 00 00 00	r4 = 0x0

000000000001d9f8 <LBB2_8>
   15167	bf 25 00 00 00 00 00 00	r5 = r2
   15168	0f 45 00 00 00 00 00 00	r5 += r4
   15169	71 55 00 00 00 00 00 00	r5 = *(u8 *)(r5 + 0x0)
   15170	15 05 e4 ff 0a 00 00 00	if r5 == 0xa goto -0x1c <LBB2_29>
   15171	b7 05 00 00 00 00 00 00	r5 = 0x0
   15172	07 04 00 00 01 00 00 00	r4 += 0x1
   15173	bf 69 00 00 00 00 00 00	r9 = r6
   15174	1d 41 af ff 00 00 00 00	if r1 == r4 goto -0x51 <LBB2_33>
   15175	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB2_8>

000000000001da40 <LBB2_10>
   15176	bf 71 00 00 00 00 00 00	r1 = r7
   15177	0f 31 00 00 00 00 00 00	r1 += r3
   15178	bf 14 00 00 00 00 00 00	r4 = r1
   15179	07 04 00 00 07 00 00 00	r4 += 0x7
   15180	57 04 00 00 f8 ff ff ff	r4 &= -0x8
   15181	1f 14 00 00 00 00 00 00	r4 -= r1
   15182	15 04 48 00 00 00 00 00	if r4 == 0x0 goto +0x48 <LBB2_17>
   15183	bf 21 00 00 00 00 00 00	r1 = r2
   15184	2d 24 01 00 00 00 00 00	if r4 > r2 goto +0x1 <LBB2_13>
   15185	bf 41 00 00 00 00 00 00	r1 = r4

000000000001da90 <LBB2_13>
   15186	15 01 44 00 00 00 00 00	if r1 == 0x0 goto +0x44 <LBB2_17>
   15187	bf 75 00 00 00 00 00 00	r5 = r7
   15188	0f 35 00 00 00 00 00 00	r5 += r3
   15189	b7 04 00 00 00 00 00 00	r4 = 0x0

000000000001dab0 <LBB2_15>
   15190	bf 50 00 00 00 00 00 00	r0 = r5
   15191	0f 40 00 00 00 00 00 00	r0 += r4
   15192	71 00 00 00 00 00 00 00	r0 = *(u8 *)(r0 + 0x0)
   15193	15 00 cd ff 0a 00 00 00	if r0 == 0xa goto -0x33 <LBB2_29>
   15194	07 04 00 00 01 00 00 00	r4 += 0x1
   15195	1d 41 01 00 00 00 00 00	if r1 == r4 goto +0x1 <LBB2_18>
   15196	05 00 f9 ff 00 00 00 00	goto -0x7 <LBB2_15>

000000000001dae8 <LBB2_18>
   15197	bf 24 00 00 00 00 00 00	r4 = r2
   15198	07 04 00 00 f0 ff ff ff	r4 += -0x10
   15199	2d 41 25 00 00 00 00 00	if r1 > r4 goto +0x25 <LBB2_24>

000000000001db00 <LBB2_19>
   15200	7b 7a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r7
   15201	bf 75 00 00 00 00 00 00	r5 = r7
   15202	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
   15203	0f 35 00 00 00 00 00 00	r5 += r3

000000000001db20 <LBB2_20>
   15204	bf 50 00 00 00 00 00 00	r0 = r5
   15205	0f 10 00 00 00 00 00 00	r0 += r1
   15206	79 08 00 00 00 00 00 00	r8 = *(u64 *)(r0 + 0x0)
   15207	bf 89 00 00 00 00 00 00	r9 = r8
   15208	18 07 00 00 0a 0a 0a 0a 00 00 00 00 0a 0a 0a 0a	r7 = 0xa0a0a0a0a0a0a0a ll
   15210	af 79 00 00 00 00 00 00	r9 ^= r7
   15211	18 03 00 00 ff fe fe fe 00 00 00 00 fe fe fe fe	r3 = -0x101010101010101 ll
   15213	0f 39 00 00 00 00 00 00	r9 += r3
   15214	a7 08 00 00 ff ff ff ff	r8 ^= -0x1
   15215	5f 98 00 00 00 00 00 00	r8 &= r9
   15216	79 00 08 00 00 00 00 00	r0 = *(u64 *)(r0 + 0x8)
   15217	bf 09 00 00 00 00 00 00	r9 = r0
   15218	af 79 00 00 00 00 00 00	r9 ^= r7
   15219	0f 39 00 00 00 00 00 00	r9 += r3
   15220	a7 00 00 00 ff ff ff ff	r0 ^= -0x1
   15221	5f 90 00 00 00 00 00 00	r0 &= r9
   15222	4f 80 00 00 00 00 00 00	r0 |= r8
   15223	18 03 00 00 80 80 80 80 00 00 00 00 80 80 80 80	r3 = -0x7f7f7f7f7f7f7f80 ll
   15225	5f 30 00 00 00 00 00 00	r0 &= r3
   15226	55 00 02 00 00 00 00 00	if r0 != 0x0 goto +0x2 <LBB2_22>
   15227	07 01 00 00 10 00 00 00	r1 += 0x10
   15228	3d 14 e7 ff 00 00 00 00	if r4 >= r1 goto -0x19 <LBB2_20>

000000000001dbe8 <LBB2_22>
   15229	79 a8 e8 ff 00 00 00 00	r8 = *(u64 *)(r10 - 0x18)
   15230	79 a7 f8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 0x8)
   15231	79 a3 f0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x10)
   15232	3d 12 04 00 00 00 00 00	if r2 >= r1 goto +0x4 <LBB2_24>
   15233	18 03 00 00 38 52 02 00 00 00 00 00 00 00 00 00	r3 = 0x25238 ll
   15235	85 10 00 00 a2 f5 ff ff	call -0xa5e ; <core::slice::index::slice_start_index_len_fail>
   15236	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001dc28 <LBB2_24>
   15237	b7 05 00 00 00 00 00 00	r5 = 0x0
   15238	bf 69 00 00 00 00 00 00	r9 = r6
   15239	1d 21 6e ff 00 00 00 00	if r1 == r2 goto -0x92 <LBB2_33>
   15240	1f 12 00 00 00 00 00 00	r2 -= r1
   15241	bf 14 00 00 00 00 00 00	r4 = r1
   15242	0f 34 00 00 00 00 00 00	r4 += r3
   15243	bf 70 00 00 00 00 00 00	r0 = r7
   15244	0f 40 00 00 00 00 00 00	r0 += r4
   15245	b7 04 00 00 00 00 00 00	r4 = 0x0

000000000001dc70 <LBB2_26>
   15246	bf 05 00 00 00 00 00 00	r5 = r0
   15247	0f 45 00 00 00 00 00 00	r5 += r4
   15248	71 55 00 00 00 00 00 00	r5 = *(u8 *)(r5 + 0x0)
   15249	15 05 09 00 0a 00 00 00	if r5 == 0xa goto +0x9 <LBB2_28>
   15250	b7 05 00 00 00 00 00 00	r5 = 0x0
   15251	07 04 00 00 01 00 00 00	r4 += 0x1
   15252	bf 69 00 00 00 00 00 00	r9 = r6
   15253	1d 42 60 ff 00 00 00 00	if r2 == r4 goto -0xa0 <LBB2_33>
   15254	05 00 f7 ff 00 00 00 00	goto -0x9 <LBB2_26>

000000000001dcb8 <LBB2_17>
   15255	b7 01 00 00 00 00 00 00	r1 = 0x0
   15256	bf 24 00 00 00 00 00 00	r4 = r2
   15257	07 04 00 00 f0 ff ff ff	r4 += -0x10
   15258	05 00 c5 ff 00 00 00 00	goto -0x3b <LBB2_19>

000000000001dcd8 <LBB2_28>
   15259	0f 41 00 00 00 00 00 00	r1 += r4
   15260	bf 14 00 00 00 00 00 00	r4 = r1
   15261	05 00 89 ff 00 00 00 00	goto -0x77 <LBB2_29>

000000000001dcf0 <LBB2_39>
   15262	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15263	bf 72 00 00 00 00 00 00	r2 = r7
   15264	bf 93 00 00 00 00 00 00	r3 = r9
   15265	8d 00 00 00 04 00 00 00	callx r4
   15266	bf 01 00 00 00 00 00 00	r1 = r0
   15267	b7 00 00 00 01 00 00 00	r0 = 0x1
   15268	55 01 71 ff 00 00 00 00	if r1 != 0x0 goto -0x8f <LBB2_43>
   15269	bf 71 00 00 00 00 00 00	r1 = r7
   15270	0f 91 00 00 00 00 00 00	r1 += r9
   15271	71 11 00 00 00 00 00 00	r1 = *(u8 *)(r1 + 0x0)
   15272	67 01 00 00 38 00 00 00	r1 <<= 0x38
   15273	c7 01 00 00 38 00 00 00	r1 s>>= 0x38
   15274	65 01 67 ff bf ff ff ff	if r1 s> -0x41 goto -0x99 <LBB2_42>
   15275	bf 71 00 00 00 00 00 00	r1 = r7
   15276	bf 62 00 00 00 00 00 00	r2 = r6
   15277	bf 93 00 00 00 00 00 00	r3 = r9
   15278	bf 64 00 00 00 00 00 00	r4 = r6
   15279	18 05 00 00 50 54 02 00 00 00 00 00 00 00 00 00	r5 = 0x25450 ll
   15281	85 10 00 00 c3 f8 ff ff	call -0x73d ; <core::str::slice_error_fail>
   15282	85 10 00 00 ff ff ff ff	call -0x1 ; abort

000000000001dd98 <core::fmt::builders::DebugStruct::field>
   15283	bf 27 00 00 00 00 00 00	r7 = r2
   15284	bf 16 00 00 00 00 00 00	r6 = r1
   15285	b7 02 00 00 01 00 00 00	r2 = 0x1
   15286	71 61 08 00 00 00 00 00	r1 = *(u8 *)(r6 + 0x8)
   15287	b7 08 00 00 01 00 00 00	r8 = 0x1
   15288	55 01 7c 00 00 00 00 00	if r1 != 0x0 goto +0x7c <LBB4_18>
   15289	7b 3a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r3
   15290	7b 5a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r5
   15291	71 62 09 00 00 00 00 00	r2 = *(u8 *)(r6 + 0x9)
   15292	79 69 00 00 00 00 00 00	r9 = *(u64 *)(r6 + 0x0)
   15293	61 91 30 00 00 00 00 00	r1 = *(u32 *)(r9 + 0x30)
   15294	bf 13 00 00 00 00 00 00	r3 = r1
   15295	57 03 00 00 04 00 00 00	r3 &= 0x4
   15296	7b 4a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r4
   15297	55 03 2d 00 00 00 00 00	if r3 != 0x0 goto +0x2d <LBB4_7>
   15298	bf 21 00 00 00 00 00 00	r1 = r2
   15299	18 02 00 00 d2 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d2 ll
   15301	15 01 02 00 00 00 00 00	if r1 == 0x0 goto +0x2 <LBB4_4>
   15302	18 02 00 00 d0 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d0 ll

000000000001de40 <LBB4_4>
   15304	b7 03 00 00 03 00 00 00	r3 = 0x3
   15305	15 01 01 00 00 00 00 00	if r1 == 0x0 goto +0x1 <LBB4_6>
   15306	b7 03 00 00 02 00 00 00	r3 = 0x2

000000000001de58 <LBB4_6>
   15307	79 91 20 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x20)
   15308	79 94 28 00 00 00 00 00	r4 = *(u64 *)(r9 + 0x28)
   15309	79 44 18 00 00 00 00 00	r4 = *(u64 *)(r4 + 0x18)
   15310	8d 00 00 00 04 00 00 00	callx r4
   15311	b7 08 00 00 01 00 00 00	r8 = 0x1
   15312	b7 02 00 00 01 00 00 00	r2 = 0x1
   15313	79 a9 90 ff 00 00 00 00	r9 = *(u64 *)(r10 - 0x70)
   15314	79 a3 98 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x68)
   15315	55 00 61 00 00 00 00 00	if r0 != 0x0 goto +0x61 <LBB4_18>
   15316	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   15317	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   15318	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   15319	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15320	bf 72 00 00 00 00 00 00	r2 = r7
   15321	8d 00 00 00 04 00 00 00	callx r4
   15322	b7 02 00 00 01 00 00 00	r2 = 0x1
   15323	b7 08 00 00 01 00 00 00	r8 = 0x1
   15324	55 00 58 00 00 00 00 00	if r0 != 0x0 goto +0x58 <LBB4_18>
   15325	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   15326	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   15327	79 22 28 00 00 00 00 00	r2 = *(u64 *)(r2 + 0x28)
   15328	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15329	18 02 00 00 cc 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247cc ll
   15331	b7 03 00 00 02 00 00 00	r3 = 0x2
   15332	8d 00 00 00 04 00 00 00	callx r4
   15333	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
   15334	b7 02 00 00 01 00 00 00	r2 = 0x1
   15335	b7 08 00 00 01 00 00 00	r8 = 0x1
   15336	55 00 4c 00 00 00 00 00	if r0 != 0x0 goto +0x4c <LBB4_18>
   15337	79 93 18 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x18)
   15338	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   15339	8d 00 00 00 03 00 00 00	callx r3
   15340	b7 02 00 00 01 00 00 00	r2 = 0x1
   15341	bf 08 00 00 00 00 00 00	r8 = r0
   15342	05 00 46 00 00 00 00 00	goto +0x46 <LBB4_18>

000000000001df78 <LBB4_7>
   15343	55 02 0c 00 00 00 00 00	if r2 != 0x0 goto +0xc <LBB4_10>
   15344	79 91 20 00 00 00 00 00	r1 = *(u64 *)(r9 + 0x20)
   15345	79 92 28 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x28)
   15346	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15347	18 02 00 00 c9 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247c9 ll
   15349	b7 03 00 00 03 00 00 00	r3 = 0x3
   15350	8d 00 00 00 04 00 00 00	callx r4
   15351	b7 08 00 00 01 00 00 00	r8 = 0x1
   15352	b7 02 00 00 01 00 00 00	r2 = 0x1
   15353	55 00 3b 00 00 00 00 00	if r0 != 0x0 goto +0x3b <LBB4_18>
   15354	79 69 00 00 00 00 00 00	r9 = *(u64 *)(r6 + 0x0)
   15355	61 91 30 00 00 00 00 00	r1 = *(u32 *)(r9 + 0x30)

000000000001dfe0 <LBB4_10>
   15356	b7 08 00 00 01 00 00 00	r8 = 0x1
   15357	73 8a bf ff 00 00 00 00	*(u8 *)(r10 - 0x41) = r8
   15358	79 92 20 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x20)
   15359	79 93 28 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x28)
   15360	bf a5 00 00 00 00 00 00	r5 = r10
   15361	07 05 00 00 bf ff ff ff	r5 += -0x41
   15362	7b 5a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r5
   15363	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
   15364	7b 2a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r2
   15365	79 92 00 00 00 00 00 00	r2 = *(u64 *)(r9 + 0x0)
   15366	7b 2a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r2
   15367	79 93 08 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x8)
   15368	79 95 10 00 00 00 00 00	r5 = *(u64 *)(r9 + 0x10)
   15369	79 90 18 00 00 00 00 00	r0 = *(u64 *)(r9 + 0x18)
   15370	61 92 34 00 00 00 00 00	r2 = *(u32 *)(r9 + 0x34)
   15371	71 94 38 00 00 00 00 00	r4 = *(u8 *)(r9 + 0x38)
   15372	73 4a f8 ff 00 00 00 00	*(u8 *)(r10 - 0x8) = r4
   15373	63 2a f4 ff 00 00 00 00	*(u32 *)(r10 - 0xc) = r2
   15374	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
   15375	18 01 00 00 08 54 02 00 00 00 00 00 00 00 00 00	r1 = 0x25408 ll
   15377	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   15378	7b 0a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r0
   15379	7b 5a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r5
   15380	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
   15381	79 a1 80 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x80)
   15382	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   15383	bf a1 00 00 00 00 00 00	r1 = r10
   15384	07 01 00 00 a0 ff ff ff	r1 += -0x60
   15385	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   15386	bf 72 00 00 00 00 00 00	r2 = r7
   15387	79 a3 98 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x68)
   15388	85 10 00 00 d2 fe ff ff	call -0x12e ; <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15389	55 00 16 00 00 00 00 00	if r0 != 0x0 goto +0x16 <LBB4_14>
   15390	bf a1 00 00 00 00 00 00	r1 = r10
   15391	07 01 00 00 a0 ff ff ff	r1 += -0x60
   15392	18 02 00 00 cc 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247cc ll
   15394	b7 03 00 00 02 00 00 00	r3 = 0x2
   15395	85 10 00 00 cb fe ff ff	call -0x135 ; <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15396	55 00 0f 00 00 00 00 00	if r0 != 0x0 goto +0xf <LBB4_14>
   15397	79 a1 90 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x70)
   15398	79 13 18 00 00 00 00 00	r3 = *(u64 *)(r1 + 0x18)
   15399	bf a2 00 00 00 00 00 00	r2 = r10
   15400	07 02 00 00 c0 ff ff ff	r2 += -0x40
   15401	79 a1 88 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x78)
   15402	8d 00 00 00 03 00 00 00	callx r3
   15403	55 00 08 00 00 00 00 00	if r0 != 0x0 goto +0x8 <LBB4_14>
   15404	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   15405	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   15406	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   15407	18 02 00 00 ce 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247ce ll
   15409	b7 03 00 00 02 00 00 00	r3 = 0x2
   15410	8d 00 00 00 04 00 00 00	callx r4
   15411	bf 08 00 00 00 00 00 00	r8 = r0

000000000001e1a0 <LBB4_14>
   15412	b7 02 00 00 01 00 00 00	r2 = 0x1

000000000001e1a8 <LBB4_18>
   15413	73 26 09 00 00 00 00 00	*(u8 *)(r6 + 0x9) = r2
   15414	73 86 08 00 00 00 00 00	*(u8 *)(r6 + 0x8) = r8
   15415	bf 60 00 00 00 00 00 00	r0 = r6
   15416	95 00 00 00 00 00 00 00	exit

000000000001e1c8 <core::fmt::builders::DebugTuple::field>
   15417	bf 39 00 00 00 00 00 00	r9 = r3
   15418	bf 27 00 00 00 00 00 00	r7 = r2
   15419	bf 16 00 00 00 00 00 00	r6 = r1
   15420	b7 08 00 00 01 00 00 00	r8 = 0x1
   15421	71 61 10 00 00 00 00 00	r1 = *(u8 *)(r6 + 0x10)
   15422	55 01 50 00 00 00 00 00	if r1 != 0x0 goto +0x50 <LBB8_14>
   15423	79 65 08 00 00 00 00 00	r5 = *(u64 *)(r6 + 0x8)
   15424	79 64 00 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x0)
   15425	61 41 30 00 00 00 00 00	r1 = *(u32 *)(r4 + 0x30)
   15426	bf 12 00 00 00 00 00 00	r2 = r1
   15427	57 02 00 00 04 00 00 00	r2 &= 0x4
   15428	55 02 13 00 00 00 00 00	if r2 != 0x0 goto +0x13 <LBB8_7>
   15429	18 02 00 00 da 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247da ll
   15431	15 05 02 00 00 00 00 00	if r5 == 0x0 goto +0x2 <LBB8_4>
   15432	18 02 00 00 d0 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d0 ll

000000000001e250 <LBB8_4>
   15434	b7 08 00 00 01 00 00 00	r8 = 0x1
   15435	b7 03 00 00 01 00 00 00	r3 = 0x1
   15436	15 05 01 00 00 00 00 00	if r5 == 0x0 goto +0x1 <LBB8_6>
   15437	b7 03 00 00 02 00 00 00	r3 = 0x2

000000000001e270 <LBB8_6>
   15438	79 41 20 00 00 00 00 00	r1 = *(u64 *)(r4 + 0x20)
   15439	79 44 28 00 00 00 00 00	r4 = *(u64 *)(r4 + 0x28)
   15440	79 44 18 00 00 00 00 00	r4 = *(u64 *)(r4 + 0x18)
   15441	8d 00 00 00 04 00 00 00	callx r4
   15442	55 00 3c 00 00 00 00 00	if r0 != 0x0 goto +0x3c <LBB8_14>
   15443	79 93 18 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x18)
   15444	79 62 00 00 00 00 00 00	r2 = *(u64 *)(r6 + 0x0)
   15445	bf 71 00 00 00 00 00 00	r1 = r7
   15446	8d 00 00 00 03 00 00 00	callx r3
   15447	05 00 36 00 00 00 00 00	goto +0x36 <LBB8_13>

000000000001e2c0 <LBB8_7>
   15448	55 05 0a 00 00 00 00 00	if r5 != 0x0 goto +0xa <LBB8_10>
   15449	79 41 20 00 00 00 00 00	r1 = *(u64 *)(r4 + 0x20)
   15450	79 42 28 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x28)
   15451	79 24 18 00 00 00 00 00	r4 = *(u64 *)(r2 + 0x18)
   15452	18 02 00 00 d8 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247d8 ll
   15454	b7 03 00 00 02 00 00 00	r3 = 0x2
   15455	8d 00 00 00 04 00 00 00	callx r4
   15456	55 00 2e 00 00 00 00 00	if r0 != 0x0 goto +0x2e <LBB8_14>
   15457	79 64 00 00 00 00 00 00	r4 = *(u64 *)(r6 + 0x0)
   15458	61 41 30 00 00 00 00 00	r1 = *(u32 *)(r4 + 0x30)

000000000001e318 <LBB8_10>
   15459	b7 08 00 00 01 00 00 00	r8 = 0x1
   15460	73 8a bf ff 00 00 00 00	*(u8 *)(r10 - 0x41) = r8
   15461	79 42 20 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x20)
   15462	79 43 28 00 00 00 00 00	r3 = *(u64 *)(r4 + 0x28)
   15463	bf a5 00 00 00 00 00 00	r5 = r10
   15464	07 05 00 00 bf ff ff ff	r5 += -0x41
   15465	7b 5a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r5
   15466	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
   15467	7b 2a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r2
   15468	79 42 00 00 00 00 00 00	r2 = *(u64 *)(r4 + 0x0)
   15469	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r2
   15470	79 43 08 00 00 00 00 00	r3 = *(u64 *)(r4 + 0x8)
   15471	79 45 10 00 00 00 00 00	r5 = *(u64 *)(r4 + 0x10)
   15472	79 40 18 00 00 00 00 00	r0 = *(u64 *)(r4 + 0x18)
   15473	61 42 34 00 00 00 00 00	r2 = *(u32 *)(r4 + 0x34)
   15474	71 44 38 00 00 00 00 00	r4 = *(u8 *)(r4 + 0x38)
   15475	73 4a f8 ff 00 00 00 00	*(u8 *)(r10 - 0x8) = r4
   15476	63 2a f4 ff 00 00 00 00	*(u32 *)(r10 - 0xc) = r2
   15477	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 0x10) = r1
   15478	18 01 00 00 08 54 02 00 00 00 00 00 00 00 00 00	r1 = 0x25408 ll
   15480	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   15481	bf a1 00 00 00 00 00 00	r1 = r10
   15482	07 01 00 00 a0 ff ff ff	r1 += -0x60
   15483	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   15484	7b 0a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r0
   15485	7b 5a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r5
   15486	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
   15487	79 a1 98 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x68)
   15488	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r1
   15489	79 93 18 00 00 00 00 00	r3 = *(u64 *)(r9 + 0x18)
   15490	bf a2 00 00 00 00 00 00	r2 = r10
   15491	07 02 00 00 c0 ff ff ff	r2 += -0x40
   15492	bf 71 00 00 00 00 00 00	r1 = r7
   15493	8d 00 00 00 03 00 00 00	callx r3
   15494	55 00 08 00 00 00 00 00	if r0 != 0x0 goto +0x8 <LBB8_14>
   15495	79 a1 e8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x18)
   15496	79 14 18 00 00 00 00 00	r4 = *(u64 *)(r1 + 0x18)
   15497	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x20)
   15498	18 02 00 00 ce 47 02 00 00 00 00 00 00 00 00 00	r2 = 0x247ce ll
   15500	b7 03 00 00 02 00 00 00	r3 = 0x2
   15501	8d 00 00 00 04 00 00 00	callx r4

000000000001e470 <LBB8_13>
   15502	bf 08 00 00 00 00 00 00	r8 = r0

000000000001e478 <LBB8_14>
   15503	73 86 10 00 00 00 00 00	*(u8 *)(r6 + 0x10) = r8
   15504	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 0x8)
   15505	07 01 00 00 01 00 00 00	r1 += 0x1
   15506	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 0x8) = r1
   15507	bf 60 00 00 00 00 00 00	r0 = r6
   15508	95 00 00 00 00 00 00 00	exit

000000000001e4a8 <core::fmt::Write::write_char>
   15509	b7 03 00 00 00 00 00 00	r3 = 0x0
   15510	63 3a fc ff 00 00 00 00	*(u32 *)(r10 - 0x4) = r3
   15511	bf 23 00 00 00 00 00 00	r3 = r2
   15512	67 03 00 00 20 00 00 00	r3 <<= 0x20
   15513	77 03 00 00 20 00 00 00	r3 >>= 0x20
   15514	b7 04 00 00 80 00 00 00	r4 = 0x80
   15515	2d 34 15 00 00 00 00 00	if r4 > r3 goto +0x15 <LBB24_3>
   15516	b7 04 00 00 00 08 00 00	r4 = 0x800
   15517	2d 34 16 00 00 00 00 00	if r4 > r3 goto +0x16 <LBB24_4>
   15518	bf 23 00 00 00 00 00 00	r3 = r2
   15519	67 03 00 00 20 00 00 00	r3 <<= 0x20
   15520	77 03 00 00 20 00 00 00	r3 >>= 0x20
   15521	b7 04 00 00 00 00 01 00	r4 = 0x10000
   15522	2d 34 01 00 00 00 00 00	if r4 > r3 goto +0x1 <LBB24_5>
   15523	05 00 19 00 00 00 00 00	goto +0x19 <LBB24_6>

000000000001e520 <LBB24_5>
   15524	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15525	47 02 00 00 80 00 00 00	r2 |= 0x80
   15526	73 2a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r2
   15527	bf 32 00 00 00 00 00 00	r2 = r3
   15528	77 02 00 00 0c 00 00 00	r2 >>= 0xc
   15529	47 02 00 00 e0 00 00 00	r2 |= 0xe0
   15530	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15531	77 03 00 00 06 00 00 00	r3 >>= 0x6
   15532	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15533	47 03 00 00 80 00 00 00	r3 |= 0x80
   15534	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15535	b7 03 00 00 03 00 00 00	r3 = 0x3
   15536	05 00 1d 00 00 00 00 00	goto +0x1d <LBB24_7>

000000000001e588 <LBB24_3>
   15537	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15538	b7 03 00 00 01 00 00 00	r3 = 0x1
   15539	05 00 1a 00 00 00 00 00	goto +0x1a <LBB24_7>

000000000001e5a0 <LBB24_4>
   15540	bf 23 00 00 00 00 00 00	r3 = r2
   15541	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15542	47 03 00 00 80 00 00 00	r3 |= 0x80
   15543	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15544	77 02 00 00 06 00 00 00	r2 >>= 0x6
   15545	47 02 00 00 c0 00 00 00	r2 |= 0xc0
   15546	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15547	b7 03 00 00 02 00 00 00	r3 = 0x2
   15548	05 00 11 00 00 00 00 00	goto +0x11 <LBB24_7>

000000000001e5e8 <LBB24_6>
   15549	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15550	47 02 00 00 80 00 00 00	r2 |= 0x80
   15551	73 2a ff ff 00 00 00 00	*(u8 *)(r10 - 0x1) = r2
   15552	bf 32 00 00 00 00 00 00	r2 = r3
   15553	77 02 00 00 12 00 00 00	r2 >>= 0x12
   15554	47 02 00 00 f0 00 00 00	r2 |= 0xf0
   15555	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15556	bf 32 00 00 00 00 00 00	r2 = r3
   15557	77 02 00 00 06 00 00 00	r2 >>= 0x6
   15558	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15559	47 02 00 00 80 00 00 00	r2 |= 0x80
   15560	73 2a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r2
   15561	77 03 00 00 0c 00 00 00	r3 >>= 0xc
   15562	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15563	47 03 00 00 80 00 00 00	r3 |= 0x80
   15564	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15565	b7 03 00 00 04 00 00 00	r3 = 0x4

000000000001e670 <LBB24_7>
   15566	bf a2 00 00 00 00 00 00	r2 = r10
   15567	07 02 00 00 fc ff ff ff	r2 += -0x4
   15568	85 10 00 00 1e fe ff ff	call -0x1e2 ; <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15569	95 00 00 00 00 00 00 00	exit

000000000001e690 <core::fmt::Write::write_fmt>
   15570	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   15571	79 21 28 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x28)
   15572	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   15573	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   15574	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   15575	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
   15576	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   15577	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   15578	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   15579	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   15580	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   15581	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   15582	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   15583	bf a1 00 00 00 00 00 00	r1 = r10
   15584	07 01 00 00 c8 ff ff ff	r1 += -0x38
   15585	bf a3 00 00 00 00 00 00	r3 = r10
   15586	07 03 00 00 d0 ff ff ff	r3 += -0x30
   15587	18 02 00 00 68 54 02 00 00 00 00 00 00 00 00 00	r2 = 0x25468 ll
   15589	85 10 00 00 50 fa ff ff	call -0x5b0 ; <core::fmt::write>
   15590	95 00 00 00 00 00 00 00	exit

000000000001e738 <<&mut W as core::fmt::Write>::write_str>
   15591	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15592	85 10 00 00 06 fe ff ff	call -0x1fa ; <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15593	95 00 00 00 00 00 00 00	exit

000000000001e750 <<&mut W as core::fmt::Write>::write_char>
   15594	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15595	b7 03 00 00 00 00 00 00	r3 = 0x0
   15596	63 3a fc ff 00 00 00 00	*(u32 *)(r10 - 0x4) = r3
   15597	bf 23 00 00 00 00 00 00	r3 = r2
   15598	67 03 00 00 20 00 00 00	r3 <<= 0x20
   15599	77 03 00 00 20 00 00 00	r3 >>= 0x20
   15600	b7 04 00 00 80 00 00 00	r4 = 0x80
   15601	2d 34 15 00 00 00 00 00	if r4 > r3 goto +0x15 <LBB27_3>
   15602	b7 04 00 00 00 08 00 00	r4 = 0x800
   15603	2d 34 16 00 00 00 00 00	if r4 > r3 goto +0x16 <LBB27_4>
   15604	bf 23 00 00 00 00 00 00	r3 = r2
   15605	67 03 00 00 20 00 00 00	r3 <<= 0x20
   15606	77 03 00 00 20 00 00 00	r3 >>= 0x20
   15607	b7 04 00 00 00 00 01 00	r4 = 0x10000
   15608	2d 34 01 00 00 00 00 00	if r4 > r3 goto +0x1 <LBB27_5>
   15609	05 00 19 00 00 00 00 00	goto +0x19 <LBB27_6>

000000000001e7d0 <LBB27_5>
   15610	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15611	47 02 00 00 80 00 00 00	r2 |= 0x80
   15612	73 2a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r2
   15613	bf 32 00 00 00 00 00 00	r2 = r3
   15614	77 02 00 00 0c 00 00 00	r2 >>= 0xc
   15615	47 02 00 00 e0 00 00 00	r2 |= 0xe0
   15616	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15617	77 03 00 00 06 00 00 00	r3 >>= 0x6
   15618	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15619	47 03 00 00 80 00 00 00	r3 |= 0x80
   15620	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15621	b7 03 00 00 03 00 00 00	r3 = 0x3
   15622	05 00 1d 00 00 00 00 00	goto +0x1d <LBB27_7>

000000000001e838 <LBB27_3>
   15623	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15624	b7 03 00 00 01 00 00 00	r3 = 0x1
   15625	05 00 1a 00 00 00 00 00	goto +0x1a <LBB27_7>

000000000001e850 <LBB27_4>
   15626	bf 23 00 00 00 00 00 00	r3 = r2
   15627	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15628	47 03 00 00 80 00 00 00	r3 |= 0x80
   15629	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15630	77 02 00 00 06 00 00 00	r2 >>= 0x6
   15631	47 02 00 00 c0 00 00 00	r2 |= 0xc0
   15632	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15633	b7 03 00 00 02 00 00 00	r3 = 0x2
   15634	05 00 11 00 00 00 00 00	goto +0x11 <LBB27_7>

000000000001e898 <LBB27_6>
   15635	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15636	47 02 00 00 80 00 00 00	r2 |= 0x80
   15637	73 2a ff ff 00 00 00 00	*(u8 *)(r10 - 0x1) = r2
   15638	bf 32 00 00 00 00 00 00	r2 = r3
   15639	77 02 00 00 12 00 00 00	r2 >>= 0x12
   15640	47 02 00 00 f0 00 00 00	r2 |= 0xf0
   15641	73 2a fc ff 00 00 00 00	*(u8 *)(r10 - 0x4) = r2
   15642	bf 32 00 00 00 00 00 00	r2 = r3
   15643	77 02 00 00 06 00 00 00	r2 >>= 0x6
   15644	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   15645	47 02 00 00 80 00 00 00	r2 |= 0x80
   15646	73 2a fe ff 00 00 00 00	*(u8 *)(r10 - 0x2) = r2
   15647	77 03 00 00 0c 00 00 00	r3 >>= 0xc
   15648	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15649	47 03 00 00 80 00 00 00	r3 |= 0x80
   15650	73 3a fd ff 00 00 00 00	*(u8 *)(r10 - 0x3) = r3
   15651	b7 03 00 00 04 00 00 00	r3 = 0x4

000000000001e920 <LBB27_7>
   15652	bf a2 00 00 00 00 00 00	r2 = r10
   15653	07 02 00 00 fc ff ff ff	r2 += -0x4
   15654	85 10 00 00 c8 fd ff ff	call -0x238 ; <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>
   15655	95 00 00 00 00 00 00 00	exit

000000000001e940 <<&mut W as core::fmt::Write>::write_fmt>
   15656	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0x0)
   15657	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r1
   15658	79 21 28 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x28)
   15659	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 0x8) = r1
   15660	79 21 20 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x20)
   15661	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r1
   15662	79 21 18 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x18)
   15663	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r1
   15664	79 21 10 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x10)
   15665	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r1
   15666	79 21 08 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x8)
   15667	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r1
   15668	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0x0)
   15669	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r1
   15670	bf a1 00 00 00 00 00 00	r1 = r10
   15671	07 01 00 00 c8 ff ff ff	r1 += -0x38
   15672	bf a3 00 00 00 00 00 00	r3 = r10
   15673	07 03 00 00 d0 ff ff ff	r3 += -0x30
   15674	18 02 00 00 68 54 02 00 00 00 00 00 00 00 00 00	r2 = 0x25468 ll
   15676	85 10 00 00 f9 f9 ff ff	call -0x607 ; <core::fmt::write>
   15677	95 00 00 00 00 00 00 00	exit

000000000001e9f0 <__muldf3>
   15678	85 10 00 00 bb 00 00 00	call 0xbb ; <compiler_builtins::float::mul::__muldf3>
   15679	95 00 00 00 00 00 00 00	exit

000000000001ea00 <memcpy>
   15680	bf 10 00 00 00 00 00 00	r0 = r1
   15681	b7 01 00 00 00 00 00 00	r1 = 0x0
   15682	bf 34 00 00 00 00 00 00	r4 = r3
   15683	07 04 00 00 07 00 00 00	r4 += 0x7
   15684	b7 05 00 00 0f 00 00 00	r5 = 0xf
   15685	2d 45 13 00 00 00 00 00	if r5 > r4 goto +0x13 <LBB0_5>
   15686	b7 04 00 00 08 00 00 00	r4 = 0x8
   15687	6d 34 11 00 00 00 00 00	if r4 s> r3 goto +0x11 <LBB0_5>
   15688	bf 34 00 00 00 00 00 00	r4 = r3
   15689	c7 04 00 00 3f 00 00 00	r4 s>>= 0x3f
   15690	77 04 00 00 3d 00 00 00	r4 >>= 0x3d
   15691	bf 31 00 00 00 00 00 00	r1 = r3
   15692	0f 41 00 00 00 00 00 00	r1 += r4
   15693	c7 01 00 00 03 00 00 00	r1 s>>= 0x3
   15694	bf 24 00 00 00 00 00 00	r4 = r2
   15695	bf 05 00 00 00 00 00 00	r5 = r0
   15696	bf 16 00 00 00 00 00 00	r6 = r1

000000000001ea88 <LBB0_3>
   15697	79 47 00 00 00 00 00 00	r7 = *(u64 *)(r4 + 0x0)
   15698	7b 75 00 00 00 00 00 00	*(u64 *)(r5 + 0x0) = r7
   15699	07 04 00 00 08 00 00 00	r4 += 0x8
   15700	07 05 00 00 08 00 00 00	r5 += 0x8
   15701	07 06 00 00 ff ff ff ff	r6 += -0x1
   15702	15 06 01 00 00 00 00 00	if r6 == 0x0 goto +0x1 <LBB0_4>
   15703	05 00 f9 ff 00 00 00 00	goto -0x7 <LBB0_3>

000000000001eac0 <LBB0_4>
   15704	67 01 00 00 03 00 00 00	r1 <<= 0x3

000000000001eac8 <LBB0_5>
   15705	7d 31 0b 00 00 00 00 00	if r1 s>= r3 goto +0xb <LBB0_8>
   15706	0f 12 00 00 00 00 00 00	r2 += r1
   15707	bf 04 00 00 00 00 00 00	r4 = r0
   15708	0f 14 00 00 00 00 00 00	r4 += r1
   15709	1f 13 00 00 00 00 00 00	r3 -= r1

000000000001eaf0 <LBB0_7>
   15710	71 21 00 00 00 00 00 00	r1 = *(u8 *)(r2 + 0x0)
   15711	73 14 00 00 00 00 00 00	*(u8 *)(r4 + 0x0) = r1
   15712	07 02 00 00 01 00 00 00	r2 += 0x1
   15713	07 04 00 00 01 00 00 00	r4 += 0x1
   15714	07 03 00 00 ff ff ff ff	r3 += -0x1
   15715	15 03 01 00 00 00 00 00	if r3 == 0x0 goto +0x1 <LBB0_8>
   15716	05 00 f9 ff 00 00 00 00	goto -0x7 <LBB0_7>

000000000001eb28 <LBB0_8>
   15717	95 00 00 00 00 00 00 00	exit

000000000001eb30 <memset>
   15718	bf 10 00 00 00 00 00 00	r0 = r1
   15719	b7 01 00 00 00 00 00 00	r1 = 0x0
   15720	bf 34 00 00 00 00 00 00	r4 = r3
   15721	07 04 00 00 07 00 00 00	r4 += 0x7
   15722	b7 05 00 00 0f 00 00 00	r5 = 0xf
   15723	2d 45 1b 00 00 00 00 00	if r5 > r4 goto +0x1b <LBB2_5>
   15724	b7 04 00 00 08 00 00 00	r4 = 0x8
   15725	6d 34 19 00 00 00 00 00	if r4 s> r3 goto +0x19 <LBB2_5>
   15726	bf 34 00 00 00 00 00 00	r4 = r3
   15727	c7 04 00 00 3f 00 00 00	r4 s>>= 0x3f
   15728	77 04 00 00 3d 00 00 00	r4 >>= 0x3d
   15729	bf 31 00 00 00 00 00 00	r1 = r3
   15730	0f 41 00 00 00 00 00 00	r1 += r4
   15731	c7 01 00 00 03 00 00 00	r1 s>>= 0x3
   15732	bf 24 00 00 00 00 00 00	r4 = r2
   15733	57 04 00 00 ff 00 00 00	r4 &= 0xff
   15734	bf 45 00 00 00 00 00 00	r5 = r4
   15735	67 05 00 00 08 00 00 00	r5 <<= 0x8
   15736	4f 45 00 00 00 00 00 00	r5 |= r4
   15737	bf 56 00 00 00 00 00 00	r6 = r5
   15738	67 06 00 00 10 00 00 00	r6 <<= 0x10
   15739	4f 56 00 00 00 00 00 00	r6 |= r5
   15740	bf 64 00 00 00 00 00 00	r4 = r6
   15741	67 04 00 00 20 00 00 00	r4 <<= 0x20
   15742	4f 64 00 00 00 00 00 00	r4 |= r6
   15743	bf 05 00 00 00 00 00 00	r5 = r0
   15744	bf 16 00 00 00 00 00 00	r6 = r1

000000000001ec08 <LBB2_3>
   15745	7b 45 00 00 00 00 00 00	*(u64 *)(r5 + 0x0) = r4
   15746	07 05 00 00 08 00 00 00	r5 += 0x8
   15747	07 06 00 00 ff ff ff ff	r6 += -0x1
   15748	15 06 01 00 00 00 00 00	if r6 == 0x0 goto +0x1 <LBB2_4>
   15749	05 00 fb ff 00 00 00 00	goto -0x5 <LBB2_3>

000000000001ec30 <LBB2_4>
   15750	67 01 00 00 03 00 00 00	r1 <<= 0x3

000000000001ec38 <LBB2_5>
   15751	7d 31 08 00 00 00 00 00	if r1 s>= r3 goto +0x8 <LBB2_8>
   15752	bf 04 00 00 00 00 00 00	r4 = r0
   15753	0f 14 00 00 00 00 00 00	r4 += r1
   15754	1f 13 00 00 00 00 00 00	r3 -= r1

000000000001ec58 <LBB2_7>
   15755	73 24 00 00 00 00 00 00	*(u8 *)(r4 + 0x0) = r2
   15756	07 04 00 00 01 00 00 00	r4 += 0x1
   15757	07 03 00 00 ff ff ff ff	r3 += -0x1
   15758	15 03 01 00 00 00 00 00	if r3 == 0x0 goto +0x1 <LBB2_8>
   15759	05 00 fb ff 00 00 00 00	goto -0x5 <LBB2_7>

000000000001ec80 <LBB2_8>
   15760	95 00 00 00 00 00 00 00	exit

000000000001ec88 <memcmp>
   15761	b7 00 00 00 00 00 00 00	r0 = 0x0
   15762	bf 34 00 00 00 00 00 00	r4 = r3
   15763	07 04 00 00 07 00 00 00	r4 += 0x7
   15764	b7 06 00 00 0f 00 00 00	r6 = 0xf
   15765	b7 05 00 00 00 00 00 00	r5 = 0x0
   15766	2d 46 17 00 00 00 00 00	if r6 > r4 goto +0x17 <LBB3_6>
   15767	b7 05 00 00 00 00 00 00	r5 = 0x0
   15768	b7 04 00 00 08 00 00 00	r4 = 0x8
   15769	6d 34 12 00 00 00 00 00	if r4 s> r3 goto +0x12 <LBB3_5>
   15770	bf 35 00 00 00 00 00 00	r5 = r3
   15771	c7 05 00 00 3f 00 00 00	r5 s>>= 0x3f
   15772	77 05 00 00 3d 00 00 00	r5 >>= 0x3d
   15773	bf 30 00 00 00 00 00 00	r0 = r3
   15774	0f 50 00 00 00 00 00 00	r0 += r5
   15775	c7 00 00 00 03 00 00 00	r0 s>>= 0x3
   15776	b7 06 00 00 00 00 00 00	r6 = 0x0
   15777	bf 17 00 00 00 00 00 00	r7 = r1
   15778	bf 28 00 00 00 00 00 00	r8 = r2

000000000001ed18 <LBB3_3>
   15779	79 89 00 00 00 00 00 00	r9 = *(u64 *)(r8 + 0x0)
   15780	79 74 00 00 00 00 00 00	r4 = *(u64 *)(r7 + 0x0)
   15781	bf 65 00 00 00 00 00 00	r5 = r6
   15782	5d 94 05 00 00 00 00 00	if r4 != r9 goto +0x5 <LBB3_5>
   15783	07 07 00 00 08 00 00 00	r7 += 0x8
   15784	07 08 00 00 08 00 00 00	r8 += 0x8
   15785	07 06 00 00 01 00 00 00	r6 += 0x1
   15786	bf 05 00 00 00 00 00 00	r5 = r0
   15787	5d 60 f7 ff 00 00 00 00	if r0 != r6 goto -0x9 <LBB3_3>

000000000001ed60 <LBB3_5>
   15788	67 05 00 00 03 00 00 00	r5 <<= 0x3
   15789	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001ed70 <LBB3_6>
   15790	7d 35 0d 00 00 00 00 00	if r5 s>= r3 goto +0xd <LBB3_11>
   15791	0f 51 00 00 00 00 00 00	r1 += r5
   15792	0f 52 00 00 00 00 00 00	r2 += r5
   15793	1f 53 00 00 00 00 00 00	r3 -= r5
   15794	05 00 04 00 00 00 00 00	goto +0x4 <LBB3_9>

000000000001ed98 <LBB3_8>
   15795	07 01 00 00 01 00 00 00	r1 += 0x1
   15796	07 02 00 00 01 00 00 00	r2 += 0x1
   15797	07 03 00 00 ff ff ff ff	r3 += -0x1
   15798	15 03 05 00 00 00 00 00	if r3 == 0x0 goto +0x5 <LBB3_11>

000000000001edb8 <LBB3_9>
   15799	71 24 00 00 00 00 00 00	r4 = *(u8 *)(r2 + 0x0)
   15800	71 15 00 00 00 00 00 00	r5 = *(u8 *)(r1 + 0x0)
   15801	1d 45 f9 ff 00 00 00 00	if r5 == r4 goto -0x7 <LBB3_8>
   15802	1f 45 00 00 00 00 00 00	r5 -= r4
   15803	bf 50 00 00 00 00 00 00	r0 = r5

000000000001ede0 <LBB3_11>
   15804	95 00 00 00 00 00 00 00	exit

000000000001ede8 <__fixunsdfdi>
   15805	b7 00 00 00 00 00 00 00	r0 = 0x0
   15806	6d 10 17 00 00 00 00 00	if r0 s> r1 goto +0x17 <LBB0_7>
   15807	bf 12 00 00 00 00 00 00	r2 = r1
   15808	77 02 00 00 34 00 00 00	r2 >>= 0x34
   15809	57 02 00 00 ff 07 00 00	r2 &= 0x7ff
   15810	b7 03 00 00 ff 03 00 00	r3 = 0x3ff
   15811	2d 23 12 00 00 00 00 00	if r3 > r2 goto +0x12 <LBB0_7>
   15812	b7 00 00 00 ff ff ff ff	r0 = -0x1
   15813	25 02 10 00 3e 04 00 00	if r2 > 0x43e goto +0x10 <LBB0_7>
   15814	18 03 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r3 = 0xfffffffffffff ll
   15816	5f 31 00 00 00 00 00 00	r1 &= r3
   15817	18 03 00 00 00 00 00 00 00 00 00 00 00 00 10 00	r3 = 0x10000000000000 ll
   15819	4f 31 00 00 00 00 00 00	r1 |= r3
   15820	b7 03 00 00 33 04 00 00	r3 = 0x433
   15821	2d 23 04 00 00 00 00 00	if r3 > r2 goto +0x4 <LBB0_5>
   15822	07 02 00 00 cd fb ff ff	r2 += -0x433
   15823	57 02 00 00 ff ff 00 00	r2 &= 0xffff
   15824	6f 21 00 00 00 00 00 00	r1 <<= r2
   15825	05 00 03 00 00 00 00 00	goto +0x3 <LBB0_6>

000000000001ee90 <LBB0_5>
   15826	1f 23 00 00 00 00 00 00	r3 -= r2
   15827	57 03 00 00 ff ff 00 00	r3 &= 0xffff
   15828	7f 31 00 00 00 00 00 00	r1 >>= r3

000000000001eea8 <LBB0_6>
   15829	bf 10 00 00 00 00 00 00	r0 = r1

000000000001eeb0 <LBB0_7>
   15830	95 00 00 00 00 00 00 00	exit

000000000001eeb8 <__gtdf2>
   15831	18 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r0 = 0xffffffff ll
   15833	18 05 00 00 ff ff ff ff 00 00 00 00 ff ff ff 7f	r5 = 0x7fffffffffffffff ll
   15835	bf 13 00 00 00 00 00 00	r3 = r1
   15836	5f 53 00 00 00 00 00 00	r3 &= r5
   15837	18 06 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r6 = 0x7ff0000000000000 ll
   15839	2d 63 11 00 00 00 00 00	if r3 > r6 goto +0x11 <LBB0_10>
   15840	bf 24 00 00 00 00 00 00	r4 = r2
   15841	5f 54 00 00 00 00 00 00	r4 &= r5
   15842	18 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r0 = 0xffffffff ll
   15844	2d 64 0c 00 00 00 00 00	if r4 > r6 goto +0xc <LBB0_10>
   15845	4f 34 00 00 00 00 00 00	r4 |= r3
   15846	b7 00 00 00 00 00 00 00	r0 = 0x0
   15847	15 04 09 00 00 00 00 00	if r4 == 0x0 goto +0x9 <LBB0_10>
   15848	bf 23 00 00 00 00 00 00	r3 = r2
   15849	5f 13 00 00 00 00 00 00	r3 &= r1
   15850	65 03 09 00 ff ff ff ff	if r3 s> -0x1 goto +0x9 <LBB0_5>
   15851	18 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r0 = 0xffffffff ll
   15853	6d 21 03 00 00 00 00 00	if r1 s> r2 goto +0x3 <LBB0_10>
   15854	b7 00 00 00 01 00 00 00	r0 = 0x1
   15855	5d 21 01 00 00 00 00 00	if r1 != r2 goto +0x1 <LBB0_10>

000000000001ef80 <LBB0_9>
   15856	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001ef88 <LBB0_10>
   15857	67 00 00 00 20 00 00 00	r0 <<= 0x20
   15858	c7 00 00 00 20 00 00 00	r0 s>>= 0x20
   15859	95 00 00 00 00 00 00 00	exit

000000000001efa0 <LBB0_5>
   15860	18 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r0 = 0xffffffff ll
   15862	6d 12 fa ff 00 00 00 00	if r2 s> r1 goto -0x6 <LBB0_10>
   15863	b7 00 00 00 01 00 00 00	r0 = 0x1
   15864	5d 21 f8 ff 00 00 00 00	if r1 != r2 goto -0x8 <LBB0_10>
   15865	05 00 f6 ff 00 00 00 00	goto -0xa <LBB0_9>

000000000001efd0 <compiler_builtins::float::mul::__muldf3>
   15866	bf 26 00 00 00 00 00 00	r6 = r2
   15867	bf 63 00 00 00 00 00 00	r3 = r6
   15868	af 13 00 00 00 00 00 00	r3 ^= r1
   15869	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r2 = -0x8000000000000000 ll
   15871	5f 23 00 00 00 00 00 00	r3 &= r2
   15872	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
   15873	18 05 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r5 = 0xfffffffffffff ll
   15875	bf 62 00 00 00 00 00 00	r2 = r6
   15876	5f 52 00 00 00 00 00 00	r2 &= r5
   15877	bf 14 00 00 00 00 00 00	r4 = r1
   15878	5f 54 00 00 00 00 00 00	r4 &= r5
   15879	bf 67 00 00 00 00 00 00	r7 = r6
   15880	77 07 00 00 34 00 00 00	r7 >>= 0x34
   15881	57 07 00 00 ff 07 00 00	r7 &= 0x7ff
   15882	bf 18 00 00 00 00 00 00	r8 = r1
   15883	77 08 00 00 34 00 00 00	r8 >>= 0x34
   15884	57 08 00 00 ff 07 00 00	r8 &= 0x7ff
   15885	bf 85 00 00 00 00 00 00	r5 = r8
   15886	07 05 00 00 ff ff ff ff	r5 += -0x1
   15887	25 05 05 00 fd 07 00 00	if r5 > 0x7fd goto +0x5 <LBB1_2>
   15888	b7 09 00 00 00 00 00 00	r9 = 0x0
   15889	bf 75 00 00 00 00 00 00	r5 = r7
   15890	07 05 00 00 ff ff ff ff	r5 += -0x1
   15891	b7 00 00 00 fe 07 00 00	r0 = 0x7fe
   15892	2d 50 9c 00 00 00 00 00	if r0 > r5 goto +0x9c <LBB1_22>

000000000001f0a8 <LBB1_2>
   15893	18 09 00 00 ff ff ff ff 00 00 00 00 ff ff ff 7f	r9 = 0x7fffffffffffffff ll
   15895	bf 15 00 00 00 00 00 00	r5 = r1
   15896	5f 95 00 00 00 00 00 00	r5 &= r9
   15897	18 00 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r0 = 0x7ff0000000000000 ll
   15899	2d 05 09 00 00 00 00 00	if r5 > r0 goto +0x9 <LBB1_5>
   15900	bf 63 00 00 00 00 00 00	r3 = r6
   15901	5f 93 00 00 00 00 00 00	r3 &= r9
   15902	2d 03 01 00 00 00 00 00	if r3 > r0 goto +0x1 <LBB1_4>
   15903	05 00 0a 00 00 00 00 00	goto +0xa <LBB1_6>

000000000001f100 <LBB1_4>
   15904	18 01 00 00 00 00 00 00 00 00 00 00 00 00 08 00	r1 = 0x8000000000000 ll
   15906	4f 16 00 00 00 00 00 00	r6 |= r1
   15907	bf 60 00 00 00 00 00 00	r0 = r6
   15908	05 00 d9 00 00 00 00 00	goto +0xd9 <LBB1_36>

000000000001f128 <LBB1_5>
   15909	18 02 00 00 00 00 00 00 00 00 00 00 00 00 08 00	r2 = 0x8000000000000 ll
   15911	4f 21 00 00 00 00 00 00	r1 |= r2
   15912	bf 10 00 00 00 00 00 00	r0 = r1
   15913	05 00 d4 00 00 00 00 00	goto +0xd4 <LBB1_36>

000000000001f150 <LBB1_6>
   15914	18 00 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r0 = 0x7ff0000000000000 ll
   15916	1d 05 01 00 00 00 00 00	if r5 == r0 goto +0x1 <LBB1_7>
   15917	05 00 09 00 00 00 00 00	goto +0x9 <LBB1_9>

000000000001f170 <LBB1_7>
   15918	18 00 00 00 00 00 00 00 00 00 00 00 00 00 f8 7f	r0 = 0x7ff8000000000000 ll
   15920	15 03 cd 00 00 00 00 00	if r3 == 0x0 goto +0xcd <LBB1_36>
   15921	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r2 = -0x8000000000000000 ll
   15923	5f 26 00 00 00 00 00 00	r6 &= r2
   15924	af 16 00 00 00 00 00 00	r6 ^= r1
   15925	bf 60 00 00 00 00 00 00	r0 = r6
   15926	05 00 c7 00 00 00 00 00	goto +0xc7 <LBB1_36>

000000000001f1b8 <LBB1_9>
   15927	1d 03 01 00 00 00 00 00	if r3 == r0 goto +0x1 <LBB1_10>
   15928	05 00 09 00 00 00 00 00	goto +0x9 <LBB1_12>

000000000001f1c8 <LBB1_10>
   15929	18 00 00 00 00 00 00 00 00 00 00 00 00 00 f8 7f	r0 = 0x7ff8000000000000 ll
   15931	15 05 c2 00 00 00 00 00	if r5 == 0x0 goto +0xc2 <LBB1_36>
   15932	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r2 = -0x8000000000000000 ll
   15934	5f 21 00 00 00 00 00 00	r1 &= r2
   15935	af 61 00 00 00 00 00 00	r1 ^= r6
   15936	bf 10 00 00 00 00 00 00	r0 = r1
   15937	05 00 bc 00 00 00 00 00	goto +0xbc <LBB1_36>

000000000001f210 <LBB1_12>
   15938	15 05 bc 00 00 00 00 00	if r5 == 0x0 goto +0xbc <LBB1_38>
   15939	15 03 bb 00 00 00 00 00	if r3 == 0x0 goto +0xbb <LBB1_38>
   15940	bf 36 00 00 00 00 00 00	r6 = r3
   15941	b7 09 00 00 00 00 00 00	r9 = 0x0
   15942	18 01 00 00 00 00 00 00 00 00 00 00 00 00 10 00	r1 = 0x10000000000000 ll
   15944	2d 51 01 00 00 00 00 00	if r1 > r5 goto +0x1 <LBB1_15>
   15945	05 00 32 00 00 00 00 00	goto +0x32 <LBB1_18>

000000000001f250 <LBB1_15>
   15946	b7 03 00 00 40 00 00 00	r3 = 0x40
   15947	15 04 2b 00 00 00 00 00	if r4 == 0x0 goto +0x2b <LBB1_17>
   15948	bf 43 00 00 00 00 00 00	r3 = r4
   15949	77 03 00 00 01 00 00 00	r3 >>= 0x1
   15950	bf 41 00 00 00 00 00 00	r1 = r4
   15951	4f 31 00 00 00 00 00 00	r1 |= r3
   15952	bf 13 00 00 00 00 00 00	r3 = r1
   15953	77 03 00 00 02 00 00 00	r3 >>= 0x2
   15954	4f 31 00 00 00 00 00 00	r1 |= r3
   15955	bf 13 00 00 00 00 00 00	r3 = r1
   15956	77 03 00 00 04 00 00 00	r3 >>= 0x4
   15957	4f 31 00 00 00 00 00 00	r1 |= r3
   15958	bf 13 00 00 00 00 00 00	r3 = r1
   15959	77 03 00 00 08 00 00 00	r3 >>= 0x8
   15960	4f 31 00 00 00 00 00 00	r1 |= r3
   15961	bf 13 00 00 00 00 00 00	r3 = r1
   15962	77 03 00 00 10 00 00 00	r3 >>= 0x10
   15963	4f 31 00 00 00 00 00 00	r1 |= r3
   15964	bf 13 00 00 00 00 00 00	r3 = r1
   15965	77 03 00 00 20 00 00 00	r3 >>= 0x20
   15966	4f 31 00 00 00 00 00 00	r1 |= r3
   15967	a7 01 00 00 ff ff ff ff	r1 ^= -0x1
   15968	18 03 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r3 = 0x5555555555555555 ll
   15970	bf 15 00 00 00 00 00 00	r5 = r1
   15971	77 05 00 00 01 00 00 00	r5 >>= 0x1
   15972	5f 35 00 00 00 00 00 00	r5 &= r3
   15973	1f 51 00 00 00 00 00 00	r1 -= r5
   15974	18 05 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r5 = 0x3333333333333333 ll
   15976	bf 13 00 00 00 00 00 00	r3 = r1
   15977	5f 53 00 00 00 00 00 00	r3 &= r5
   15978	77 01 00 00 02 00 00 00	r1 >>= 0x2
   15979	5f 51 00 00 00 00 00 00	r1 &= r5
   15980	0f 13 00 00 00 00 00 00	r3 += r1
   15981	bf 31 00 00 00 00 00 00	r1 = r3
   15982	77 01 00 00 04 00 00 00	r1 >>= 0x4
   15983	0f 13 00 00 00 00 00 00	r3 += r1
   15984	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   15986	5f 13 00 00 00 00 00 00	r3 &= r1
   15987	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   15989	2f 13 00 00 00 00 00 00	r3 *= r1
   15990	77 03 00 00 38 00 00 00	r3 >>= 0x38

000000000001f3b8 <LBB1_17>
   15991	b7 09 00 00 0c 00 00 00	r9 = 0xc
   15992	1f 39 00 00 00 00 00 00	r9 -= r3
   15993	07 03 00 00 35 00 00 00	r3 += 0x35
   15994	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   15995	6f 34 00 00 00 00 00 00	r4 <<= r3

000000000001f3e0 <LBB1_18>
   15996	18 01 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r1 = 0xfffffffffffff ll
   15998	2d 16 32 00 00 00 00 00	if r6 > r1 goto +0x32 <LBB1_22>
   15999	b7 03 00 00 40 00 00 00	r3 = 0x40
   16000	15 02 2b 00 00 00 00 00	if r2 == 0x0 goto +0x2b <LBB1_21>
   16001	bf 23 00 00 00 00 00 00	r3 = r2
   16002	77 03 00 00 01 00 00 00	r3 >>= 0x1
   16003	bf 21 00 00 00 00 00 00	r1 = r2
   16004	4f 31 00 00 00 00 00 00	r1 |= r3
   16005	bf 13 00 00 00 00 00 00	r3 = r1
   16006	77 03 00 00 02 00 00 00	r3 >>= 0x2
   16007	4f 31 00 00 00 00 00 00	r1 |= r3
   16008	bf 13 00 00 00 00 00 00	r3 = r1
   16009	77 03 00 00 04 00 00 00	r3 >>= 0x4
   16010	4f 31 00 00 00 00 00 00	r1 |= r3
   16011	bf 13 00 00 00 00 00 00	r3 = r1
   16012	77 03 00 00 08 00 00 00	r3 >>= 0x8
   16013	4f 31 00 00 00 00 00 00	r1 |= r3
   16014	bf 13 00 00 00 00 00 00	r3 = r1
   16015	77 03 00 00 10 00 00 00	r3 >>= 0x10
   16016	4f 31 00 00 00 00 00 00	r1 |= r3
   16017	bf 13 00 00 00 00 00 00	r3 = r1
   16018	77 03 00 00 20 00 00 00	r3 >>= 0x20
   16019	4f 31 00 00 00 00 00 00	r1 |= r3
   16020	a7 01 00 00 ff ff ff ff	r1 ^= -0x1
   16021	18 03 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r3 = 0x5555555555555555 ll
   16023	bf 15 00 00 00 00 00 00	r5 = r1
   16024	77 05 00 00 01 00 00 00	r5 >>= 0x1
   16025	5f 35 00 00 00 00 00 00	r5 &= r3
   16026	1f 51 00 00 00 00 00 00	r1 -= r5
   16027	18 05 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r5 = 0x3333333333333333 ll
   16029	bf 13 00 00 00 00 00 00	r3 = r1
   16030	5f 53 00 00 00 00 00 00	r3 &= r5
   16031	77 01 00 00 02 00 00 00	r1 >>= 0x2
   16032	5f 51 00 00 00 00 00 00	r1 &= r5
   16033	0f 13 00 00 00 00 00 00	r3 += r1
   16034	bf 31 00 00 00 00 00 00	r1 = r3
   16035	77 01 00 00 04 00 00 00	r1 >>= 0x4
   16036	0f 13 00 00 00 00 00 00	r3 += r1
   16037	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   16039	5f 13 00 00 00 00 00 00	r3 &= r1
   16040	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   16042	2f 13 00 00 00 00 00 00	r3 *= r1
   16043	77 03 00 00 38 00 00 00	r3 >>= 0x38

000000000001f560 <LBB1_21>
   16044	1f 39 00 00 00 00 00 00	r9 -= r3
   16045	07 03 00 00 35 00 00 00	r3 += 0x35
   16046	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   16047	6f 32 00 00 00 00 00 00	r2 <<= r3
   16048	07 09 00 00 0c 00 00 00	r9 += 0xc

000000000001f588 <LBB1_22>
   16049	67 02 00 00 0b 00 00 00	r2 <<= 0xb
   16050	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r1 = -0x8000000000000000 ll
   16052	4f 12 00 00 00 00 00 00	r2 |= r1
   16053	18 06 00 00 00 00 00 00 00 00 00 00 00 00 10 00	r6 = 0x10000000000000 ll
   16055	4f 64 00 00 00 00 00 00	r4 |= r6
   16056	bf a1 00 00 00 00 00 00	r1 = r10
   16057	07 01 00 00 f0 ff ff ff	r1 += -0x10
   16058	b7 03 00 00 00 00 00 00	r3 = 0x0
   16059	b7 05 00 00 00 00 00 00	r5 = 0x0
   16060	85 10 00 00 8f 01 00 00	call 0x18f ; <__multi3>
   16061	0f 87 00 00 00 00 00 00	r7 += r8
   16062	0f 97 00 00 00 00 00 00	r7 += r9
   16063	79 a3 f8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 0x8)
   16064	bf 32 00 00 00 00 00 00	r2 = r3
   16065	5f 62 00 00 00 00 00 00	r2 &= r6
   16066	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 0x10)
   16067	55 02 0d 00 00 00 00 00	if r2 != 0x0 goto +0xd <LBB1_25>
   16068	67 03 00 00 01 00 00 00	r3 <<= 0x1
   16069	bf 12 00 00 00 00 00 00	r2 = r1
   16070	77 02 00 00 3f 00 00 00	r2 >>= 0x3f
   16071	4f 32 00 00 00 00 00 00	r2 |= r3
   16072	67 01 00 00 01 00 00 00	r1 <<= 0x1
   16073	07 07 00 00 01 fc ff ff	r7 += -0x3ff
   16074	79 a0 e8 ff 00 00 00 00	r0 = *(u64 *)(r10 - 0x18)
   16075	65 07 01 00 fe 07 00 00	if r7 s> 0x7fe goto +0x1 <LBB1_24>
   16076	05 00 08 00 00 00 00 00	goto +0x8 <LBB1_26>

000000000001f668 <LBB1_24>
   16077	18 01 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r1 = 0x7ff0000000000000 ll
   16079	4f 10 00 00 00 00 00 00	r0 |= r1
   16080	05 00 2d 00 00 00 00 00	goto +0x2d <LBB1_36>

000000000001f688 <LBB1_25>
   16081	07 07 00 00 02 fc ff ff	r7 += -0x3fe
   16082	bf 32 00 00 00 00 00 00	r2 = r3
   16083	79 a0 e8 ff 00 00 00 00	r0 = *(u64 *)(r10 - 0x18)
   16084	65 07 f8 ff fe 07 00 00	if r7 s> 0x7fe goto -0x8 <LBB1_24>

000000000001f6a8 <LBB1_26>
   16085	b7 03 00 00 01 00 00 00	r3 = 0x1
   16086	6d 73 06 00 00 00 00 00	if r3 s> r7 goto +0x6 <LBB1_28>
   16087	18 03 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r3 = 0xfffffffffffff ll
   16089	5f 32 00 00 00 00 00 00	r2 &= r3
   16090	67 07 00 00 34 00 00 00	r7 <<= 0x34
   16091	4f 27 00 00 00 00 00 00	r7 |= r2
   16092	05 00 13 00 00 00 00 00	goto +0x13 <LBB1_31>

000000000001f6e8 <LBB1_28>
   16093	1f 73 00 00 00 00 00 00	r3 -= r7
   16094	bf 34 00 00 00 00 00 00	r4 = r3
   16095	67 04 00 00 20 00 00 00	r4 <<= 0x20
   16096	77 04 00 00 20 00 00 00	r4 >>= 0x20
   16097	b7 05 00 00 40 00 00 00	r5 = 0x40
   16098	2d 45 01 00 00 00 00 00	if r5 > r4 goto +0x1 <LBB1_30>
   16099	05 00 1a 00 00 00 00 00	goto +0x1a <LBB1_36>

000000000001f720 <LBB1_30>
   16100	87 03 00 00 00 00 00 00	r3 = -r3
   16101	57 03 00 00 3f 00 00 00	r3 &= 0x3f
   16102	bf 15 00 00 00 00 00 00	r5 = r1
   16103	7f 45 00 00 00 00 00 00	r5 >>= r4
   16104	bf 26 00 00 00 00 00 00	r6 = r2
   16105	6f 36 00 00 00 00 00 00	r6 <<= r3
   16106	4f 56 00 00 00 00 00 00	r6 |= r5
   16107	6f 31 00 00 00 00 00 00	r1 <<= r3
   16108	4f 16 00 00 00 00 00 00	r6 |= r1
   16109	7f 42 00 00 00 00 00 00	r2 >>= r4
   16110	bf 61 00 00 00 00 00 00	r1 = r6
   16111	bf 27 00 00 00 00 00 00	r7 = r2

000000000001f780 <LBB1_31>
   16112	bf 72 00 00 00 00 00 00	r2 = r7
   16113	4f 02 00 00 00 00 00 00	r2 |= r0
   16114	18 03 00 00 01 00 00 00 00 00 00 00 00 00 00 80	r3 = -0x7fffffffffffffff ll
   16116	2d 13 02 00 00 00 00 00	if r3 > r1 goto +0x2 <LBB1_33>
   16117	07 02 00 00 01 00 00 00	r2 += 0x1
   16118	05 00 06 00 00 00 00 00	goto +0x6 <LBB1_35>

000000000001f7b8 <LBB1_33>
   16119	18 03 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r3 = -0x8000000000000000 ll
   16121	bf 20 00 00 00 00 00 00	r0 = r2
   16122	5d 31 03 00 00 00 00 00	if r1 != r3 goto +0x3 <LBB1_36>
   16123	57 07 00 00 01 00 00 00	r7 &= 0x1
   16124	0f 72 00 00 00 00 00 00	r2 += r7

000000000001f7e8 <LBB1_35>
   16125	bf 20 00 00 00 00 00 00	r0 = r2

000000000001f7f0 <LBB1_36>
   16126	95 00 00 00 00 00 00 00	exit

000000000001f7f8 <LBB1_38>
   16127	79 a0 e8 ff 00 00 00 00	r0 = *(u64 *)(r10 - 0x18)
   16128	05 00 fd ff 00 00 00 00	goto -0x3 <LBB1_36>

000000000001f808 <__floatundidf>
   16129	bf 16 00 00 00 00 00 00	r6 = r1
   16130	77 01 00 00 20 00 00 00	r1 >>= 0x20
   16131	18 02 00 00 00 00 00 00 00 00 00 00 00 00 30 45	r2 = 0x4530000000000000 ll
   16133	4f 21 00 00 00 00 00 00	r1 |= r2
   16134	18 02 00 00 00 00 10 00 00 00 00 00 00 00 30 c5	r2 = -0x3acffffffff00000 ll
   16136	85 10 00 00 09 00 00 00	call 0x9 ; <__adddf3>
   16137	67 06 00 00 20 00 00 00	r6 <<= 0x20
   16138	77 06 00 00 20 00 00 00	r6 >>= 0x20
   16139	18 01 00 00 00 00 00 00 00 00 00 00 00 00 30 43	r1 = 0x4330000000000000 ll
   16141	4f 16 00 00 00 00 00 00	r6 |= r1
   16142	bf 01 00 00 00 00 00 00	r1 = r0
   16143	bf 62 00 00 00 00 00 00	r2 = r6
   16144	85 10 00 00 01 00 00 00	call 0x1 ; <__adddf3>
   16145	95 00 00 00 00 00 00 00	exit

000000000001f890 <__adddf3>
   16146	85 10 00 00 01 00 00 00	call 0x1 ; <compiler_builtins::float::add::__adddf3>
   16147	95 00 00 00 00 00 00 00	exit

000000000001f8a0 <compiler_builtins::float::add::__adddf3>
   16148	18 03 00 00 ff ff ff ff 00 00 00 00 ff ff ff 7f	r3 = 0x7fffffffffffffff ll
   16150	bf 24 00 00 00 00 00 00	r4 = r2
   16151	5f 34 00 00 00 00 00 00	r4 &= r3
   16152	bf 15 00 00 00 00 00 00	r5 = r1
   16153	5f 35 00 00 00 00 00 00	r5 &= r3
   16154	bf 53 00 00 00 00 00 00	r3 = r5
   16155	07 03 00 00 ff ff ff ff	r3 += -0x1
   16156	18 00 00 00 fe ff ff ff 00 00 00 00 ff ff ef 7f	r0 = 0x7feffffffffffffe ll
   16158	2d 03 05 00 00 00 00 00	if r3 > r0 goto +0x5 <LBB1_2>
   16159	bf 43 00 00 00 00 00 00	r3 = r4
   16160	07 03 00 00 ff ff ff ff	r3 += -0x1
   16161	18 00 00 00 ff ff ff ff 00 00 00 00 ff ff ef 7f	r0 = 0x7fefffffffffffff ll
   16163	2d 30 20 00 00 00 00 00	if r0 > r3 goto +0x20 <LBB1_15>

000000000001f920 <LBB1_2>
   16164	18 03 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r3 = 0x7ff0000000000000 ll
   16166	2d 35 07 00 00 00 00 00	if r5 > r3 goto +0x7 <LBB1_4>
   16167	2d 34 01 00 00 00 00 00	if r4 > r3 goto +0x1 <LBB1_6>
   16168	05 00 0a 00 00 00 00 00	goto +0xa <LBB1_5>

000000000001f948 <LBB1_6>
   16169	18 01 00 00 00 00 00 00 00 00 00 00 00 00 08 00	r1 = 0x8000000000000 ll
   16171	4f 14 00 00 00 00 00 00	r4 |= r1
   16172	bf 40 00 00 00 00 00 00	r0 = r4
   16173	05 00 14 01 00 00 00 00	goto +0x114 <LBB1_48>

000000000001f970 <LBB1_4>
   16174	18 01 00 00 00 00 00 00 00 00 00 00 00 00 08 00	r1 = 0x8000000000000 ll
   16176	4f 15 00 00 00 00 00 00	r5 |= r1
   16177	bf 50 00 00 00 00 00 00	r0 = r5
   16178	05 00 0f 01 00 00 00 00	goto +0x10f <LBB1_48>

000000000001f998 <LBB1_5>
   16179	18 03 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r3 = 0x7ff0000000000000 ll
   16181	1d 35 01 00 00 00 00 00	if r5 == r3 goto +0x1 <LBB1_8>
   16182	05 00 08 00 00 00 00 00	goto +0x8 <LBB1_7>

000000000001f9b8 <LBB1_8>
   16183	af 12 00 00 00 00 00 00	r2 ^= r1
   16184	18 00 00 00 00 00 00 00 00 00 00 00 00 00 f8 7f	r0 = 0x7ff8000000000000 ll
   16186	18 03 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r3 = -0x8000000000000000 ll
   16188	1d 32 01 00 00 00 00 00	if r2 == r3 goto +0x1 <LBB1_10>
   16189	bf 10 00 00 00 00 00 00	r0 = r1

000000000001f9f0 <LBB1_10>
   16190	95 00 00 00 00 00 00 00	exit

000000000001f9f8 <LBB1_7>
   16191	bf 20 00 00 00 00 00 00	r0 = r2
   16192	1d 34 01 01 00 00 00 00	if r4 == r3 goto +0x101 <LBB1_48>
   16193	15 05 05 01 00 00 00 00	if r5 == 0x0 goto +0x105 <LBB1_13>
   16194	bf 10 00 00 00 00 00 00	r0 = r1
   16195	15 04 fe 00 00 00 00 00	if r4 == 0x0 goto +0xfe <LBB1_48>

000000000001fa20 <LBB1_15>
   16196	bf 23 00 00 00 00 00 00	r3 = r2
   16197	2d 54 01 00 00 00 00 00	if r4 > r5 goto +0x1 <LBB1_17>
   16198	bf 13 00 00 00 00 00 00	r3 = r1

000000000001fa38 <LBB1_17>
   16199	2d 54 01 00 00 00 00 00	if r4 > r5 goto +0x1 <LBB1_19>
   16200	bf 21 00 00 00 00 00 00	r1 = r2

000000000001fa48 <LBB1_19>
   16201	18 06 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r6 = 0xfffffffffffff ll
   16203	bf 32 00 00 00 00 00 00	r2 = r3
   16204	5f 62 00 00 00 00 00 00	r2 &= r6
   16205	bf 10 00 00 00 00 00 00	r0 = r1
   16206	77 00 00 00 34 00 00 00	r0 >>= 0x34
   16207	57 00 00 00 ff 07 00 00	r0 &= 0x7ff
   16208	bf 34 00 00 00 00 00 00	r4 = r3
   16209	77 04 00 00 34 00 00 00	r4 >>= 0x34
   16210	57 04 00 00 ff 07 00 00	r4 &= 0x7ff
   16211	55 04 32 00 00 00 00 00	if r4 != 0x0 goto +0x32 <LBB1_23>
   16212	b7 05 00 00 40 00 00 00	r5 = 0x40
   16213	15 02 2b 00 00 00 00 00	if r2 == 0x0 goto +0x2b <LBB1_22>
   16214	bf 25 00 00 00 00 00 00	r5 = r2
   16215	77 05 00 00 01 00 00 00	r5 >>= 0x1
   16216	bf 24 00 00 00 00 00 00	r4 = r2
   16217	4f 54 00 00 00 00 00 00	r4 |= r5
   16218	bf 45 00 00 00 00 00 00	r5 = r4
   16219	77 05 00 00 02 00 00 00	r5 >>= 0x2
   16220	4f 54 00 00 00 00 00 00	r4 |= r5
   16221	bf 45 00 00 00 00 00 00	r5 = r4
   16222	77 05 00 00 04 00 00 00	r5 >>= 0x4
   16223	4f 54 00 00 00 00 00 00	r4 |= r5
   16224	bf 45 00 00 00 00 00 00	r5 = r4
   16225	77 05 00 00 08 00 00 00	r5 >>= 0x8
   16226	4f 54 00 00 00 00 00 00	r4 |= r5
   16227	bf 45 00 00 00 00 00 00	r5 = r4
   16228	77 05 00 00 10 00 00 00	r5 >>= 0x10
   16229	4f 54 00 00 00 00 00 00	r4 |= r5
   16230	bf 45 00 00 00 00 00 00	r5 = r4
   16231	77 05 00 00 20 00 00 00	r5 >>= 0x20
   16232	4f 54 00 00 00 00 00 00	r4 |= r5
   16233	a7 04 00 00 ff ff ff ff	r4 ^= -0x1
   16234	18 05 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r5 = 0x5555555555555555 ll
   16236	bf 47 00 00 00 00 00 00	r7 = r4
   16237	77 07 00 00 01 00 00 00	r7 >>= 0x1
   16238	5f 57 00 00 00 00 00 00	r7 &= r5
   16239	1f 74 00 00 00 00 00 00	r4 -= r7
   16240	18 07 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r7 = 0x3333333333333333 ll
   16242	bf 45 00 00 00 00 00 00	r5 = r4
   16243	5f 75 00 00 00 00 00 00	r5 &= r7
   16244	77 04 00 00 02 00 00 00	r4 >>= 0x2
   16245	5f 74 00 00 00 00 00 00	r4 &= r7
   16246	0f 45 00 00 00 00 00 00	r5 += r4
   16247	bf 54 00 00 00 00 00 00	r4 = r5
   16248	77 04 00 00 04 00 00 00	r4 >>= 0x4
   16249	0f 45 00 00 00 00 00 00	r5 += r4
   16250	18 04 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r4 = 0xf0f0f0f0f0f0f0f ll
   16252	5f 45 00 00 00 00 00 00	r5 &= r4
   16253	18 04 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r4 = 0x101010101010101 ll
   16255	2f 45 00 00 00 00 00 00	r5 *= r4
   16256	77 05 00 00 38 00 00 00	r5 >>= 0x38

000000000001fc08 <LBB1_22>
   16257	b7 04 00 00 0c 00 00 00	r4 = 0xc
   16258	1f 54 00 00 00 00 00 00	r4 -= r5
   16259	07 05 00 00 35 00 00 00	r5 += 0x35
   16260	57 05 00 00 3f 00 00 00	r5 &= 0x3f
   16261	6f 52 00 00 00 00 00 00	r2 <<= r5

000000000001fc30 <LBB1_23>
   16262	bf 15 00 00 00 00 00 00	r5 = r1
   16263	5f 65 00 00 00 00 00 00	r5 &= r6
   16264	55 00 32 00 00 00 00 00	if r0 != 0x0 goto +0x32 <LBB1_27>
   16265	b7 06 00 00 40 00 00 00	r6 = 0x40
   16266	15 05 2b 00 00 00 00 00	if r5 == 0x0 goto +0x2b <LBB1_26>
   16267	bf 56 00 00 00 00 00 00	r6 = r5
   16268	77 06 00 00 01 00 00 00	r6 >>= 0x1
   16269	bf 50 00 00 00 00 00 00	r0 = r5
   16270	4f 60 00 00 00 00 00 00	r0 |= r6
   16271	bf 06 00 00 00 00 00 00	r6 = r0
   16272	77 06 00 00 02 00 00 00	r6 >>= 0x2
   16273	4f 60 00 00 00 00 00 00	r0 |= r6
   16274	bf 06 00 00 00 00 00 00	r6 = r0
   16275	77 06 00 00 04 00 00 00	r6 >>= 0x4
   16276	4f 60 00 00 00 00 00 00	r0 |= r6
   16277	bf 06 00 00 00 00 00 00	r6 = r0
   16278	77 06 00 00 08 00 00 00	r6 >>= 0x8
   16279	4f 60 00 00 00 00 00 00	r0 |= r6
   16280	bf 06 00 00 00 00 00 00	r6 = r0
   16281	77 06 00 00 10 00 00 00	r6 >>= 0x10
   16282	4f 60 00 00 00 00 00 00	r0 |= r6
   16283	bf 06 00 00 00 00 00 00	r6 = r0
   16284	77 06 00 00 20 00 00 00	r6 >>= 0x20
   16285	4f 60 00 00 00 00 00 00	r0 |= r6
   16286	a7 00 00 00 ff ff ff ff	r0 ^= -0x1
   16287	18 06 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r6 = 0x5555555555555555 ll
   16289	bf 07 00 00 00 00 00 00	r7 = r0
   16290	77 07 00 00 01 00 00 00	r7 >>= 0x1
   16291	5f 67 00 00 00 00 00 00	r7 &= r6
   16292	1f 70 00 00 00 00 00 00	r0 -= r7
   16293	18 07 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r7 = 0x3333333333333333 ll
   16295	bf 06 00 00 00 00 00 00	r6 = r0
   16296	5f 76 00 00 00 00 00 00	r6 &= r7
   16297	77 00 00 00 02 00 00 00	r0 >>= 0x2
   16298	5f 70 00 00 00 00 00 00	r0 &= r7
   16299	0f 06 00 00 00 00 00 00	r6 += r0
   16300	bf 60 00 00 00 00 00 00	r0 = r6
   16301	77 00 00 00 04 00 00 00	r0 >>= 0x4
   16302	0f 06 00 00 00 00 00 00	r6 += r0
   16303	18 00 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r0 = 0xf0f0f0f0f0f0f0f ll
   16305	5f 06 00 00 00 00 00 00	r6 &= r0
   16306	18 00 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r0 = 0x101010101010101 ll
   16308	2f 06 00 00 00 00 00 00	r6 *= r0
   16309	77 06 00 00 38 00 00 00	r6 >>= 0x38

000000000001fdb0 <LBB1_26>
   16310	b7 00 00 00 0c 00 00 00	r0 = 0xc
   16311	1f 60 00 00 00 00 00 00	r0 -= r6
   16312	07 06 00 00 35 00 00 00	r6 += 0x35
   16313	57 06 00 00 3f 00 00 00	r6 &= 0x3f
   16314	6f 65 00 00 00 00 00 00	r5 <<= r6

000000000001fdd8 <LBB1_27>
   16315	af 31 00 00 00 00 00 00	r1 ^= r3
   16316	67 05 00 00 03 00 00 00	r5 <<= 0x3
   16317	18 07 00 00 00 00 00 00 00 00 00 00 00 00 80 00	r7 = 0x80000000000000 ll
   16319	4f 75 00 00 00 00 00 00	r5 |= r7
   16320	67 02 00 00 03 00 00 00	r2 <<= 0x3
   16321	bf 48 00 00 00 00 00 00	r8 = r4
   16322	1f 08 00 00 00 00 00 00	r8 -= r0
   16323	bf 56 00 00 00 00 00 00	r6 = r5
   16324	15 08 12 00 00 00 00 00	if r8 == 0x0 goto +0x12 <LBB1_32>
   16325	b7 06 00 00 01 00 00 00	r6 = 0x1
   16326	bf 80 00 00 00 00 00 00	r0 = r8
   16327	67 00 00 00 20 00 00 00	r0 <<= 0x20
   16328	77 00 00 00 20 00 00 00	r0 >>= 0x20
   16329	25 00 0d 00 3f 00 00 00	if r0 > 0x3f goto +0xd <LBB1_32>
   16330	bf 80 00 00 00 00 00 00	r0 = r8
   16331	87 00 00 00 00 00 00 00	r0 = -r0
   16332	57 00 00 00 3f 00 00 00	r0 &= 0x3f
   16333	bf 56 00 00 00 00 00 00	r6 = r5
   16334	6f 06 00 00 00 00 00 00	r6 <<= r0
   16335	b7 00 00 00 01 00 00 00	r0 = 0x1
   16336	55 06 01 00 00 00 00 00	if r6 != 0x0 goto +0x1 <LBB1_31>
   16337	b7 00 00 00 00 00 00 00	r0 = 0x0

000000000001fe90 <LBB1_31>
   16338	67 08 00 00 20 00 00 00	r8 <<= 0x20
   16339	77 08 00 00 20 00 00 00	r8 >>= 0x20
   16340	7f 85 00 00 00 00 00 00	r5 >>= r8
   16341	4f 05 00 00 00 00 00 00	r5 |= r0
   16342	bf 56 00 00 00 00 00 00	r6 = r5

000000000001feb8 <LBB1_32>
   16343	4f 72 00 00 00 00 00 00	r2 |= r7
   16344	b7 00 00 00 00 00 00 00	r0 = 0x0
   16345	6d 10 0c 00 00 00 00 00	if r0 s> r1 goto +0xc <LBB1_34>
   16346	0f 26 00 00 00 00 00 00	r6 += r2
   16347	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 01	r1 = 0x100000000000000 ll
   16349	bf 62 00 00 00 00 00 00	r2 = r6
   16350	5f 12 00 00 00 00 00 00	r2 &= r1
   16351	15 02 3c 00 00 00 00 00	if r2 == 0x0 goto +0x3c <LBB1_38>
   16352	bf 61 00 00 00 00 00 00	r1 = r6
   16353	77 01 00 00 01 00 00 00	r1 >>= 0x1
   16354	57 06 00 00 01 00 00 00	r6 &= 0x1
   16355	4f 16 00 00 00 00 00 00	r6 |= r1
   16356	07 04 00 00 01 00 00 00	r4 += 0x1
   16357	05 00 36 00 00 00 00 00	goto +0x36 <LBB1_38>

000000000001ff30 <LBB1_34>
   16358	1f 62 00 00 00 00 00 00	r2 -= r6
   16359	15 02 5a 00 00 00 00 00	if r2 == 0x0 goto +0x5a <LBB1_48>
   16360	18 01 00 00 ff ff ff ff 00 00 00 00 ff ff 7f 00	r1 = 0x7fffffffffffff ll
   16362	bf 26 00 00 00 00 00 00	r6 = r2
   16363	2d 12 30 00 00 00 00 00	if r2 > r1 goto +0x30 <LBB1_38>
   16364	bf 25 00 00 00 00 00 00	r5 = r2
   16365	77 05 00 00 01 00 00 00	r5 >>= 0x1
   16366	bf 21 00 00 00 00 00 00	r1 = r2
   16367	4f 51 00 00 00 00 00 00	r1 |= r5
   16368	bf 15 00 00 00 00 00 00	r5 = r1
   16369	77 05 00 00 02 00 00 00	r5 >>= 0x2
   16370	4f 51 00 00 00 00 00 00	r1 |= r5
   16371	bf 15 00 00 00 00 00 00	r5 = r1
   16372	77 05 00 00 04 00 00 00	r5 >>= 0x4
   16373	4f 51 00 00 00 00 00 00	r1 |= r5
   16374	bf 15 00 00 00 00 00 00	r5 = r1
   16375	77 05 00 00 08 00 00 00	r5 >>= 0x8
   16376	4f 51 00 00 00 00 00 00	r1 |= r5
   16377	bf 15 00 00 00 00 00 00	r5 = r1
   16378	77 05 00 00 10 00 00 00	r5 >>= 0x10
   16379	4f 51 00 00 00 00 00 00	r1 |= r5
   16380	bf 15 00 00 00 00 00 00	r5 = r1
   16381	77 05 00 00 20 00 00 00	r5 >>= 0x20
   16382	4f 51 00 00 00 00 00 00	r1 |= r5
   16383	a7 01 00 00 ff ff ff ff	r1 ^= -0x1
   16384	18 05 00 00 55 55 55 55 00 00 00 00 55 55 55 55	r5 = 0x5555555555555555 ll
   16386	bf 10 00 00 00 00 00 00	r0 = r1
   16387	77 00 00 00 01 00 00 00	r0 >>= 0x1
   16388	5f 50 00 00 00 00 00 00	r0 &= r5
   16389	1f 01 00 00 00 00 00 00	r1 -= r0
   16390	18 00 00 00 33 33 33 33 00 00 00 00 33 33 33 33	r0 = 0x3333333333333333 ll
   16392	bf 15 00 00 00 00 00 00	r5 = r1
   16393	5f 05 00 00 00 00 00 00	r5 &= r0
   16394	77 01 00 00 02 00 00 00	r1 >>= 0x2
   16395	5f 01 00 00 00 00 00 00	r1 &= r0
   16396	0f 15 00 00 00 00 00 00	r5 += r1
   16397	bf 51 00 00 00 00 00 00	r1 = r5
   16398	77 01 00 00 04 00 00 00	r1 >>= 0x4
   16399	0f 15 00 00 00 00 00 00	r5 += r1
   16400	18 01 00 00 0f 0f 0f 0f 00 00 00 00 0f 0f 0f 0f	r1 = 0xf0f0f0f0f0f0f0f ll
   16402	5f 15 00 00 00 00 00 00	r5 &= r1
   16403	18 01 00 00 01 01 01 01 00 00 00 00 01 01 01 01	r1 = 0x101010101010101 ll
   16405	2f 15 00 00 00 00 00 00	r5 *= r1
   16406	77 05 00 00 38 00 00 00	r5 >>= 0x38
   16407	07 05 00 00 f8 ff ff ff	r5 += -0x8
   16408	1f 54 00 00 00 00 00 00	r4 -= r5
   16409	57 05 00 00 3f 00 00 00	r5 &= 0x3f
   16410	6f 52 00 00 00 00 00 00	r2 <<= r5
   16411	bf 26 00 00 00 00 00 00	r6 = r2

00000000000200e0 <LBB1_38>
   16412	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 80	r1 = -0x8000000000000000 ll
   16414	5f 13 00 00 00 00 00 00	r3 &= r1
   16415	65 04 1e 00 fe 07 00 00	if r4 s> 0x7fe goto +0x1e <LBB1_40>
   16416	b7 01 00 00 01 00 00 00	r1 = 0x1
   16417	6d 41 01 00 00 00 00 00	if r1 s> r4 goto +0x1 <LBB1_41>
   16418	05 00 0d 00 00 00 00 00	goto +0xd <LBB1_44>

0000000000020118 <LBB1_41>
   16419	bf 42 00 00 00 00 00 00	r2 = r4
   16420	07 02 00 00 ff ff ff ff	r2 += -0x1
   16421	57 02 00 00 3f 00 00 00	r2 &= 0x3f
   16422	bf 65 00 00 00 00 00 00	r5 = r6
   16423	6f 25 00 00 00 00 00 00	r5 <<= r2
   16424	b7 02 00 00 01 00 00 00	r2 = 0x1
   16425	55 05 01 00 00 00 00 00	if r5 != 0x0 goto +0x1 <LBB1_43>
   16426	b7 02 00 00 00 00 00 00	r2 = 0x0

0000000000020158 <LBB1_43>
   16427	1f 41 00 00 00 00 00 00	r1 -= r4
   16428	57 01 00 00 3f 00 00 00	r1 &= 0x3f
   16429	7f 16 00 00 00 00 00 00	r6 >>= r1
   16430	4f 26 00 00 00 00 00 00	r6 |= r2
   16431	b7 04 00 00 00 00 00 00	r4 = 0x0

0000000000020180 <LBB1_44>
   16432	bf 61 00 00 00 00 00 00	r1 = r6
   16433	77 01 00 00 03 00 00 00	r1 >>= 0x3
   16434	18 02 00 00 ff ff ff ff 00 00 00 00 ff ff 0f 00	r2 = 0xfffffffffffff ll
   16436	bf 10 00 00 00 00 00 00	r0 = r1
   16437	5f 20 00 00 00 00 00 00	r0 &= r2
   16438	4f 30 00 00 00 00 00 00	r0 |= r3
   16439	67 04 00 00 34 00 00 00	r4 <<= 0x34
   16440	4f 40 00 00 00 00 00 00	r0 |= r4
   16441	57 06 00 00 07 00 00 00	r6 &= 0x7
   16442	b7 02 00 00 05 00 00 00	r2 = 0x5
   16443	2d 62 07 00 00 00 00 00	if r2 > r6 goto +0x7 <LBB1_46>
   16444	07 00 00 00 01 00 00 00	r0 += 0x1
   16445	05 00 04 00 00 00 00 00	goto +0x4 <LBB1_48>

00000000000201f0 <LBB1_40>
   16446	18 01 00 00 00 00 00 00 00 00 00 00 00 00 f0 7f	r1 = 0x7ff0000000000000 ll
   16448	4f 13 00 00 00 00 00 00	r3 |= r1
   16449	bf 30 00 00 00 00 00 00	r0 = r3

0000000000020210 <LBB1_48>
   16450	95 00 00 00 00 00 00 00	exit

0000000000020218 <LBB1_46>
   16451	55 06 fe ff 04 00 00 00	if r6 != 0x4 goto -0x2 <LBB1_48>
   16452	57 01 00 00 01 00 00 00	r1 &= 0x1
   16453	0f 10 00 00 00 00 00 00	r0 += r1
   16454	05 00 fb ff 00 00 00 00	goto -0x5 <LBB1_48>

0000000000020238 <LBB1_13>
   16455	bf 20 00 00 00 00 00 00	r0 = r2
   16456	55 04 f9 ff 00 00 00 00	if r4 != 0x0 goto -0x7 <LBB1_48>
   16457	5f 12 00 00 00 00 00 00	r2 &= r1
   16458	bf 20 00 00 00 00 00 00	r0 = r2
   16459	05 00 f6 ff 00 00 00 00	goto -0xa <LBB1_48>

0000000000020260 <__multi3>
   16460	2f 43 00 00 00 00 00 00	r3 *= r4
   16461	2f 25 00 00 00 00 00 00	r5 *= r2
   16462	0f 35 00 00 00 00 00 00	r5 += r3
   16463	bf 20 00 00 00 00 00 00	r0 = r2
   16464	77 00 00 00 20 00 00 00	r0 >>= 0x20
   16465	bf 43 00 00 00 00 00 00	r3 = r4
   16466	77 03 00 00 20 00 00 00	r3 >>= 0x20
   16467	bf 36 00 00 00 00 00 00	r6 = r3
   16468	2f 06 00 00 00 00 00 00	r6 *= r0
   16469	0f 65 00 00 00 00 00 00	r5 += r6
   16470	67 04 00 00 20 00 00 00	r4 <<= 0x20
   16471	77 04 00 00 20 00 00 00	r4 >>= 0x20
   16472	bf 46 00 00 00 00 00 00	r6 = r4
   16473	2f 06 00 00 00 00 00 00	r6 *= r0
   16474	67 02 00 00 20 00 00 00	r2 <<= 0x20
   16475	77 02 00 00 20 00 00 00	r2 >>= 0x20
   16476	2f 24 00 00 00 00 00 00	r4 *= r2
   16477	bf 40 00 00 00 00 00 00	r0 = r4
   16478	77 00 00 00 20 00 00 00	r0 >>= 0x20
   16479	0f 60 00 00 00 00 00 00	r0 += r6
   16480	bf 06 00 00 00 00 00 00	r6 = r0
   16481	77 06 00 00 20 00 00 00	r6 >>= 0x20
   16482	0f 65 00 00 00 00 00 00	r5 += r6
   16483	2f 23 00 00 00 00 00 00	r3 *= r2
   16484	67 00 00 00 20 00 00 00	r0 <<= 0x20
   16485	77 00 00 00 20 00 00 00	r0 >>= 0x20
   16486	0f 30 00 00 00 00 00 00	r0 += r3
   16487	bf 02 00 00 00 00 00 00	r2 = r0
   16488	77 02 00 00 20 00 00 00	r2 >>= 0x20
   16489	0f 25 00 00 00 00 00 00	r5 += r2
   16490	7b 51 08 00 00 00 00 00	*(u64 *)(r1 + 0x8) = r5
   16491	67 00 00 00 20 00 00 00	r0 <<= 0x20
   16492	67 04 00 00 20 00 00 00	r4 <<= 0x20
   16493	77 04 00 00 20 00 00 00	r4 >>= 0x20
   16494	4f 40 00 00 00 00 00 00	r0 |= r4
   16495	7b 01 00 00 00 00 00 00	*(u64 *)(r1 + 0x0) = r0
   16496	95 00 00 00 00 00 00 00	exit
